<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="QA_AUTOMATION_SOAPUI" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" defaultScriptLanguage="Groovy" activeEnvironment="Default" id="760fb3af-325d-479b-9470-754e063a3946" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="ProjectSettings@hermesConfig">${#System#user.home}\.hermes</con:setting><con:setting id="ProjectSettings@shadowPassword"/><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Sanity"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\Users\vivekk\Desktop\SOAP UI_Harshit"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="SOAPRequestHandlerSoapBinding" type="wsdl" bindingName="{http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0}SOAPRequestHandlerSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://10.61.4.167:8272/axis/services/SOAPRequestHandler ?wsdl" id="429cb0a6-abc5-40d0-9483-64e03c0dffbe" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://192.168.100.5:9272/axis/services/SOAPRequestHandler?wsdl"><con:part><con:url>https://192.168.100.5:9272/axis/services/SOAPRequestHandler?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:impl="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0" xmlns:intf="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--WSDL created by Apache Axis version: 1.3
Built on Oct 05, 2005 (05:23:37 EDT)-->
  <wsdl:types>
    <schema targetNamespace="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="ArrayOf_xsd_string">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="soapenc:string[]"/>
          </restriction>
        </complexContent>
      </complexType>
    </schema>
  </wsdl:types>
  <wsdl:message name="processAsyncRequest">
    <wsdl:part name="in0" type="xsd:string"/>
    <wsdl:part name="in1" type="xsd:string"/>
  </wsdl:message>
  <wsdl:message name="processSyncResponse">
    <wsdl:part name="processSyncReturn" type="impl:ArrayOf_xsd_string"/>
  </wsdl:message>
  <wsdl:message name="processSyncRequest">
    <wsdl:part name="in0" type="xsd:string"/>
    <wsdl:part name="in1" type="xsd:string"/>
  </wsdl:message>
  <wsdl:message name="processAsyncResponse"></wsdl:message>
  <wsdl:portType name="SOAPRequestHandler">
    <wsdl:operation name="processSync" parameterOrder="in0 in1">
      <wsdl:input message="impl:processSyncRequest" name="processSyncRequest"/>
      <wsdl:output message="impl:processSyncResponse" name="processSyncResponse"/>
    </wsdl:operation>
    <wsdl:operation name="processAsync" parameterOrder="in0 in1">
      <wsdl:input message="impl:processAsyncRequest" name="processAsyncRequest"/>
      <wsdl:output message="impl:processAsyncResponse" name="processAsyncResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SOAPRequestHandlerSoapBinding" type="impl:SOAPRequestHandler">
    <wsdlsoap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="processSync">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="processSyncRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="processSyncResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="processAsync">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="processAsyncRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="processAsyncResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SOAPRequestHandlerService">
    <wsdl:port binding="impl:SOAPRequestHandlerSoapBinding" name="SOAPRequestHandler">
      <wsdlsoap:address location="https://192.168.100.5:9272/axis/services/SOAPRequestHandler"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#CHRequestURL}</con:endpoint><con:endpoint>http://10.5.3.187:8272/axis/services/SOAPRequestHandler</con:endpoint><con:endpoint>http://10.61.4.103:8076/axis/services/SOAPRequestHandler</con:endpoint><con:endpoint>http://10.61.4.167:8272/axis/services/SOAPRequestHandler</con:endpoint><con:endpoint>http://10.61.42.19:8001/axis/services/SOAPRequestHandler</con:endpoint><con:endpoint>http://10.61.42.45:8001/axis/services/SOAPRequestHandler</con:endpoint><con:endpoint>http://stomvqachapi.va.neustar.com/axis/services/SOAPRequestHandler</con:endpoint><con:endpoint>https://192.168.100.5:9272/axis/services/SOAPRequestHandler</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="processAsync" bindingOperationName="processAsync" type="Request-Response" outputName="processAsyncResponse" inputName="processAsyncRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f51583b9-3a78-4c28-887b-26d209b35a2e"><con:settings/><con:call name="Request 1" id="7112dd10-7bc8-4c4c-b51c-7240ca76a6e3" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.61.4.167:8272/axis/services/SOAPRequestHandler</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processAsync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xsi:type="xsd:string" xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance">?</in0>
         <in1 xsi:type="xsd:string" xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance">?</in1>
      </ns:processAsync>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0/SOAPRequestHandler/processAsyncRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="processSync" bindingOperationName="processSync" type="Request-Response" outputName="processSyncResponse" inputName="processSyncRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b1c10fa3-14b9-4824-a38e-fd0a85e3e035"><con:settings/><con:call name="Request 1" id="92c60190-84f4-4659-87cb-f776d410dd29" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.61.4.167:8272/axis/services/SOAPRequestHandler</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processSync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <in0 xsi:type="xsd:string" xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance">?</in0>
          <in1 xsi:type="xsd:string" xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance">?</in1>
      </ns:processSync>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0/SOAPRequestHandler/processSyncRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="IxcOrderPortType_SOAPBinding" type="wsdl" bindingName="{http://ixc.com/Order}IxcOrderPortType_SOAPBinding" soapVersion="1_1" anonymous="optional" definition="file:/D:/BASIC_SERVICES/ASRSchemas/ATTResponseWebService.wsdl" id="b882c62b-b544-46f7-998c-0b89d3f54a4a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/D:/BASIC_SERVICES/ASRSchemas/ATTResponseWebService.wsdl"><con:part><con:url>file:/D:/BASIC_SERVICES/ASRSchemas/ATTResponseWebService.wsdl</con:url><con:content><![CDATA[<definitions name="IxcOrder" targetNamespace="http://ixc.com/Order" xmlns:tns="http://ixc.com/Order" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:http-conf="http://schemas.iona.com/transports/http/configuration" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd1="./schemas-asog47/tML.Transport.xsd" xmlns:xsd2="http://www.atis.org/OBF/ASR/UOM-ASR" xmlns:xsd3="http://www.atis.org/OBF/ASR/UOM-ASRNotify">
  <wsdl:import location="./schemas-asog47/UOM-ASR.xsd" namespace="http://www.atis.org/OBF/ASR/UOM-ASR"/>
  <wsdl:import location="./schemas-asog47/UOM-ASRNotify.xsd" namespace="http://www.atis.org/OBF/ASR/UOM-ASRNotify"/>
  <wsdl:import location="./schemas-asog47/tML.Transport.xsd" namespace="http://tml.t1m1.org/tML.Transport.xsd"/>
  <!--MESSAGES-->
  <message name="IxcServiceExceptionMessage">
    <part element="xsd1:tMLHeader" name="exc_header"/>
    <part element="xsd2:EXCEPTION_RESPONSE" name="excRsp"/>
  </message>
  <message name="IxcServiceResponseMessage">
    <part element="xsd1:tMLHeader" name="rsp_header"/>
    <part element="xsd2:ASR_SERVICE_RESPONSE" name="rsp"/>
  </message>
  <message name="IxcServiceConfirmationMessage">
    <part element="xsd1:tMLHeader" name="conf_header"/>
    <part element="xsd3:CONFIRMATION" name="conf"/>
  </message>
  <message name="IxcServiceErrorClarificationMessage">
    <part element="xsd1:tMLHeader" name="eclar_header"/>
    <part element="xsd3:ERROR_CLARIFICATION" name="eclar"/>
  </message>
  <message name="IxcServiceJeopardyNotifyMessage">
    <part element="xsd1:tMLHeader" name="jeono_header"/>
    <part element="xsd3:JEOPARDY_NOTIFY" name="jeono"/>
  </message>
  <message name="IxcServiceOrderInfoNotifyMessage">
    <part element="xsd1:tMLHeader" name="ordinfnotify_header"/>
    <part element="xsd3:ORDER_INFO_NOTIFY" name="ordinfnotify"/>
  </message>
  <message name="IxcDesignNotifyMessage">
    <part element="xsd1:tMLHeader" name="designnotify_header"/>
    <part element="xsd3:DESIGN_NOTIFY" name="designnotify"/>
  </message>
  <message name="OkMessage">
    <part element="xsd1:tMLHeader" name="ok_header"/>
    <part element="xsd1:OK" name="OKbody"/>
  </message>
  <!--PORTS-->
  <portType name="IxcOrderPortType">
    <operation name="processResponse">
      <input message="tns:IxcServiceResponseMessage" name="processRsp"/>
      <output message="tns:OkMessage" name="rspOK"/>
    </operation>
    <operation name="processException">
      <input message="tns:IxcServiceExceptionMessage" name="processExc"/>
      <output message="tns:OkMessage" name="excOK"/>
    </operation>
    <operation name="processConfirmation">
      <input message="tns:IxcServiceConfirmationMessage" name="processConf"/>
      <output message="tns:OkMessage" name="confOK"/>
    </operation>
    <operation name="processErrorClarification">
      <input message="tns:IxcServiceErrorClarificationMessage" name="processErrorClar"/>
      <output message="tns:OkMessage" name="errClarOK"/>
    </operation>
    <operation name="processJeopardyNotify">
      <input message="tns:IxcServiceJeopardyNotifyMessage" name="processJeopNotify"/>
      <output message="tns:OkMessage" name="jeoNotifyOK"/>
    </operation>
    <operation name="processOrderInfoNotify">
      <input message="tns:IxcServiceOrderInfoNotifyMessage" name="processOrdInfoNotify"/>
      <output message="tns:OkMessage" name="ordInfNotifyOK"/>
    </operation>
    <operation name="processDesignNotify">
      <input message="tns:IxcDesignNotifyMessage" name="processDesignNotify"/>
      <output message="tns:OkMessage" name="designNotifyOK"/>
    </operation>
  </portType>
  <!--BINDINGS-->
  <binding name="IxcOrderPortType_SOAPBinding" type="tns:IxcOrderPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="processResponse">
      <soap:operation soapAction="" style="document"/>
      <input name="processRsp">
        <soap:header message="tns:IxcServiceResponseMessage" part="rsp_header" use="literal"/>
        <soap:body parts="rsp" use="literal"/>
      </input>
      <output name="rspOK">
        <soap:header message="tns:OkMessage" part="ok_header" use="literal"/>
        <soap:body parts="OKbody" use="literal"/>
      </output>
    </operation>
    <operation name="processException">
      <soap:operation soapAction="" style="document"/>
      <input name="processExc">
        <soap:header message="tns:IxcServiceExceptionMessage" part="exc_header" use="literal"/>
        <soap:body parts="excRsp" use="literal"/>
      </input>
      <output name="excOK">
        <soap:header message="tns:OkMessage" part="ok_header" use="literal"/>
        <soap:body parts="OKbody" use="literal"/>
      </output>
    </operation>
    <operation name="processConfirmation">
      <soap:operation soapAction="" style="document"/>
      <input name="processConf">
        <soap:header message="tns:IxcServiceConfirmationMessage" part="conf_header" use="literal"/>
        <soap:body parts="conf" use="literal"/>
      </input>
      <output name="confOK">
        <soap:header message="tns:OkMessage" part="ok_header" use="literal"/>
        <soap:body parts="OKbody" use="literal"/>
      </output>
    </operation>
    <operation name="processErrorClarification">
      <soap:operation soapAction="" style="document"/>
      <input name="processErrorClar">
        <soap:header message="tns:IxcServiceErrorClarificationMessage" part="eclar_header" use="literal"/>
        <soap:body parts="eclar" use="literal"/>
      </input>
      <output name="errClarOK">
        <soap:header message="tns:OkMessage" part="ok_header" use="literal"/>
        <soap:body parts="OKbody" use="literal"/>
      </output>
    </operation>
    <operation name="processJeopardyNotify">
      <soap:operation soapAction="" style="document"/>
      <input name="processJeopNotify">
        <soap:header message="tns:IxcServiceJeopardyNotifyMessage" part="jeono_header" use="literal"/>
        <soap:body parts="jeono" use="literal"/>
      </input>
      <output name="jeoNotifyOK">
        <soap:header message="tns:OkMessage" part="ok_header" use="literal"/>
        <soap:body parts="OKbody" use="literal"/>
      </output>
    </operation>
    <operation name="processOrderInfoNotify">
      <soap:operation soapAction="" style="document"/>
      <input name="processOrdInfoNotify">
        <soap:header message="tns:IxcServiceOrderInfoNotifyMessage" part="ordinfnotify_header" use="literal"/>
        <soap:body parts="ordinfnotify" use="literal"/>
      </input>
      <output name="ordInfNotifyOK">
        <soap:header message="tns:OkMessage" part="ok_header" use="literal"/>
        <soap:body parts="OKbody" use="literal"/>
      </output>
    </operation>
    <operation name="processDesignNotify">
      <soap:operation soapAction="" style="document"/>
      <input name="processDesignNotify">
        <soap:header message="tns:IxcDesignNotifyMessage" part="designnotify_header" use="literal"/>
        <soap:body parts="designnotify" use="literal"/>
      </input>
      <output name="designNotifyOK">
        <soap:header message="tns:OkMessage" part="ok_header" use="literal"/>
        <soap:body parts="OKbody" use="literal"/>
      </output>
    </operation>
  </binding>
  <!--SERVICES-->
  <service name="IxcOrderService">
    <port binding="tns:IxcOrderPortType_SOAPBinding" name="IxcOrderSvcPort">
      <soap:address location="http://144.157.204.11:9003/axis/services/ATTASRResponseService"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\E:\p4_work\qa\BasicServices_SoapUI_Automation\ASRSchemas\schemas-asog47\UOM-ASR.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.atis.org/OBF/ASR/UOM-ASR" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.atis.org/OBF/ASR/UOM-ASR">
  <xs:annotation>
    <xs:documentation>This schema was developed under the charter of the
			Alliance for Telecommunications Industry Solutions (ATIS),
			Ordering and Billing Forum (OBF),
			Ordering Solutions Committee,
			Access Service Ordering (ASO) Subcommittee.

			This schema is based on the Access Service Ordering Guidelines (ASOG) Version 47.</xs:documentation>
  </xs:annotation>
  <!--UOM Base contains UOM Top level structures and Field Type Declarations-->
  <xs:include schemaLocation="UOM-Base.xsd"/>
  <!--========================================================================-->
  <!--Begin: UOM-ASR TOP LEVEL-->
  <!--========================================================================-->
  <!--ASR Service Request-->
  <xs:element name="ASR_SERVICE_REQUEST">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:documentation>ASR Service Request

					This class includes uniqueness constraints to ensure that
					multiple ACI, MSL or VC occurrences maintain a unique
					REFNUM value for each occurrence.</xs:documentation>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="SERVICE_REQUEST_Type">
          <xs:sequence>
            <xs:element name="HDR" type="ASR_HDR_ComplexType"/>
            <xs:choice>
              <xs:element ref="CANCEL_SVC"/>
              <xs:element ref="END_USER_EVC_SVC"/>
              <xs:element ref="END_USER_SA_SVC"/>
              <xs:element ref="END_USER_VC_SVC"/>
              <xs:element ref="FEATURE_GROUP_A_SVC"/>
              <xs:element ref="MESSAGETRUNK_SVC"/>
              <xs:element ref="RING_SVC"/>
              <xs:element ref="SS7_LINK_SVC"/>
              <xs:element ref="STANDALONE_EVC_SVC"/>
              <xs:element ref="STANDALONE_TRUNKING_SVC"/>
              <xs:element ref="TRANSPORT_EVC_SVC"/>
              <xs:element ref="TRANSPORT_SVC"/>
              <xs:element ref="TRANSPORT_VC_SVC"/>
              <xs:element ref="WATS_SVC"/>
            </xs:choice>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
    <!--Uniqueness constraints-->
    <xs:unique name="ACI_REFNUM_unique">
      <xs:selector xpath=".//*/ACI"/>
      <xs:field xpath="REFNUM"/>
    </xs:unique>
    <xs:unique name="MSL_REFNUM_unique">
      <xs:selector xpath=".//*/MSL"/>
      <xs:field xpath="REFNUM"/>
    </xs:unique>
    <xs:unique name="VC_VCNUM_unique">
      <xs:selector xpath=".//*/VC/VC_DETAILS"/>
      <xs:field xpath="VCNUM"/>
    </xs:unique>
  </xs:element>
  <!--ASR Service Response-->
  <xs:element name="ASR_SERVICE_RESPONSE" type="ASR_SERVICE_RESPONSE_Type"/>
  <xs:complexType name="ASR_SERVICE_RESPONSE_Type" mixed="false">
    <xs:complexContent mixed="false">
      <xs:extension base="SERVICE_RESPONSE_Type">
        <xs:sequence>
          <xs:element name="HDR" type="ASR_HDR_ComplexType"/>
          <xs:element name="ASRNO" type="ASRNO_Type" minOccurs="0"/>
          <xs:element name="PON" type="PON_Type"/>
          <xs:element name="REQTYP" type="REQTYP_Type"/>
          <xs:element name="VER" type="VER_Type"/>
          <xs:element name="SR_STATE" type="SR_STATE_Type" minOccurs="0"/>
          <xs:element name="REJECTION" type="Error_ComplexType" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="ERROR" type="Error_ComplexType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ASR_HDR_ComplexType" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>ASR Header</description>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="UOM_HDR_Type">
        <xs:sequence>
          <xs:element name="ICSC" type="ICSC_Type"/>
          <xs:element name="ASOG_VER" type="ASOG_VER_Type"/>
          <xs:element name="PASSWORD" type="PASSWORD_Type" minOccurs="0"/>
          <xs:element ref="ASR_BYPASS" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--ASR_BYPASS-->
  <xs:element name="ASR_BYPASS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>ASR Bypass</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="CONTROL" type="CONTROL_Type"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--========================================================================-->
  <!--End: UOM-ASR TOP LEVEL-->
  <!--========================================================================-->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--ASR_SERVICE_REQUEST Structures-->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--CANCEL_SVC-->
  <xs:element name="CANCEL_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>CANCEL</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ADMIN"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--END_USER_EVC_SVC-->
  <xs:element name="END_USER_EVC_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>End User Special Access Ethernet Virtual Connections</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="EUSA"/>
        <xs:element ref="EVC"/>
        <xs:element ref="NAI" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--END_USER_SA_SVC-->
  <xs:element name="END_USER_SA_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>End User Special Access</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="EUSA"/>
        <xs:element ref="NAI" minOccurs="0"/>
        <xs:choice minOccurs="0">
          <xs:element ref="ACI" maxOccurs="unbounded"/>
          <xs:element ref="MSL" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:element ref="MULTI_EC" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--END_USER_VC_SVC-->
  <xs:element name="END_USER_VC_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>End User Special Access Virtual Connections</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="EUSA"/>
        <xs:element ref="NAI" minOccurs="0"/>
        <xs:element ref="VC" minOccurs="0"/>
        <xs:element ref="MULTI_EC" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--FEATURE_GROUP_A_SVC-->
  <xs:element name="FEATURE_GROUP_A_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Feature Group A</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="FGA"/>
        <xs:element ref="NAI" minOccurs="0"/>
        <xs:choice minOccurs="0">
          <xs:element ref="ACI" maxOccurs="unbounded"/>
          <xs:element ref="MSL" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:element ref="MULTI_EC" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--MESSAGETRUNK_SVC-->
  <xs:element name="MESSAGETRUNK_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Message Trunk Feature Group BCD</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="TRUNKING"/>
        <xs:element ref="NAI" minOccurs="0"/>
        <xs:element ref="ACI" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="TQ" minOccurs="0"/>
        <xs:element ref="EOD" minOccurs="0"/>
        <xs:element ref="MULTI_EC" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--RING_SVC-->
  <xs:element name="RING_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Ring</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="RING"/>
        <xs:element ref="NAI" minOccurs="0"/>
        <xs:element ref="ARI" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="MULTI_EC" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
    <xs:unique name="ARI_REFNUM_unique">
      <xs:selector xpath=".//ARI"/>
      <xs:field xpath="REFNUM"/>
    </xs:unique>
  </xs:element>
  <!--SS7_LINK_SVC-->
  <xs:element name="SS7_LINK_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>SS7 Link</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="TRUNKING"/>
        <xs:element ref="NAI" minOccurs="0"/>
        <xs:element ref="ACI" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="TQ" minOccurs="0"/>
        <xs:element ref="MULTI_EC" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--STANDALONE_EVC_SVC-->
  <xs:element name="STANDALONE_EVC_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Standalone Ethernet Virtual Connections</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="EVC"/>
        <xs:element ref="MULTI_EC" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--STANDALONE_TRUNKING_SVC-->
  <xs:element name="STANDALONE_TRUNKING_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Message Trunk Standalone Request</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="TQ" minOccurs="0"/>
        <xs:element ref="EOD" minOccurs="0"/>
        <xs:element ref="ECI_ASR_LEVEL" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TRANSPORT_EVC_SVC-->
  <xs:element name="TRANSPORT_EVC_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Transport Ethernet Virtual Connections</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="TRANSPORT"/>
        <xs:element ref="EVC"/>
        <xs:element ref="NAI" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TRANSPORT_SVC-->
  <xs:element name="TRANSPORT_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Transport Special Access</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="TRANSPORT"/>
        <xs:element ref="NAI" minOccurs="0"/>
        <xs:choice minOccurs="0">
          <xs:element ref="ACI" maxOccurs="unbounded"/>
          <xs:element ref="MSL" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:element ref="MULTI_EC" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TRANSPORT_VC_SVC-->
  <xs:element name="TRANSPORT_VC_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Transport Virtual Connections</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="TRANSPORT"/>
        <xs:element ref="NAI" minOccurs="0"/>
        <xs:element ref="VC" minOccurs="0"/>
        <xs:element ref="MULTI_EC" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--WATS_SVC-->
  <xs:element name="WATS_SVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>WATS</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASR"/>
        <xs:element ref="WAL"/>
        <xs:choice minOccurs="0">
          <xs:element ref="ACI" maxOccurs="unbounded"/>
          <xs:element ref="MSL" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:element ref="MULTI_EC" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--ASOG Form Structures-->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--ACI Form-->
  <xs:element name="ACI">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Additional Circuit Information</description>
          <ATIS_OBF_ASR_Practice>007</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="REFNUM" type="IndexNumber4_Type"/>
        <xs:element name="CKR" type="CKR_Type" minOccurs="0"/>
        <xs:element name="CKTACT" type="ACT_Type" minOccurs="0"/>
        <xs:element name="CFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="DIR" type="DIR_Type" minOccurs="0"/>
        <xs:element name="CPT" type="CPT_Type" minOccurs="0"/>
        <xs:element name="CFAU" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="HBAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="CKR1" type="CKR1_Type" minOccurs="0"/>
        <xs:element name="TSP" type="TSP_Type" minOccurs="0"/>
        <xs:element name="SCFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="SDIR" type="DIR_Type" minOccurs="0"/>
        <xs:element name="SCFAU" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="TCIC" type="TCIC_Type" minOccurs="0"/>
        <xs:element name="CCEA" type="CCEA_Type" minOccurs="0"/>
        <xs:element name="SEC_JKCODE" type="JK_CODE_Type" minOccurs="0"/>
        <xs:element name="SEC_PCA" type="PCA_Type" minOccurs="0"/>
        <xs:element name="JKNUM" type="JKNUM_Type" minOccurs="0"/>
        <xs:element name="JKPOS" type="JKPOS_Type" minOccurs="0"/>
        <xs:element name="SEC_JS" type="JS_Type" minOccurs="0"/>
        <xs:element name="NHNI" type="NHNI_Type" minOccurs="0"/>
        <xs:element name="NHN" type="NHN_Type" minOccurs="0"/>
        <xs:element name="RORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="S25C" type="LEGS25C_Type" minOccurs="0"/>
        <xs:element name="ER" type="ER_Type" minOccurs="0"/>
        <xs:element name="ECCKT" type="ECCKT53_Type" minOccurs="0"/>
        <xs:element name="TRN_START" type="TRN_Type" minOccurs="0"/>
        <xs:element name="TRN_END" type="TRN_Type" minOccurs="0"/>
        <xs:element name="SCCEA" type="CCEA_Type" minOccurs="0"/>
        <xs:element name="PRI_JKCODE" type="JK_CODE_Type" minOccurs="0"/>
        <xs:element name="PRI_PCA" type="PCA_Type" minOccurs="0"/>
        <xs:element name="PRI_JS" type="JS_Type" minOccurs="0"/>
        <xs:element name="WACD1" type="WACD_Type" minOccurs="0"/>
        <xs:element name="WACD2" type="WACD_Type" minOccurs="0"/>
        <xs:element name="SMJK_PRI" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="SMJK_SEC" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="ASG" type="ASG_Type" minOccurs="0"/>
        <xs:element name="CRO" type="ORD_Type" minOccurs="0"/>
        <xs:element name="CRO2" type="ORD_Type" minOccurs="0"/>
        <xs:element name="RECCKT" type="ECCKT42_Type" minOccurs="0"/>
        <xs:element name="IP_ADDRESS" type="IPVN_Type" minOccurs="0"/>
        <xs:element name="IPAI" type="IPAI_Type" minOccurs="0"/>
        <xs:element name="SUBNET_MASK" type="IPV4_Type" minOccurs="0"/>
        <xs:element name="ES" type="EgressScheduler_Type" minOccurs="0"/>
        <xs:element name="PROFE" type="Profile_Type" minOccurs="0"/>
        <xs:element name="PROFI" type="Profile_Type" minOccurs="0"/>
        <xs:element name="BUM" type="BUM_Type" minOccurs="0"/>
        <xs:element name="BI" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="DIVCKT" type="ECCKT36_Type" minOccurs="0"/>
        <xs:element name="DIVPON" type="PON_Type" minOccurs="0"/>
        <xs:element ref="NAI_CIRCUIT_DETAILS" minOccurs="0"/>
        <xs:element ref="VCAT" minOccurs="0"/>
        <xs:element ref="ECI_CKT_LEVEL" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--ARI Form-->
  <xs:element name="ARI">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Additional Ring Information</description>
          <ATIS_OBF_ASR_Practice>022</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="REFNUM" type="IndexNumber4_Type"/>
        <xs:element name="NC" type="NC_Type" minOccurs="0"/>
        <xs:element name="NCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="SR" type="SR_Type" minOccurs="0"/>
        <xs:element name="SECNCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="PORTS" type="PORTS_Type" minOccurs="0"/>
        <xs:element name="CFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="SEGACT" type="ACT_Type" minOccurs="0"/>
        <xs:element name="INCH" type="INCH_Type" minOccurs="0"/>
        <xs:element name="NMO" type="NMO_Type" minOccurs="0"/>
        <xs:element name="SPEC" type="SPEC_Type" minOccurs="0"/>
        <xs:element name="ECCKT" type="ECCKT36_Type" minOccurs="0"/>
        <xs:element name="CKR" type="CKR_Type" minOccurs="0"/>
        <xs:element name="PRILOC" type="CLLI_or_SALI_Type" minOccurs="0"/>
        <xs:element name="PRILOC_SPOT" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="PRILOC_NID" type="PRILOC_NID_Type" minOccurs="0"/>
        <xs:element name="PRILOC_OTC" type="OTC_Type" minOccurs="0"/>
        <xs:element name="SECLOC" type="CLLI_or_EU_Type" minOccurs="0"/>
        <xs:element name="SECLOC_SPOT" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SECLOC_PNO" type="PNO_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="SALI" minOccurs="0"/>
        <xs:element ref="NAI_CIRCUIT_DETAILS" minOccurs="0"/>
        <xs:element ref="PORTS_CONFIG" minOccurs="0"/>
        <xs:element ref="VCAT" minOccurs="0"/>
        <xs:element ref="ECI_CKT_LEVEL" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--ASR Form-->
  <xs:element name="ASR">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Access Service Request Administrative</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ADMIN"/>
        <xs:element ref="BILLING" minOccurs="0"/>
        <xs:element ref="CONTACT" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--ASR Form, ADMIN Section-->
  <xs:element name="ADMIN">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Administrative</description>
          <ATIS_OBF_ASR_Practice>001</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="CCNA" type="CNA_Type"/>
        <xs:element name="PON" type="PON_Type"/>
        <xs:element name="VER" type="VER_Type"/>
        <xs:element name="ASRNO" type="ASRNO_Type" minOccurs="0"/>
        <xs:element name="SPA" type="SPA_Type" minOccurs="0"/>
        <xs:element name="ICSC" type="ICSC_Type"/>
        <xs:element name="CC" type="CC_Type" minOccurs="0"/>
        <xs:element name="UNE" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="D_SENT" type="Date_Type" minOccurs="0"/>
        <xs:element name="T_SENT" type="Time_Type" minOccurs="0"/>
        <xs:element name="QA" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CBD" type="CBD_Type" minOccurs="0"/>
        <xs:element name="DDD" type="Date_Type" minOccurs="0"/>
        <xs:element name="FDT" type="TIMEZONE_Type" minOccurs="0"/>
        <xs:element name="PROJECT" type="PROJECT_Type" minOccurs="0"/>
        <xs:element name="CCI" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CNO" type="CNO_Type" minOccurs="0"/>
        <xs:element name="PPTD" type="Date_Type" minOccurs="0"/>
        <xs:element name="NOR" type="NOR_Type" minOccurs="0"/>
        <xs:element name="LUP" type="UsagePercentage_Type" minOccurs="0"/>
        <xs:element name="BSA" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="REQTYP" type="REQTYP_Type"/>
        <xs:element name="ACT" type="ACT_Type"/>
        <xs:element name="ACTI" type="ACT_Type" minOccurs="0"/>
        <xs:element name="QSA" type="QTY2_Type" minOccurs="0"/>
        <xs:element name="WST" type="WST_Type" minOccurs="0"/>
        <xs:element name="LATA" type="LATA_Type" minOccurs="0"/>
        <xs:element name="EVCI" type="EVCI_Type" minOccurs="0"/>
        <xs:element name="SRN" type="SRN_Type" minOccurs="0"/>
        <xs:element name="RTR" type="RTR_Type"/>
        <xs:element name="SUP" type="SUP_Type" minOccurs="0"/>
        <xs:element name="AFO" type="AFO_Type" minOccurs="0"/>
        <xs:element name="QNAI" type="QTY2_Type" minOccurs="0"/>
        <xs:element name="TQ" type="TQ_Type" minOccurs="0"/>
        <xs:element name="EXP" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="EDA" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="AENG" type="AENG_Type" minOccurs="0"/>
        <xs:element name="ALBR" type="ALBR_Type" minOccurs="0"/>
        <xs:element name="AGAUTH" type="AGAUTH_Type" minOccurs="0"/>
        <xs:element name="DATED" type="Date_Type" minOccurs="0"/>
        <xs:element name="CUST" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="LA" type="LA_Type" minOccurs="0"/>
        <xs:element name="LADATED" type="Date_Type" minOccurs="0"/>
        <xs:element name="LANM" type="Contact_Type" minOccurs="0"/>
        <xs:element name="JPR" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="NAG" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="FBA" type="FBA_Type" minOccurs="0"/>
        <xs:element name="FNI" type="FNI_Type" minOccurs="0"/>
        <xs:element name="FNT" type="FNT_Type" minOccurs="0"/>
        <xs:element name="RFNI" type="FNI_Type" minOccurs="0"/>
        <xs:element name="CFNI" type="CFNI_Type" minOccurs="0"/>
        <xs:element name="PSL" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="PSLI" type="PSLI_Type" minOccurs="0"/>
        <xs:element name="CKR" type="CKR_Type" minOccurs="0"/>
        <xs:element name="UNIT" type="UNIT_Type" minOccurs="0"/>
        <xs:element name="PIU" type="UsagePercentage_Type" minOccurs="0"/>
        <xs:element name="PLU" type="UsagePercentage_Type" minOccurs="0"/>
        <xs:element name="WSI" type="WSI_Type" minOccurs="0"/>
        <xs:element name="LTP" type="LTP_Type" minOccurs="0"/>
        <xs:element name="ECCKT" type="ECCKT53_Type" minOccurs="0"/>
        <xs:element name="QTY" type="QTY_Type" minOccurs="0"/>
        <xs:element name="BAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="ASG" type="ASG_Type" minOccurs="0"/>
        <xs:element name="BIC" type="BIC_Type" minOccurs="0"/>
        <xs:element name="BIC_TEL" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="BIC_ID" type="BIC_ID_Type" minOccurs="0"/>
        <xs:element name="TSC" type="TSC_Type" minOccurs="0"/>
        <xs:element name="ISTN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="ACTL" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="APOT" type="CLLI_or_Narrative_Type" minOccurs="0"/>
        <xs:element name="RORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="RPON" type="PON_Type" minOccurs="0"/>
        <xs:element name="LAG" type="LAG_Type" minOccurs="0"/>
        <xs:element name="CCVN" type="CCVN_Type" minOccurs="0"/>
        <xs:element name="ASC_EC" type="ASC_EC_Type" minOccurs="0"/>
        <xs:element name="TSP" type="TSP_Type" minOccurs="0"/>
        <xs:element name="SAN" type="SAN_Type" minOccurs="0"/>
        <xs:element name="AFG" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="SPEC" type="SPEC_Type" minOccurs="0"/>
        <xs:element name="ASR_REMARKS" type="Remarks186_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--ASR Form, BILLING Section-->
  <xs:element name="BILLING">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Billing</description>
          <ATIS_OBF_ASR_Practice>001</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="BILLNM" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="SBILLNM" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="ACNA" type="CNA_Type" minOccurs="0"/>
        <xs:element name="TE" type="TE_Type" minOccurs="0"/>
        <xs:element name="FUSF" type="TE_Type" minOccurs="0"/>
        <xs:element name="EBP" type="EBP_Type" minOccurs="0"/>
        <xs:element name="BILL_STR" type="STREET_Type" minOccurs="0"/>
        <xs:element name="BILL_FL" type="FLOOR_Type" minOccurs="0"/>
        <xs:element name="BILL_RM" type="ROOM_Type" minOccurs="0"/>
        <xs:element name="BILL_CITY" type="CITY25_Type" minOccurs="0"/>
        <xs:element name="BILL_STATE" type="STATE_Type" minOccurs="0"/>
        <xs:element name="BILL_ZIP" type="ZIP_Type" minOccurs="0"/>
        <xs:element name="BILLCON" type="Contact_Type" minOccurs="0"/>
        <xs:element name="BILLCON_TEL" type="TelNumberExt17_Type" minOccurs="0"/>
        <xs:element name="BILLCON_EMAIL" type="EMAIL_Type" minOccurs="0"/>
        <xs:element name="VTA" type="VTA_Type" minOccurs="0"/>
        <xs:element name="VCVTA" type="VTA_Type" minOccurs="0"/>
        <xs:element name="IWBAN" type="IWBAN_Type" minOccurs="0"/>
        <xs:element name="PNUM" type="PNUM_Type" minOccurs="0"/>
        <xs:element name="PSD" type="Date_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--ASR Form, CONTACT Section-->
  <xs:element name="CONTACT">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Contact</description>
          <ATIS_OBF_ASR_Practice>001</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="INIT" type="Contact_Type" minOccurs="0"/>
        <xs:element name="INITIATOR_TEL" type="TelNumberExt17_Type" minOccurs="0"/>
        <xs:element name="INIT_FAX_NO" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="INIT_EMAIL" type="EMAIL_Type" minOccurs="0"/>
        <xs:element name="DSGCON" type="Contact_Type" minOccurs="0"/>
        <xs:element name="DSGCON_TEL" type="TelNumberExt17_Type" minOccurs="0"/>
        <xs:element name="DSG_FAX_NO" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="DSG_EMAIL" type="EMAIL_Type" minOccurs="0"/>
        <xs:element name="DSGCON_STR" type="STREET_Type" minOccurs="0"/>
        <xs:element name="DRC" type="DRC_Type" minOccurs="0"/>
        <xs:element name="FDRC" type="FDRC_Type" minOccurs="0"/>
        <xs:element name="DSGCON_FL" type="FLOOR_Type" minOccurs="0"/>
        <xs:element name="DSGCON_RM" type="ROOM_Type" minOccurs="0"/>
        <xs:element name="DSGCON_CITY" type="CITY25_Type" minOccurs="0"/>
        <xs:element name="DSGCON_STATE" type="STATE_Type" minOccurs="0"/>
        <xs:element name="DSGCON_ZIP" type="ZIP_Type" minOccurs="0"/>
        <xs:element name="CB_TEL_NO" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="CBPC" type="CBPC_Type" minOccurs="0"/>
        <xs:element name="MTCE_CONTACT" type="MTCE_CONTACT_Type" minOccurs="0"/>
        <xs:element name="MTCE_TEL" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="MTCE_EMAIL" type="EMAIL_Type" minOccurs="0"/>
        <xs:element name="IMPCON" type="Contact_Type" minOccurs="0"/>
        <xs:element name="IMPCON_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--ECI Form, ASR Level-->
  <xs:element name="ECI_ASR_LEVEL">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Enhanced Customer Interface: Company Specific ASR Level Record 1 and Record 2</description>
          <ATIS_OBF_ASR_Practice>025</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="ABC" type="ABC_Type" minOccurs="0"/>
        <xs:element name="CO" type="CO_Type" minOccurs="0"/>
        <xs:element name="CHPD" type="CHPD_Type" minOccurs="0"/>
        <xs:element name="NSLB" type="NSLB_Type" minOccurs="0"/>
        <xs:element name="NON_SUB" type="NON_SUB_Type" minOccurs="0"/>
        <xs:element name="VTA2" type="VTA_Type" minOccurs="0"/>
        <xs:element name="VTA3" type="VTA_Type" minOccurs="0"/>
        <xs:element name="CFA2" type="CFA_Type" minOccurs="0"/>
        <xs:element name="CFA3" type="CFA_Type" minOccurs="0"/>
        <xs:element name="CFA4" type="CFA_Type" minOccurs="0"/>
        <xs:element name="RPON2" type="PON_Type" minOccurs="0"/>
        <xs:element name="RPON3" type="PON_Type" minOccurs="0"/>
        <xs:element name="RPON4" type="PON_Type" minOccurs="0"/>
        <xs:element name="SAL" type="SAL_Type" minOccurs="0"/>
        <xs:element name="CBO" type="CBO_Type" minOccurs="0"/>
        <xs:element name="NSB" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="ODID" type="ODID_Type" minOccurs="0"/>
        <xs:element name="SST" type="SST_Type" minOccurs="0"/>
        <xs:element name="TPL" type="TPL_Type" minOccurs="0"/>
        <xs:element name="STN" type="TelNumber12_Type" minOccurs="0"/>
        <xs:element name="RC6BX" type="RC6BX_Type" minOccurs="0"/>
        <xs:element name="NOJA1" type="NOJA1_Type" minOccurs="0"/>
        <xs:element name="DIDR2" type="DIDR_Type" minOccurs="0"/>
        <xs:element name="DIDR3" type="DIDR_Type" minOccurs="0"/>
        <xs:element name="DIDR4" type="DIDR_Type" minOccurs="0"/>
        <xs:element name="DIDR5" type="DIDR_Type" minOccurs="0"/>
        <xs:element name="P8J" type="P8J_Type" minOccurs="0"/>
        <xs:element name="P8K" type="P8K_Type" minOccurs="0"/>
        <xs:element name="P8L" type="P8L_Type" minOccurs="0"/>
        <xs:element name="VEN" type="VEN_Type" minOccurs="0"/>
        <xs:element name="DIST" type="DIST_Type" minOccurs="0"/>
        <xs:element name="FBAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="FCUS" type="FCUS_Type" minOccurs="0"/>
        <xs:element name="TGN" type="TGN_Type" minOccurs="0"/>
        <xs:element name="RTI" type="ECI_RTI_Type" minOccurs="0"/>
        <xs:element name="EOI" type="EOI_Type" minOccurs="0"/>
        <xs:element name="NUMP" type="NUMP_Type" minOccurs="0"/>
        <xs:element name="SS7UB" type="SS7UB_Type" minOccurs="0"/>
        <xs:element name="TOGP" type="TOGP_Type" minOccurs="0"/>
        <xs:element name="AECN" type="AECN_Type" minOccurs="0"/>
        <xs:element name="TPTGN" type="TPTGN_Type" minOccurs="0"/>
        <xs:element name="TIA" type="TIA_Type" minOccurs="0"/>
        <xs:element name="MPON" type="PON_Type" minOccurs="0"/>
        <xs:element name="ICNI" type="ICNI_Type" minOccurs="0"/>
        <xs:element name="TRS" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="BTN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="USDO2" type="USDO2_Type" minOccurs="0"/>
        <xs:element name="SAED" type="Date_Type" minOccurs="0"/>
        <xs:element name="SAI" type="SAI_Type" minOccurs="0"/>
        <xs:element name="TSACT" type="ACT_Type" minOccurs="0"/>
        <xs:element name="TPNA" type="CNA_Type" minOccurs="0"/>
        <xs:element name="TRANS" type="TRANS_Type" minOccurs="0"/>
        <xs:element name="OPACT_1" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="OPACT_2" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="OPACT_3" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="OPACT_4" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="OPACT_5" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="OPACT_6" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="OPACT_7" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="OPACT_8" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="OPACT_9" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="DPACT_1" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="DPACT_2" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="DPACT_3" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="DPACT_4" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="DPACT_5" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="DPACT_6" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="DPACT_7" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="DPACT_8" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="DPACT_9" type="PointCodeActivity_Type" minOccurs="0"/>
        <xs:element name="OPC_1" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="OPC_2" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="OPC_3" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="OPC_4" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="OPC_5" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="OPC_6" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="OPC_7" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="OPC_8" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="OPC_9" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="DPC_1" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="DPC_2" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="DPC_3" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="DPC_4" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="DPC_5" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="DPC_6" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="DPC_7" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="DPC_8" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="DPC_9" type="PointCode_Type" minOccurs="0"/>
        <xs:element name="DISPREQ" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="RESVLOOP" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CPO_EBD" type="Date6_Type" minOccurs="0"/>
        <xs:element name="LSRSPEC" type="LSRSPEC_Type" minOccurs="0"/>
        <xs:element name="SUBSPEC" type="SUBSPEC_Type" minOccurs="0"/>
        <xs:element name="DDTEST" type="DDTEST_Type" minOccurs="0"/>
        <xs:element name="ATR_CON" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="LSRN" type="LSRN_Type" minOccurs="0"/>
        <xs:element name="LOOP_ORD" type="ORD_Short_Type" minOccurs="0"/>
        <xs:element name="NP_ORD" type="ORD_Short_Type" minOccurs="0"/>
        <xs:element name="SON" type="SON_Type" minOccurs="0"/>
        <xs:element name="APPTIME" type="AppTimeCode_Type" minOccurs="0"/>
        <xs:element name="SM" type="SM_Type" minOccurs="0"/>
        <xs:element name="PEND_ORD" type="ORD_Short_Type" minOccurs="0"/>
        <xs:element name="SM2" type="SM_Type" minOccurs="0"/>
        <xs:element name="SM3" type="SM_Type" minOccurs="0"/>
        <xs:element name="SM4" type="SM_Type" minOccurs="0"/>
        <xs:element name="SM5" type="SM_Type" minOccurs="0"/>
        <xs:element name="SM6" type="SM_Type" minOccurs="0"/>
        <xs:element name="SM7" type="SM_Type" minOccurs="0"/>
        <xs:element name="CMLG" type="CMLG_Type" minOccurs="0"/>
        <xs:element name="VZB" type="VZB_Type" minOccurs="0"/>
        <xs:element name="ACAT" type="ACAT_Type" minOccurs="0"/>
        <xs:element name="ACPON" type="PON_Type" minOccurs="0"/>
        <xs:element name="CDR" type="CDR_Type" minOccurs="0"/>
        <xs:element name="CONFIG_REMARKS" type="Remarks250_Type" minOccurs="0"/>
        <xs:element name="CPEV" type="CPEV_Type" minOccurs="0"/>
        <xs:element name="EA_TYPE" type="EA_Type" minOccurs="0"/>
        <xs:element name="EXPNM" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="NWKSTAT" type="NK_Type" minOccurs="0"/>
        <xs:element name="PER" type="PER_Type" minOccurs="0"/>
        <xs:element name="QOPT" type="QOPT_Type" minOccurs="0"/>
        <xs:element name="SALESCON" type="Contact_Type" minOccurs="0"/>
        <xs:element name="SALESCON_EMAIL" type="EMAIL_Type" minOccurs="0"/>
        <xs:element name="SALESCON_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="SAR" type="SAR_Type" minOccurs="0"/>
        <xs:element name="ECI_FIELD" type="ECI_FIELD_ComplexType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--ECI Form, Circuit Level-->
  <xs:element name="ECI_CKT_LEVEL">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Company Specific CKT Level</description>
          <ATIS_OBF_ASR_Practice>025</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="CCNFG" type="CCNFG_Type" minOccurs="0"/>
        <xs:element name="XOCD" type="XOCD_Type" minOccurs="0"/>
        <xs:element name="VCIOCD" type="VCIOCD_Type" minOccurs="0"/>
        <xs:element name="VPIOCD" type="VPIOCD_Type" minOccurs="0"/>
        <xs:element name="PROF" type="ProfileCodeSet_Type" minOccurs="0"/>
        <xs:element name="LSNP_TN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="LOSS_TN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="SUBST" type="SUBST_Type" minOccurs="0"/>
        <xs:element name="COND_SPEC" type="COND_SPEC_Type" minOccurs="0"/>
        <xs:element name="LOOP_LEN" type="LOOP_LEN_Type" minOccurs="0"/>
        <xs:element name="BHC" type="BHC_Type" minOccurs="0"/>
        <xs:element name="DCIR" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="TIER" type="TIER_Type" minOccurs="0"/>
        <xs:element name="TNT" type="TNT_Type" minOccurs="0"/>
        <xs:element name="ELTN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="E911ID" type="Date_Type" minOccurs="0"/>
        <xs:element name="CBAN" type="CBAN_Type" minOccurs="0"/>
        <xs:element name="IFID" type="IFID_Type" minOccurs="0"/>
        <xs:element name="ITID" type="ITID_Type" minOccurs="0"/>
        <xs:element name="ASN" type="SystemNumber_Type" minOccurs="0"/>
        <xs:element name="CCAT" type="CCAT_Type" minOccurs="0"/>
        <xs:element name="CFAPA" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CSHIELD" type="CSHIELD_Type" minOccurs="0"/>
        <xs:element name="EAID" type="ECCKT28_Type" minOccurs="0"/>
        <xs:element name="EXDI" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="ICID" type="ECCKT28_Type" minOccurs="0"/>
        <xs:element name="OPTCON" type="OPTCON_Type" minOccurs="0"/>
        <xs:element name="PWRT" type="POWER_SUPPLY_Type" minOccurs="0"/>
        <xs:element name="TRM" type="TRM_Type" minOccurs="0"/>
        <xs:element name="VLAN_TAG" type="VLAN_Type" minOccurs="0"/>
        <xs:element name="VPN_NM" type="VPN_NAME_Type" minOccurs="0"/>
        <xs:element name="ECI_FIELD" type="ECI_FIELD_ComplexType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EOD Form-->
  <xs:element name="EOD">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>End Office Detail</description>
          <ATIS_OBF_ASR_Practice>014</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="EOD_USE" type="EOD_USE_Type" minOccurs="0"/>
        <xs:element name="TK_QTY" type="TK_QTY_Type" minOccurs="0"/>
        <xs:element name="ACC_TANDEM" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="ORIG_TRF" type="TDM_Traffic_Type" minOccurs="0"/>
        <xs:element name="TERM_TRF" type="TDM_Traffic_Type" minOccurs="0"/>
        <xs:element name="UNITS" type="UNITS_Type" minOccurs="0"/>
        <xs:element name="TRFTYP" type="TRFTYP_Type" minOccurs="0"/>
        <xs:element name="TSC" type="TSC_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="EO_DATA" minOccurs="0" maxOccurs="533"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EOD Form, EO_DATA Section-->
  <xs:element name="EO_DATA">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>End Office</description>
          <ATIS_OBF_ASR_Practice>014</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="EO_ACT" type="ACT_Type" minOccurs="0"/>
        <xs:element name="END_OFF" type="CLLI_or_Narrative_Type" minOccurs="0"/>
        <xs:element name="ORIG" type="EO_Traffic_Type" minOccurs="0"/>
        <xs:element name="TERM" type="EO_Traffic_Type" minOccurs="0"/>
        <xs:element name="TSC" type="TSC_Type" minOccurs="0"/>
        <xs:element name="ANI" type="ANI_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EUSA Form-->
  <xs:element name="EUSA">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>End User Special Access Service</description>
          <ATIS_OBF_ASR_Practice>013</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="EUSA_SVC_DETAILS" minOccurs="0"/>
        <xs:element ref="EUSA_PRILOC" minOccurs="0"/>
        <xs:element ref="EUSA_SECLOC" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EUSA Form, EUSA_SVC_DETAILS Section-->
  <xs:element name="EUSA_SVC_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>End User Special Access Service</description>
          <ATIS_OBF_ASR_Practice>013</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="NC" type="NC_Type" minOccurs="0"/>
        <xs:element name="NCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="PRILOC_TLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="SECLOC_TLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="SECNCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="SR" type="SR_Type" minOccurs="0"/>
        <xs:element name="SSS" type="SSS_Type" minOccurs="0"/>
        <xs:element name="PRILOC_TRF" type="TRF_Type" minOccurs="0"/>
        <xs:element name="HVP" type="HVP_Type" minOccurs="0"/>
        <xs:element name="PRILOC_MST" type="MST_Type" minOccurs="0"/>
        <xs:element name="CKLT" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="NSL" type="QTY2_Type" minOccurs="0"/>
        <xs:element name="MUXLOC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="PRI_ADM" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SEC_ADM" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="NVC" type="QTY2_Type" minOccurs="0"/>
        <xs:element name="PSPEED" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="LMP" type="LMP_Type" minOccurs="0"/>
        <xs:element name="N_U" type="N_U_Type" minOccurs="0"/>
        <xs:element name="BSC" type="BSC_Type" minOccurs="0"/>
        <xs:element name="ETET" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CTX_TEL" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="CTX_NAME" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="LAG_ID" type="ECCKT28_Type" minOccurs="0"/>
        <xs:element name="LAG_P" type="LAGP_Type" minOccurs="0"/>
        <xs:element name="WACD1" type="WACD_Type" minOccurs="0"/>
        <xs:element name="WACD2" type="WACD_Type" minOccurs="0"/>
        <xs:element name="ES" type="EgressScheduler_Type" minOccurs="0"/>
        <xs:element name="PROFE" type="Profile_Type" minOccurs="0"/>
        <xs:element name="PROFI" type="Profile_Type" minOccurs="0"/>
        <xs:element name="BUM" type="BUM_Type" minOccurs="0"/>
        <xs:element name="BI" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="SBDW" type="InformationRate8_Type" minOccurs="0"/>
        <xs:element name="DIVCKT" type="ECCKT36_Type" minOccurs="0"/>
        <xs:element name="DIVPON" type="PON_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="VCAT" minOccurs="0"/>
        <xs:element ref="ECI_ASR_LEVEL" minOccurs="0"/>
        <xs:element ref="ECI_CKT_LEVEL" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EUSA Form, EUSA_PRILOC Section-->
  <xs:element name="EUSA_PRILOC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Primary Location Service</description>
          <ATIS_OBF_ASR_Practice>013</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="PRILOC" type="CLLI_or_SALI_Type" minOccurs="0"/>
        <xs:element name="CFAU" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="DIR" type="DIR_Type" minOccurs="0"/>
        <xs:element name="CPT" type="CPT_Type" minOccurs="0"/>
        <xs:element name="PRILOC_S25" type="S25_Type" minOccurs="0"/>
        <xs:element name="ER" type="ER_Type" minOccurs="0"/>
        <xs:element name="PRILOC_OTC" type="OTC_Type" minOccurs="0"/>
        <xs:element name="CCEA" type="CCEA_Type" minOccurs="0"/>
        <xs:element name="GETO" type="GETO_Type" minOccurs="0"/>
        <xs:element name="GBTN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="GCON" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="GTEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="IP_ADDRESS" type="IPVN_Type" minOccurs="0"/>
        <xs:element name="IPAI" type="IPAI_Type" minOccurs="0"/>
        <xs:element name="SUBNET_MASK" type="IPV4_Type" minOccurs="0"/>
        <xs:element ref="PORTS_CONFIG" minOccurs="0"/>
        <xs:element ref="SALI" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EUSA Form, EUSA_SECLOC Section-->
  <xs:element name="EUSA_SECLOC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Secondary Location Service</description>
          <ATIS_OBF_ASR_Practice>013</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="SECLOC" type="CLLI_or_SALI_Type" minOccurs="0"/>
        <xs:element name="SEI" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CFAU" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="SDIR" type="DIR_Type" minOccurs="0"/>
        <xs:element name="SFNI" type="FNI_Type" minOccurs="0"/>
        <xs:element name="SMUXLOC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SCCEA" type="CCEA_Type" minOccurs="0"/>
        <xs:element name="S25" type="S25_Type" minOccurs="0"/>
        <xs:element name="ER" type="ER_Type" minOccurs="0"/>
        <xs:element name="SECLOC_OTC" type="OTC_Type" minOccurs="0"/>
        <xs:element name="GETO" type="GETO_Type" minOccurs="0"/>
        <xs:element name="GBTN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="GCON" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="GTEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element ref="PORTS_CONFIG" minOccurs="0"/>
        <xs:element ref="SALI" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EVC Form-->
  <xs:element name="EVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Ethernet Virtual Connection</description>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="EVC_DETAILS"/>
        <xs:element ref="ECI_ASR_LEVEL" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EVC Form, EVC_DETAILS Section-->
  <xs:element name="EVC_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Ethernet Virtual Connection</description>
          <ATIS_OBF_ASR_Practice>016</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="EVCNUM" type="IndexNumber4_Type"/>
        <xs:element name="NC" type="NC_Type" minOccurs="0"/>
        <xs:element name="EVCID" type="ECCKT28_Type" minOccurs="0"/>
        <xs:element name="NUT" type="QTY2_Type" minOccurs="0"/>
        <xs:element name="SVP" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="EVCCKR" type="CKR_Type" minOccurs="0"/>
        <xs:element ref="UNI_MAPPING" minOccurs="0" maxOccurs="20"/>
        <xs:element ref="ECI_CKT_LEVEL" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EVC Form, UNI_MAPPING Section-->
  <xs:element name="UNI_MAPPING">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Ethernet Virtual Connection UNI Mapping Detail</description>
          <ATIS_OBF_ASR_Practice>016</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="UREF" type="IndexNumber2_Type"/>
        <xs:element name="EI" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="AUNT" type="AUNT_Type" minOccurs="0"/>
        <xs:element name="UACT" type="ACT_Type" minOccurs="0"/>
        <xs:element name="RPON" type="PON_Type" minOccurs="0"/>
        <xs:element name="NCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="L2CP" type="L2CP_Type" minOccurs="0"/>
        <xs:element name="EVCSP" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="RUID" type="ECCKT28_Type" minOccurs="0"/>
        <xs:element name="RL" type="RL_Type" minOccurs="0"/>
        <xs:element name="EVCMPID" type="ECCKT42_Type" minOccurs="0"/>
        <xs:element name="OTC" type="OTC_Type" minOccurs="0"/>
        <xs:element ref="SVLAN_MAPPING" minOccurs="0" maxOccurs="3"/>
        <xs:element ref="CEVLAN_MAPPING" minOccurs="0" maxOccurs="10"/>
        <xs:element ref="LREF_MAPPING" minOccurs="0" maxOccurs="5"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EVC Form, SVLAN_MAPPING Section-->
  <xs:element name="SVLAN_MAPPING">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Service Virtual Local Area Network Mapping Detail</description>
          <ATIS_OBF_ASR_Practice>016</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="S_VACT" type="ACT_Type" minOccurs="0"/>
        <xs:element ref="S_VLAN"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EVC Form, CEVLAN_MAPPING Section-->
  <xs:element name="CEVLAN_MAPPING">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Customer Edge Virtual Local Area Network Mapping Detail</description>
          <ATIS_OBF_ASR_Practice>016</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="VACT" type="ACT_Type" minOccurs="0"/>
        <xs:element ref="CE_VLAN"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EVC Form, LREF_MAPPING Section-->
  <xs:element name="LREF_MAPPING">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Ethernet Virtual Connection Level of Service Mapping Detail</description>
          <ATIS_OBF_ASR_Practice>016</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="LREF" type="IndexNumber1_Type"/>
        <xs:element name="LOSACT" type="ACT_Type" minOccurs="0"/>
        <xs:element name="LOS" type="LOS_Type" minOccurs="0"/>
        <xs:element name="SPEC" type="SPEC_Type" minOccurs="0"/>
        <xs:element name="P_BIT" type="P_BIT_Type" minOccurs="0"/>
        <xs:element name="BDW" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="DSCP" type="DSCP_Type" minOccurs="0"/>
        <xs:element name="TOS" type="TOS_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--FGA Form-->
  <xs:element name="FGA">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>FGA Service</description>
          <ATIS_OBF_ASR_Practice>002</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="FGA_SVC_DETAILS" minOccurs="0"/>
        <xs:element ref="FGA_SVC_OPTIONS" minOccurs="0"/>
        <xs:element ref="FGA_LOCATION" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--FGA Form, FGA_SVC_DETAILS Section-->
  <xs:element name="FGA_SVC_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>FGA Service</description>
          <ATIS_OBF_ASR_Practice>002</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="NC" type="NC_Type" minOccurs="0"/>
        <xs:element name="NCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="TLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="DESIRED_TN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="PIC" type="PreSubInd_Type" minOccurs="0"/>
        <xs:element name="SECTLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="FPI" type="FPI_Type" minOccurs="0"/>
        <xs:element name="LPIC" type="LPIC_Type" minOccurs="0"/>
        <xs:element name="CFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="CFAU" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CPT" type="CPT_Type" minOccurs="0"/>
        <xs:element name="HBAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="NC1" type="NC_Type" minOccurs="0"/>
        <xs:element name="CKR1" type="CKR1_Type" minOccurs="0"/>
        <xs:element name="SCFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="MUXLOC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="RECCKT" type="ECCKT42_Type" minOccurs="0"/>
        <xs:element name="FIMPTEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="ECI_ASR_LEVEL" minOccurs="0"/>
        <xs:element ref="ECI_CKT_LEVEL" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--FGA Form, FGA_SVC_OPTIONS Section-->
  <xs:element name="FGA_SVC_OPTIONS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>FGA Service Options</description>
          <ATIS_OBF_ASR_Practice>002</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="SR" type="SR_Short_Type" minOccurs="0"/>
        <xs:element name="DRL" type="DRL_Type" minOccurs="0"/>
        <xs:element name="GETO" type="GETO_Type" minOccurs="0"/>
        <xs:element name="CAD" type="CAD_Type" minOccurs="0"/>
        <xs:element name="TBE" type="TBE_Type" minOccurs="0"/>
        <xs:element name="SCD" type="SCD_Type" minOccurs="0"/>
        <xs:element name="ASU" type="ASU_Type" minOccurs="0"/>
        <xs:element name="CFW" type="CFW_Type" minOccurs="0"/>
        <xs:element name="CWG" type="CWG_Type" minOccurs="0"/>
        <xs:element name="CND" type="CND_Type" minOccurs="0"/>
        <xs:element name="HWL" type="HWL_Type" minOccurs="0"/>
        <xs:element name="MWI" type="MWI_Type" minOccurs="0"/>
        <xs:element name="HNTYP" type="HNTYP_Type" minOccurs="0"/>
        <xs:element name="NHNI" type="NHNI_Type" minOccurs="0"/>
        <xs:element name="QUE" type="QUE_Type" minOccurs="0"/>
        <xs:element name="DID" type="DID_Type" minOccurs="0"/>
        <xs:element name="SPC" type="SPC_Type" minOccurs="0"/>
        <xs:element name="TWC" type="TWC_Type" minOccurs="0"/>
        <xs:element name="SMDI" type="SMDI_Type" minOccurs="0"/>
        <xs:element name="MBA" type="MBA_Type" minOccurs="0"/>
        <xs:element name="IEX" type="IEX_Type" minOccurs="0"/>
        <xs:element name="RCF" type="RCF_Type" minOccurs="0"/>
        <xs:element name="PDN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="HPF" type="HPF_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--FGA Form, FGA_LOCATION Section-->
  <xs:element name="FGA_LOCATION">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Location</description>
          <ATIS_OBF_ASR_Practice>002</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="SECLOC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="NSL" type="QTY2_Type" minOccurs="0"/>
        <xs:element name="TNC_TO_TN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="TNC_PER" type="TNC_PER_Type" minOccurs="0"/>
        <xs:element name="LOCBAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="EUCON" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="EUCON_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--MEC Form-->
  <xs:element name="MULTI_EC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Multi EC</description>
          <ATIS_OBF_ASR_Practice>018</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="ASC_EC_DETAILS" minOccurs="0"/>
        <xs:element ref="PROMOTIONAL_CONTRACT" minOccurs="0" maxOccurs="3"/>
        <xs:element ref="OTHER_EC_DETAILS" minOccurs="0" maxOccurs="182"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--MEC Form, ASC_EC_DETAILS Section-->
  <xs:element name="ASC_EC_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Access Svc Coordination Co Detail</description>
          <ATIS_OBF_ASR_Practice>018</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="ICSC" type="ICSC_Type" minOccurs="0"/>
        <xs:element name="BAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="HBAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="ASRNO" type="ASRNO_Type" minOccurs="0"/>
        <xs:element name="ASG" type="ASG_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--MEC Form, PROMOTIONAL_CONTRACT Section-->
  <xs:element name="PROMOTIONAL_CONTRACT">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Promotional Contract</description>
          <ATIS_OBF_ASR_Practice>018</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="ICSC" type="ICSC_Type" minOccurs="0"/>
        <xs:element name="OEC_PNUM" type="PNUM_Type" minOccurs="0"/>
        <xs:element name="OEC_PSD" type="Date_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--MEC Form, OTHER_EC_DETAILS Section-->
  <xs:element name="OTHER_EC_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Other Exchange Company</description>
          <ATIS_OBF_ASR_Practice>018</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="ICSC" type="ICSC_Type" minOccurs="0"/>
        <xs:element name="OEC_ACT" type="ACT_Type" minOccurs="0"/>
        <xs:element name="BAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="HBAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="OECVTA" type="VTA_Type" minOccurs="0"/>
        <xs:element name="ASG" type="ASG_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--MSL Form-->
  <xs:element name="MSL">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Multipoint Service Legs</description>
          <ATIS_OBF_ASR_Practice>006</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="REFNUM" type="IndexNumber4_Type"/>
        <xs:element name="LEGACT" type="ACT_Type" minOccurs="0"/>
        <xs:element name="LEGCKLT" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="LEGNUM" type="LEGNUM_Type" minOccurs="0"/>
        <xs:element name="LEGSEG" type="LEGSEG_Type" minOccurs="0"/>
        <xs:element name="LEGNC" type="NC_Type" minOccurs="0"/>
        <xs:element name="LEGSECNCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="LEGSECTLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="LEGMST" type="MST_Type" minOccurs="0"/>
        <xs:element name="LEGTRF" type="TRF_Type" minOccurs="0"/>
        <xs:element name="LEGS25C" type="LEGS25C_Type" minOccurs="0"/>
        <xs:element name="ER" type="ER_Type" minOccurs="0"/>
        <xs:element name="RORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="SCFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="OTC" type="OTC_Type" minOccurs="0"/>
        <xs:element name="SECLOC" type="CLLI_or_SALI_Type" minOccurs="0"/>
        <xs:element name="GETO" type="GETO_Type" minOccurs="0"/>
        <xs:element name="GBTN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="GCON" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="GTEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="SALI" minOccurs="0"/>
        <xs:element ref="ECI_CKT_LEVEL" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--NAI Form-->
  <xs:element name="NAI">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Network Assignment Information</description>
          <ATIS_OBF_ASR_Practice>024</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="NAI_ASR_LEVEL" minOccurs="0"/>
        <xs:element ref="NAI_CIRCUIT_DETAILS" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--NAI Form, NAI_ASR_LEVEL Section-->
  <xs:element name="NAI_ASR_LEVEL">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Network Assignment Information (ASR Level)</description>
          <ATIS_OBF_ASR_Practice>024</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="AFACTL" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="ACFA" type="CFA_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--NAI Form, NAI_CIRCUIT_DETAILS Section-->
  <xs:element name="NAI_CIRCUIT_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Network Assignment Information (Circuit Level)</description>
          <ATIS_OBF_ASR_Practice>024</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="DPEAA" type="DPEA_Type" minOccurs="0"/>
        <xs:element name="VTIA" type="VTI_Type" minOccurs="0"/>
        <xs:element name="FNIA" type="FNI_NAI_Type" minOccurs="0"/>
        <xs:element name="DPEAZ" type="DPEA_Type" minOccurs="0"/>
        <xs:element name="VTIZ" type="VTI_Type" minOccurs="0"/>
        <xs:element name="FNIZ" type="FNI_NAI_Type" minOccurs="0"/>
        <xs:element name="ICFA1" type="CFA_Type" minOccurs="0"/>
        <xs:element name="ICFAU1" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="DIR1" type="DIR_Type" minOccurs="0"/>
        <xs:element name="IFNI1" type="FNI_Type" minOccurs="0"/>
        <xs:element name="ICFA2" type="CFA_Type" minOccurs="0"/>
        <xs:element name="ICFAU2" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="DIR2" type="DIR_Type" minOccurs="0"/>
        <xs:element name="IFNI2" type="FNI_Type" minOccurs="0"/>
        <xs:element name="ICFA3" type="CFA_Type" minOccurs="0"/>
        <xs:element name="ICFAU3" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="DIR3" type="DIR_Type" minOccurs="0"/>
        <xs:element name="IFNI3" type="FNI_Type" minOccurs="0"/>
        <xs:element name="ICFA4" type="CFA_Type" minOccurs="0"/>
        <xs:element name="ICFAU4" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="DIR4" type="DIR_Type" minOccurs="0"/>
        <xs:element name="IFNI4" type="FNI_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--PC Form-->
  <xs:element name="PORTS_CONFIG">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Ports Configuration</description>
          <ATIS_OBF_ASR_Practice>012</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="PI" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="PQPR" type="QPR_Type" minOccurs="0"/>
        <xs:element name="QPR" type="QPR_Type" minOccurs="0"/>
        <xs:element ref="PC_DETAILS" maxOccurs="99"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--PC Form, PC_DETAILS Section-->
  <xs:element name="PC_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Ports Configuration Details</description>
          <ATIS_OBF_ASR_Practice>012</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="PREF" type="IndexNumber2_Type"/>
        <xs:element name="PTYP" type="PTYP_Type"/>
        <xs:element name="PQTY" type="PQTY_Type"/>
        <xs:element name="EQP" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="MODE" type="MODE_Type" minOccurs="0"/>
        <xs:element name="PWR" type="PWR_Type" minOccurs="0"/>
        <xs:element name="WAVELENGTH" type="WAVELENGTH_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--RING Form-->
  <xs:element name="RING">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Ring Service</description>
          <ATIS_OBF_ASR_Practice>021</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="RING_SVC_DETAILS" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--RING Form, RING_SVC_DETAILS Section-->
  <xs:element name="RING_SVC_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Ring Service</description>
          <ATIS_OBF_ASR_Practice>021</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="NC" type="NC_Type" minOccurs="0"/>
        <xs:element name="NCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="SR" type="SR_Type" minOccurs="0"/>
        <xs:element name="SECNCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="PORTS" type="PORTS_Type" minOccurs="0"/>
        <xs:element name="CFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="SEGACT" type="ACT_Type" minOccurs="0"/>
        <xs:element name="INCH" type="INCH_Type" minOccurs="0"/>
        <xs:element name="RMP" type="RMP_Type" minOccurs="0"/>
        <xs:element name="NMO" type="NMO_Type" minOccurs="0"/>
        <xs:element name="SPEC" type="SPEC_Type" minOccurs="0"/>
        <xs:element name="PRILOC" type="CLLI_or_SALI_Type" minOccurs="0"/>
        <xs:element name="PRILOC_SPOT" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="PRILOC_PNO" type="PNO_Type" minOccurs="0"/>
        <xs:element name="PRILOC_OTC" type="OTC_Type" minOccurs="0"/>
        <xs:element name="PRILOC_NID" type="PRILOC_NID_Type" minOccurs="0"/>
        <xs:element name="SECLOC" type="CLLI_or_EU_Type" minOccurs="0"/>
        <xs:element name="SECLOC_SPOT" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SECLOC_PNO" type="PNO_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="SALI" minOccurs="0"/>
        <xs:element ref="PORTS_CONFIG" minOccurs="0"/>
        <xs:element ref="VCAT" minOccurs="0"/>
        <xs:element ref="ECI_ASR_LEVEL" minOccurs="0"/>
        <xs:element ref="ECI_CKT_LEVEL" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--SALI Form-->
  <xs:element name="SALI">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Service Address Information</description>
          <ATIS_OBF_ASR_Practice>015</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="PI" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="EUNAME" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="ADDR" type="Address_ComplexType"/>
        <xs:element name="NCON" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="AAI" type="AAI_Type" minOccurs="0"/>
        <xs:element name="JK_CODE" type="JK_CODE_Type" minOccurs="0"/>
        <xs:element name="JK_NUM" type="JKNUM_Type" minOccurs="0"/>
        <xs:element name="JK_POS" type="JKPOS_Type" minOccurs="0"/>
        <xs:element name="JS" type="JS_Type" minOccurs="0"/>
        <xs:element name="SMJK" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="PCA" type="PCA_Type" minOccurs="0"/>
        <xs:element name="SI" type="SI_Type" minOccurs="0"/>
        <xs:element name="SPOT" type="CLLI_or_Narrative_Type" minOccurs="0"/>
        <xs:element name="ICOL" type="ICOL_Type" minOccurs="0"/>
        <xs:element name="LCON" type="Contact_Type" minOccurs="0"/>
        <xs:element name="ACTEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="AACTEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="ACPGN" type="TelNumber12_Type" minOccurs="0"/>
        <xs:element name="ACPPN" type="ACPPN_Type" minOccurs="0"/>
        <xs:element name="LCON_EMAIL" type="EMAIL_Type" minOccurs="0"/>
        <xs:element name="ALCON" type="Contact_Type" minOccurs="0"/>
        <xs:element name="ALCON_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="AALCON_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="ALCON_EMAIL" type="EMAIL_Type" minOccurs="0"/>
        <xs:element name="ACC" type="ACC_Type" minOccurs="0"/>
        <xs:element name="WKTEL" type="TelNumber_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form-->
  <xs:element name="TQ">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Translation Questionnaire</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="TECHCON" type="Contact_Type" minOccurs="0"/>
        <xs:element name="TECHCON_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="COMMON_MATRIX" minOccurs="0"/>
        <xs:element ref="FGD" minOccurs="0"/>
        <xs:element ref="ROUTING_MATRIX" minOccurs="0"/>
        <xs:element ref="ROUTING_MATRIX_EX" minOccurs="0"/>
        <xs:element ref="SACNXX" minOccurs="0"/>
        <xs:element ref="INTER_TRANS_RTG" minOccurs="0"/>
        <xs:element ref="TQ_TESTING" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, COMMON_MATRIX Section-->
  <xs:element name="COMMON_MATRIX">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Common Section Matrix</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="COMMON_MATRIX_ROW" minOccurs="0" maxOccurs="4"/>
      </xs:sequence>
    </xs:complexType>
    <xs:unique name="REF_unique">
      <xs:selector xpath=".//COMMON_MATRIX_ROW"/>
      <xs:field xpath="REF"/>
    </xs:unique>
  </xs:element>
  <!--TQ Form, COMMON_MATRIX_ROW Section-->
  <xs:element name="COMMON_MATRIX_ROW">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Common Section Matrix Row per REF=A,B,C,D</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="REF" type="REF_Type"/>
        <xs:element name="TGACT" type="ACT_Type" minOccurs="0"/>
        <xs:element name="TGTYP" type="TGTYP_Type" minOccurs="0"/>
        <xs:element name="TSC" type="TSC_Type" minOccurs="0"/>
        <xs:element name="APON" type="PON_Type" minOccurs="0"/>
        <xs:element name="DIR" type="TQDIR_Type" minOccurs="0"/>
        <xs:element name="ANI" type="ANI_Type" minOccurs="0"/>
        <xs:element name="DAACC" type="DAACC_Type" minOccurs="0"/>
        <xs:element name="TKSEQ" type="TKSEQ_Type" minOccurs="0"/>
        <xs:element name="GLARE" type="GLARE_Type" minOccurs="0"/>
        <xs:element name="TESTANI" type="TESTANI_Type" minOccurs="0"/>
        <xs:element name="TKSIG" type="TKSIG_Type" minOccurs="0"/>
        <xs:element name="SACNON" type="SACNON_Type" minOccurs="0"/>
        <xs:element name="OT" type="OT_Type" minOccurs="0"/>
        <xs:element name="OVLP" type="OVLP_Type" minOccurs="0"/>
        <xs:element name="CTO" type="CTO_Type" minOccurs="0"/>
        <xs:element name="OSAC" type="OSAC_Type" minOccurs="0"/>
        <xs:element name="NDO" type="NDO_Type" minOccurs="0"/>
        <xs:element name="CSP" type="CSP_Type" minOccurs="0"/>
        <xs:element name="CPN" type="CPN_Type" minOccurs="0"/>
        <xs:element name="CIP" type="CIP_Type" minOccurs="0"/>
        <xs:element name="VSC" type="VSC_Type" minOccurs="0"/>
        <xs:element name="FACT" type="FACT_Type" minOccurs="0"/>
        <xs:element name="ALTREF" type="ALTREF_Type" minOccurs="0"/>
        <xs:element ref="TQ950" minOccurs="0" maxOccurs="3"/>
        <xs:element name="BRAND" type="BRAND_Type" minOccurs="0"/>
        <xs:element name="ANNC" type="ANNC_Type" minOccurs="0"/>
        <xs:element name="CCW" type="CCW_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, TQ950 Section-->
  <xs:element name="TQ950">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>950-XXXX Access</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="FACT_950" type="FACT_Type" minOccurs="0"/>
        <xs:element name="XXXX" type="TelNumber4_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, FGD Section-->
  <xs:element name="FGD">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Feature Group D</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="CIC" type="CIC_Type" minOccurs="0"/>
        <xs:element name="ACIC" type="CIC_Type" minOccurs="0" maxOccurs="39"/>
        <xs:element name="CCLASS" type="CCLASS_Type" minOccurs="0"/>
        <xs:element name="INTRA" type="INTRA_Type" minOccurs="0"/>
        <xs:element name="INTER" type="INTER_Type" minOccurs="0"/>
        <xs:element name="COIN_EA" type="COIN_EA_Type" minOccurs="0"/>
        <xs:element name="ATP" type="ATP_Type" minOccurs="0"/>
        <xs:element name="BCR3" type="TrunkGroup_Ref_or_TSC_Type" minOccurs="0"/>
        <xs:element name="BCR5" type="TrunkGroup_Ref_or_TSC_Type" minOccurs="0"/>
        <xs:element name="BCR6" type="TrunkGroup_Ref_or_TSC_Type" minOccurs="0"/>
        <xs:element name="M64" type="M64_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, ROUTING_MATRIX Section-->
  <xs:element name="ROUTING_MATRIX">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>TQ Routing Matrix</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="R_MATRIX_ROW" minOccurs="0" maxOccurs="12"/>
      </xs:sequence>
    </xs:complexType>
    <xs:unique name="ANI_II_unique">
      <xs:selector xpath=".//R_MATRIX_ROW"/>
      <xs:field xpath="ANI_II"/>
    </xs:unique>
  </xs:element>
  <!--TQ Form, R_MATRIX_ROW Section-->
  <xs:element name="R_MATRIX_ROW">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>TQ Routing Matrix Row</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="ANI_II" type="ANI_II_Type"/>
        <xs:element ref="SERV_PREFIX" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, SERV_PREFIX Section-->
  <xs:element name="SERV_PREFIX">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>TQ Routing Matrix Service Prefixes</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="SERV_PREF_ALL" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_1" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_0" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_00" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_011" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_01" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_1_700" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_0_700" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_8YY" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_1_9YY" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_0_9YY" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_1_5YY" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_0_5YY" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_0_L" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_411" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_LPDA" type="TrunkGroup_X_Type" minOccurs="0"/>
        <xs:element name="SERV_PREF_0_L_INTRA" type="TrunkGroup_X_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, ROUTING_MATRIX_EX Section-->
  <xs:element name="ROUTING_MATRIX_EX">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Routing Exception Matrix</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="R_MATRIX_EX_ROW" minOccurs="0" maxOccurs="10"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, R_MATRIX_EX Section-->
  <xs:element name="R_MATRIX_EX_ROW">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>TQ Routing Exception Matrix Row</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="ANI_II" type="ANI_II_EX_Type"/>
        <xs:element name="LINE_CLASS" type="LINE_CLASS_Type" minOccurs="0"/>
        <xs:element ref="SERV_PREFIX" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, SACNXX Section-->
  <xs:element name="SACNXX">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Service Access Code NXX</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="CIC" type="CIC_Type" minOccurs="0"/>
        <xs:element name="TESTANI" type="TESTANI_Type" minOccurs="0"/>
        <xs:element name="TECHCON" type="Contact_Type" minOccurs="0"/>
        <xs:element name="TECHCON_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element ref="SAC_INFO" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, SAC_INFO Section-->
  <xs:element name="SAC_INFO">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Service Access Code Information</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="SAC_ACT" type="SAC_ACT_Type" minOccurs="0"/>
        <xs:element name="SAC" type="NPA_Type" minOccurs="0"/>
        <xs:element name="APON" type="PON_Type" minOccurs="0"/>
        <xs:element name="TEST_TN" type="TelNumber4_Type" minOccurs="0"/>
        <xs:element name="TEST_RESP" type="TEST_RESP_Type" minOccurs="0"/>
        <xs:element ref="SAC_NXX" minOccurs="0" maxOccurs="112"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, SAC_NXX Section-->
  <xs:element name="SAC_NXX">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Service Access Code NXX</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="NXX" type="NXX_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, INTER_TRANS_RTG Section-->
  <xs:element name="INTER_TRANS_RTG">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Interconnection Translation Routing</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="TECHCON" type="Contact_Type" minOccurs="0"/>
        <xs:element name="TECHCON_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="TTEST_TN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="TTEST_RESP" type="TEST_RESP_Type" minOccurs="0"/>
        <xs:element name="LRN_G" type="LRN_Type" minOccurs="0"/>
        <xs:element name="ARLRN" type="NPANXX_Type" minOccurs="0"/>
        <xs:element ref="NPANXXMTX" minOccurs="0" maxOccurs="90"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, NPANXXMTX Section-->
  <xs:element name="NPANXXMTX">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Interconnection (IC) Translation Routing</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="CNPANXX" type="NPANXX_Type" minOccurs="0"/>
        <xs:element name="LRN" type="LRN_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, TQ_TESTING Section-->
  <xs:element name="TQ_TESTING">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>TQ Testing</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="TTEST_TN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="TTEST_RESP" type="TEST_RESP_Type" minOccurs="0"/>
        <xs:element ref="TQ_ATEST" minOccurs="0" maxOccurs="4"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TQ Form, TQ_ATEST Section-->
  <xs:element name="TQ_ATEST">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>TQ ATEST</description>
          <ATIS_OBF_ASR_Practice>019</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="ATTEST_TN" type="NSTN_Type" minOccurs="0"/>
        <xs:element name="ATTEST_RESP" type="TEST_RESP_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TRANSPORT Form-->
  <xs:element name="TRANSPORT">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Special Access</description>
          <ATIS_OBF_ASR_Practice>005</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="NC" type="NC_Type" minOccurs="0"/>
        <xs:element name="NCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="TLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="SECNCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="SECTLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="SR" type="SR_Type" minOccurs="0"/>
        <xs:element name="S25" type="S25_Type" minOccurs="0"/>
        <xs:element name="ER" type="ER_Type" minOccurs="0"/>
        <xs:element name="SSS" type="SSS_Type" minOccurs="0"/>
        <xs:element name="ATN" type="ATN_Type" minOccurs="0"/>
        <xs:element name="TRF" type="TRF_Type" minOccurs="0"/>
        <xs:element name="MST" type="MST_Type" minOccurs="0"/>
        <xs:element name="HVP" type="HVP_Type" minOccurs="0"/>
        <xs:element name="OTC" type="OTC_Type" minOccurs="0"/>
        <xs:element name="CKLT" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="NSL" type="QTY2_Type" minOccurs="0"/>
        <xs:element name="CFAU" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="DIR" type="DIR_Type" minOccurs="0"/>
        <xs:element name="CPT" type="CPT_Type" minOccurs="0"/>
        <xs:element name="MUXLOC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SCFAU" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="SCFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="SDIR" type="DIR_Type" minOccurs="0"/>
        <xs:element name="SECLOC" type="CLLI_or_SALI_Type" minOccurs="0"/>
        <xs:element name="SEI" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="ICOL" type="ICOL_Type" minOccurs="0"/>
        <xs:element name="HBAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="SFNI" type="FNI_Type" minOccurs="0"/>
        <xs:element name="PRI_ADM" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SEC_ADM" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SMUXLOC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="NVC" type="QTY2_Type" minOccurs="0"/>
        <xs:element name="PSPEED" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="LMP" type="LMP_Type" minOccurs="0"/>
        <xs:element name="N_U" type="N_U_Type" minOccurs="0"/>
        <xs:element name="BSC" type="BSC_Type" minOccurs="0"/>
        <xs:element name="ETET" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CCEA" type="CCEA_Type" minOccurs="0"/>
        <xs:element name="SCCEA" type="CCEA_Type" minOccurs="0"/>
        <xs:element name="GETO" type="GETO_Type" minOccurs="0"/>
        <xs:element name="GBTN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="GCON" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="GCON_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="CTX_TEL" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="CTX_NAME" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="LAG_ID" type="ECCKT28_Type" minOccurs="0"/>
        <xs:element name="LAG_P" type="LAGP_Type" minOccurs="0"/>
        <xs:element name="WACD1" type="WACD_Type" minOccurs="0"/>
        <xs:element name="WACD2" type="WACD_Type" minOccurs="0"/>
        <xs:element name="IP_ADDRESS" type="IPVN_Type" minOccurs="0"/>
        <xs:element name="IPAI" type="IPAI_Type" minOccurs="0"/>
        <xs:element name="SUBNET_MASK" type="IPV4_Type" minOccurs="0"/>
        <xs:element name="ES" type="EgressScheduler_Type" minOccurs="0"/>
        <xs:element name="PROFE" type="Profile_Type" minOccurs="0"/>
        <xs:element name="PROFI" type="Profile_Type" minOccurs="0"/>
        <xs:element name="BUM" type="BUM_Type" minOccurs="0"/>
        <xs:element name="BI" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="SBDW" type="InformationRate8_Type" minOccurs="0"/>
        <xs:element name="DIVCKT" type="ECCKT36_Type" minOccurs="0"/>
        <xs:element name="DIVPON" type="PON_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="SALI" minOccurs="0"/>
        <xs:element ref="PORTS_CONFIG" minOccurs="0" maxOccurs="2"/>
        <xs:element ref="VCAT" minOccurs="0"/>
        <xs:element ref="ECI_ASR_LEVEL" minOccurs="0"/>
        <xs:element ref="ECI_CKT_LEVEL" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TRUNKING Form-->
  <xs:element name="TRUNKING">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Trunking Service</description>
          <ATIS_OBF_ASR_Practice>004</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="TRUNK_SVC_DETAILS" minOccurs="0"/>
        <xs:element ref="TRUNK_SVC_OPT" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TRUNKING Form, TRUNK_SVC_DETAILS Section-->
  <xs:element name="TRUNK_SVC_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Trunking Service</description>
          <ATIS_OBF_ASR_Practice>004</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="NC" type="NC_Type" minOccurs="0"/>
        <xs:element name="NCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="TLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="TTT" type="TTT_Type" minOccurs="0"/>
        <xs:element name="QACI" type="QACI_Type" minOccurs="0"/>
        <xs:element name="TRFTYP" type="TRFTYP_Type" minOccurs="0"/>
        <xs:element name="SECTLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="CIC" type="CIC_Type" minOccurs="0"/>
        <xs:element name="TRN_START" type="TRN_Type" minOccurs="0"/>
        <xs:element name="TRN_END" type="TRN_Type" minOccurs="0"/>
        <xs:element name="TCIC" type="TCIC_Type" minOccurs="0"/>
        <xs:element name="NS" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="PSAP" type="PSAP_Type" minOccurs="0"/>
        <xs:element name="ESN" type="ESN_Type" minOccurs="0"/>
        <xs:element name="WACD1" type="WACD_Type" minOccurs="0"/>
        <xs:element name="RECCKT" type="ECCKT53_Type" minOccurs="0"/>
        <xs:element name="RECCKT2" type="ECCKT53_Type" minOccurs="0"/>
        <xs:element name="PRI_ADM" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SEC_ADM" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="CFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="CFAU" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CPT" type="CPT_Type" minOccurs="0"/>
        <xs:element name="D_NPA_NXX" type="NPANXX_Type" minOccurs="0"/>
        <xs:element name="SECLOC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="MUXLOC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="CSL" type="CLLI_or_Narrative_Type" minOccurs="0"/>
        <xs:element name="CST" type="CST_Type" minOccurs="0"/>
        <xs:element name="CSPC" type="SP_Type" minOccurs="0"/>
        <xs:element name="SMUXLOC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SCFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="HBAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="SFNI" type="FNI_Type" minOccurs="0"/>
        <xs:element name="CCEA" type="CCEA_Type" minOccurs="0"/>
        <xs:element name="CKR1" type="CKR1_Type" minOccurs="0"/>
        <xs:element name="FACTL" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="NC1" type="NC_Type" minOccurs="0"/>
        <xs:element name="FIMPTEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="LT" type="LT_Type" minOccurs="0"/>
        <xs:element name="SLC" type="SLC_Type" minOccurs="0"/>
        <xs:element name="APC" type="APC_Type" minOccurs="0"/>
        <xs:element name="TSC2" type="TSC_Type" minOccurs="0"/>
        <xs:element name="TSC3" type="TSC_Type" minOccurs="0"/>
        <xs:element name="TSC4" type="TSC_Type" minOccurs="0"/>
        <xs:element ref="SSP" minOccurs="0" maxOccurs="8"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="PORTS_CONFIG" minOccurs="0"/>
        <xs:element ref="ECI_ASR_LEVEL" minOccurs="0"/>
        <xs:element ref="ECI_CKT_LEVEL" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TRUNKING Form, SSP Section-->
  <xs:element name="SSP">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Service Signaling Point</description>
          <ATIS_OBF_ASR_Practice>004</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="SSPC" type="SP_Type" minOccurs="0"/>
        <xs:element name="SSPC_TYPE" type="SSPC_TYPE_Type" minOccurs="0"/>
        <xs:element name="PCU" type="PCU_Type" minOccurs="0"/>
        <xs:element name="PC_TYP" type="PC_TYP_Type" minOccurs="0"/>
        <xs:element name="SSN" type="SubSystemNumber_Type" minOccurs="0"/>
        <xs:element name="TTN" type="TTN_Type" minOccurs="0"/>
        <xs:element name="SSPC_LOC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="PCNA" type="CNA_Type" minOccurs="0"/>
        <xs:element name="TSPC" type="SP_Type" minOccurs="0"/>
        <xs:element name="TSPC_LOC" type="CLLI_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--TRUNKING Form, TRUNK_SVC_OPT Section-->
  <xs:element name="TRUNK_SVC_OPT">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Service Options</description>
          <ATIS_OBF_ASR_Practice>004</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="SCRT" type="SCRT_Type" minOccurs="0"/>
        <xs:element name="SR" type="SR_Short_Type" minOccurs="0"/>
        <xs:element name="MBA" type="MBA_Type" minOccurs="0"/>
        <xs:element name="OPS" type="OPS_Type" minOccurs="0"/>
        <xs:element name="GETO" type="GETO_Type" minOccurs="0"/>
        <xs:element name="CDND" type="CDND_Type" minOccurs="0"/>
        <xs:element name="DIDQ" type="DIDQ_Type" minOccurs="0"/>
        <xs:element name="STR" type="STR_Type" minOccurs="0"/>
        <xs:element name="REL_TSC" type="TSC_Type" minOccurs="0"/>
        <xs:element name="FGD_950" type="FGD_950_Type" minOccurs="0"/>
        <xs:element name="CHOK" type="CHOK_Type" minOccurs="0"/>
        <xs:element name="CGAP" type="CGAP_Type" minOccurs="0"/>
        <xs:element name="PCACT" type="ACT_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--VC Form-->
  <xs:element name="VC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Virtual Connection</description>
          <ATIS_OBF_ASR_Practice>023</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="VC_DETAILS" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--VC Form, VC_DETAILS Section-->
  <xs:element name="VC_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Virtual Connection</description>
          <ATIS_OBF_ASR_Practice>023</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="VCNUM" type="IndexNumber4_Type"/>
        <xs:element name="VCACT" type="ACT_Type" minOccurs="0"/>
        <xs:element name="VST" type="VST_Type" minOccurs="0"/>
        <xs:element name="DLCI" type="DLCI_Type" minOccurs="0"/>
        <xs:element name="CIR" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="BC" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="BE" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="PSPEED" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="SCCT" type="SCCT_Type" minOccurs="0"/>
        <xs:element name="PCR" type="MaxCellRate_Type" minOccurs="0"/>
        <xs:element name="SCR" type="MaxCellRate_Type" minOccurs="0"/>
        <xs:element name="MCR" type="MinCellRate_Type" minOccurs="0"/>
        <xs:element name="MBS" type="MaxCellRate_Type" minOccurs="0"/>
        <xs:element name="CTYP" type="CTYP_Type" minOccurs="0"/>
        <xs:element name="VPI" type="VPI_Type" minOccurs="0"/>
        <xs:element name="VCI" type="VCI_Type" minOccurs="0"/>
        <xs:element name="IBS" type="IBS_Type" minOccurs="0"/>
        <xs:element name="QIBS" type="QTY2_Type" minOccurs="0"/>
        <xs:element name="VCID" type="VCID_Type" minOccurs="0"/>
        <xs:element name="VPID" type="VPID_Type" minOccurs="0"/>
        <xs:element name="CDVT" type="CDVT_Type" minOccurs="0"/>
        <xs:element name="CDV" type="CDV_Type" minOccurs="0"/>
        <xs:element name="TAG" type="TAG_Type" minOccurs="0"/>
        <xs:element name="VCVTA" type="VTA_Type" minOccurs="0"/>
        <xs:element name="EP" type="EP_Type" minOccurs="0"/>
        <xs:element name="PRID" type="PRID_Type" minOccurs="0"/>
        <xs:element name="CDOM" type="CDOM_Type" minOccurs="0"/>
        <xs:element name="CPER" type="CPER_Type" minOccurs="0"/>
        <xs:element name="ITPW" type="PASSWORD_Type" minOccurs="0"/>
        <xs:element name="RPON" type="PON_Type" minOccurs="0"/>
        <xs:element name="RECCKT" type="ECCKT53_Type" minOccurs="0"/>
        <xs:element name="RORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="RDLCI" type="DLCI_Type" minOccurs="0"/>
        <xs:element name="RCIR" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="RBC" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="RBE" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="RACNA" type="CNA_Type" minOccurs="0"/>
        <xs:element name="RPSPEED" type="InformationRate_Type" minOccurs="0"/>
        <xs:element name="RSCCT" type="SCCT_Type" minOccurs="0"/>
        <xs:element name="RPCR" type="MaxCellRate_Type" minOccurs="0"/>
        <xs:element name="RSCR" type="MaxCellRate_Type" minOccurs="0"/>
        <xs:element name="RMCR" type="MinCellRate_Type" minOccurs="0"/>
        <xs:element name="RMBS" type="MaxCellRate_Type" minOccurs="0"/>
        <xs:element name="RVPI" type="VPI_Type" minOccurs="0"/>
        <xs:element name="RVCI" type="VCI_Type" minOccurs="0"/>
        <xs:element name="RCDVT" type="CDVT_Type" minOccurs="0"/>
        <xs:element name="RCDV" type="CDV_Type" minOccurs="0"/>
        <xs:element name="REP" type="REP_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--VCAT Form-->
  <xs:element name="VCAT">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Virtual Concatenation</description>
          <ATIS_OBF_ASR_Practice>017</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="VCAT_CFA" minOccurs="0"/>
        <xs:element ref="VCAT_SCFA" minOccurs="0"/>
        <xs:element ref="VCAT_ICFA1" minOccurs="0"/>
        <xs:element ref="VCAT_ICFA2" minOccurs="0"/>
        <xs:element ref="VCAT_ICFA3" minOccurs="0"/>
        <xs:element ref="VCAT_ICFA4" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--VCAT Form, VCAT_CFA Section-->
  <xs:element name="VCAT_CFA">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Virtual Concatenation (CFA-CTS/DIR Group)</description>
          <ATIS_OBF_ASR_Practice>017</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="VCAT_DETAILS" minOccurs="1" maxOccurs="48"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--VCAT Form, VCAT_SCFA Section-->
  <xs:element name="VCAT_SCFA">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Virtual Concatenation (SCFA-CTS/DIR Group)</description>
          <ATIS_OBF_ASR_Practice>017</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="VCAT_DETAILS" minOccurs="1" maxOccurs="48"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--VCAT Form, VCAT_ICFA1 Section-->
  <xs:element name="VCAT_ICFA1">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Virtual Concatenation (ICFA1-CTS/DIR Group)</description>
          <ATIS_OBF_ASR_Practice>017</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="VCAT_DETAILS" minOccurs="1" maxOccurs="48"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--VCAT Form, VCAT_ICFA2 Section-->
  <xs:element name="VCAT_ICFA2">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Virtual Concatenation (ICFA2-CTS/DIR Group)</description>
          <ATIS_OBF_ASR_Practice>017</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="VCAT_DETAILS" minOccurs="1" maxOccurs="48"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--VCAT Form, VCAT_ICFA3 Section-->
  <xs:element name="VCAT_ICFA3">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Virtual Concatenation (ICFA3-CTS/DIR Group)</description>
          <ATIS_OBF_ASR_Practice>017</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="VCAT_DETAILS" minOccurs="1" maxOccurs="48"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--VCAT Form, VCAT_ICFA4 Section-->
  <xs:element name="VCAT_ICFA4">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Virtual Concatenation (ICFA4-CTS/DIR Group)</description>
          <ATIS_OBF_ASR_Practice>017</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element ref="VCAT_DETAILS" minOccurs="1" maxOccurs="48"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--VCAT Form, VCAT_DETAILS Section-->
  <xs:element name="VCAT_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>VCAT Details (Channel Time Slot / Directionality Group)</description>
          <ATIS_OBF_ASR_Practice>017</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="CTS" type="CTS_Type"/>
        <xs:element name="DIR" type="DIR_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--WAL (WATS) Form-->
  <xs:element name="WAL">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>WATS Service</description>
          <ATIS_OBF_ASR_Practice>003</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="NC" type="NC_Type" minOccurs="0"/>
        <xs:element name="TLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="DTO" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SECNCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="SECTLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="PIC" type="PreSubInd_Type" minOccurs="0"/>
        <xs:element name="NSL" type="QTY2_Type" minOccurs="0"/>
        <xs:element name="S25" type="S25_Type" minOccurs="0"/>
        <xs:element name="ER" type="ER_Type" minOccurs="0"/>
        <xs:element name="SR" type="SR_Short_Type" minOccurs="0"/>
        <xs:element name="DRL" type="DRL_Type" minOccurs="0"/>
        <xs:element name="TLA" type="TLA_Type" minOccurs="0"/>
        <xs:element name="BAND" type="BAND_Type" minOccurs="0"/>
        <xs:element name="HNTYP" type="HNTYP_Type" minOccurs="0"/>
        <xs:element name="BLOCK" type="BLOCK_Type" minOccurs="0"/>
        <xs:element name="NHNI" type="NHNI_Type" minOccurs="0"/>
        <xs:element name="HPF" type="HPF_Type" minOccurs="0"/>
        <xs:element name="CFA" type="CFA_Type" minOccurs="0"/>
        <xs:element name="CFAU" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="BAAD" type="BAAD_Type" minOccurs="0"/>
        <xs:element name="SECLOC" type="E_Type" minOccurs="0"/>
        <xs:element name="OTC" type="OTC_Type" minOccurs="0"/>
        <xs:element name="TNC_TO" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="TNC_PER" type="TNC_PER_Type" minOccurs="0"/>
        <xs:element name="LOCBAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="MAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="GETO" type="GETO_Type" minOccurs="0"/>
        <xs:element name="GBTN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="GCON" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="GTEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="EUCON_STR" type="STREET_Type" minOccurs="0"/>
        <xs:element name="EUCON_FL" type="FLOOR_Type" minOccurs="0"/>
        <xs:element name="EUCON_RM" type="ROOM_Type" minOccurs="0"/>
        <xs:element name="EUCON_CITY" type="CITY25_Type" minOccurs="0"/>
        <xs:element name="EUCON_STATE" type="STATE_Type" minOccurs="0"/>
        <xs:element name="EUCON_ZIP" type="ZIP_Type" minOccurs="0"/>
        <xs:element name="CTX_TEL" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="CTX_NAME" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="SALI" minOccurs="0"/>
        <xs:element ref="ECI_ASR_LEVEL" minOccurs="0"/>
        <xs:element ref="ECI_CKT_LEVEL" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\E:\p4_work\qa\BasicServices_SoapUI_Automation\ASRSchemas\schemas-asog47\UOM-Base.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>This schema was developed under the charter of the
			Alliance for Telecommunications Industry Solutions (ATIS),
			Ordering and Billing Forum (OBF),
			Ordering Solutions Committee,
			Access Service Ordering (ASO) Subcommittee.

			This schema is based on the Access Service Ordering Guidelines (ASOG) Version 47.</xs:documentation>
  </xs:annotation>
  <!--========================================================================-->
  <!--Begin: UOM TOP LEVEL STRUCTURES-->
  <!--========================================================================-->
  <xs:complexType name="INQUIRY_REQUEST_Type" abstract="true" mixed="false">
    <xs:complexContent mixed="false">
      <xs:extension base="REQUEST_Type"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="INQUIRY_RESPONSE_Type" abstract="true" mixed="false">
    <xs:complexContent mixed="false">
      <xs:extension base="RESPONSE_Type"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NOTIFICATION_Type" abstract="true" mixed="false">
    <xs:complexContent mixed="false">
      <xs:extension base="UOM_Type"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="REQUEST_Type" abstract="true" mixed="false">
    <xs:complexContent mixed="false">
      <xs:extension base="UOM_Type"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="RESPONSE_Type" abstract="true" mixed="false">
    <xs:complexContent mixed="false">
      <xs:extension base="UOM_Type"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SERVICE_REQUEST_Type" abstract="true" mixed="false">
    <xs:complexContent mixed="false">
      <xs:extension base="REQUEST_Type"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SERVICE_RESPONSE_Type" abstract="true" mixed="false">
    <xs:complexContent mixed="false">
      <xs:extension base="RESPONSE_Type"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UOM_HDR_Type" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Header of the message</description>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="MESSAGE_ID" type="MESSAGE_ID_Type"/>
      <xs:element name="CCNA" type="CNA_Type"/>
      <xs:element name="MSG_TIMESTAMP" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UOM_Type" abstract="true" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Top level for UOM</description>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <!--========================================================================-->
  <!--End: UOM TOP LEVEL STRUCTURES-->
  <!--========================================================================-->
  <!--========================================================================-->
  <!--Begin: simpleType DEFINITIONS (Field Types)-->
  <!--========================================================================-->
  <xs:simpleType name="AAI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>AAI</fieldName>
          <fieldDescription>Additional Address Information</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="150"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ABC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ABC</fieldName>
          <fieldDescription>Access Billing Choices (10x2byte occ.)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="20"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ACAT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ACAT</fieldName>
          <fieldDescription>Access Category (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ACC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>ACC</fieldName>
          <fieldDescription>Access Information</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="45"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ACPPN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>ACPPN</fieldName>
          <fieldDescription>Access Pager Pin Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ACT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ACT</fieldName>
          <fieldDescription>Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ACTI</fieldName>
          <fieldDescription>Activity Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>PCACT</fieldName>
          <fieldDescription>Point Code Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>LEGACT</fieldName>
          <fieldDescription>Multipoint Leg Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>CKTACT</fieldName>
          <fieldDescription>Circuit Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>PIA</fieldName>
          <fieldDescription>Provider Initiated Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>EO_ACT</fieldName>
          <fieldDescription>End Office Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>LOSACT</fieldName>
          <fieldDescription>Level of Service Activity Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>S_VACT</fieldName>
          <fieldDescription>Service Virtual Local Area Network Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>UACT</fieldName>
          <fieldDescription>User Network Interface (UNI) Activity Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>VACT</fieldName>
          <fieldDescription>Customer Edge Virtual Local Area Network Activity Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>OEC_ACT</fieldName>
          <fieldDescription>Other Exchange Company Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TGACT</fieldName>
          <fieldDescription>Trunk Group Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>SEGACT</fieldName>
          <fieldDescription>Segment Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>SEGACT</fieldName>
          <fieldDescription>Segment Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>VCACT</fieldName>
          <fieldDescription>VC Activity Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TSACT</fieldName>
          <fieldDescription>Transit Signaling Activity</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>ECIA</fieldName>
          <fieldDescription>EC (Provider) Initiated Activity</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AECN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>AECN</fieldName>
          <fieldDescription>Alternate Exchange Carrier Name</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="32"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AENG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>AENG</fieldName>
          <fieldDescription>Additional Engineering</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AFO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>AFO</fieldName>
          <fieldDescription>Additional Forms</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AFT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>AFT</fieldName>
          <fieldDescription>Address Format Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AGAUTH_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>AGAUTH</fieldName>
          <fieldDescription>Agency Authorization Status</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ALBR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ALBR</fieldName>
          <fieldDescription>Additional Labor</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ALTREF_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>ALTREF</fieldName>
          <fieldDescription>Alternate Routing Trunk Group Reference</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ANI_II_EX_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>ANI_II</fieldName>
          <fieldDescription>ANI II Digits - First Column in TQ Routing Exception Matrix</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ANI_II_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>ANI_II</fieldName>
          <fieldDescription>ANI II Digits - First Column in TQ Routing Matrix</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
      <xs:enumeration value="ALL"/>
      <xs:enumeration value="00"/>
      <xs:enumeration value="01"/>
      <xs:enumeration value="06"/>
      <xs:enumeration value="07"/>
      <xs:enumeration value="20"/>
      <xs:enumeration value="27"/>
      <xs:enumeration value="29"/>
      <xs:enumeration value="52"/>
      <xs:enumeration value="61"/>
      <xs:enumeration value="70"/>
      <xs:enumeration value="93"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ANI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>ANI</fieldName>
          <fieldDescription>Automated Number ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>ANI</fieldName>
          <fieldDescription>Automated Number ID</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ANNC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>ANNC</fieldName>
          <fieldDescription>Announcement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="40"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="APC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>APC</fieldName>
          <fieldDescription>Alias Point Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="9"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AppTimeCode_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>APPTIME</fieldName>
          <fieldDescription>Appointment Time for Installation of Service</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ASC_EC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ASC_EC</fieldName>
          <fieldDescription>Access Service Coordination - Exchange Co</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ASG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ASG</fieldName>
          <fieldDescription>Access Service Group</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>ASG</fieldName>
          <fieldDescription>Access Service Group</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>ASG</fieldName>
          <fieldDescription>Access Service Group (ASC-EC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>ASG</fieldName>
          <fieldDescription>Access Service Group (OEC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>ASG</fieldName>
          <fieldDescription>Access Service Group</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ASOG_VER_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>ASOG_VER</fieldName>
          <fieldDescription>ASOG Version of Access Service Request</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
      <xs:enumeration value="47"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ASOGPractice_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>PRACTICE</fieldName>
          <fieldDescription>ASOG Practice Number</fieldDescription>
          <fullDefinition>ASOG Practice Number</fullDefinition>
          <source>ATIS/OBF-ASR-041 Access Service Request (ASR), Mechanized Interface Specifications, Section 3</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ASRNO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ASRNO</fieldName>
          <fieldDescription>Access Service Request Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>ASRNO</fieldName>
          <fieldDescription>Access Service Request Number (ASC-EC)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="18"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ASU_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>ASU</fieldName>
          <fieldDescription>Answer Supervision</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ATN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>ATN</fieldName>
          <fieldDescription>Associated Telephone Number/TSC</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ATP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>ATP</fieldName>
          <fieldDescription>Access Transport Parameter</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AUNT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>AUNT</fieldName>
          <fieldDescription>Associated UNI/NNI Termination</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BAAD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>BAAD</fieldName>
          <fieldDescription>Band Advance</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="19"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BAND_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>BAND</fieldName>
          <fieldDescription>Band Identification</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BAN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BAN</fieldName>
          <fieldDescription>Billing Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>HBAN</fieldName>
          <fieldDescription>High Capacity Channel Billing Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>LOCBAN</fieldName>
          <fieldDescription>Local Billing Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>HBAN</fieldName>
          <fieldDescription>High Capacity Channel Billing Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>HBAN</fieldName>
          <fieldDescription>High Capacity Channel Billing Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>HBAN</fieldName>
          <fieldDescription>High Capacity Channel Billing Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>FBAN</fieldName>
          <fieldDescription>Facility Billing Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>BAN</fieldName>
          <fieldDescription>Billing Account Number (ASC-EC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>HBAN</fieldName>
          <fieldDescription>High Capacity Channel Billing Account Number (ASC-EC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>BAN</fieldName>
          <fieldDescription>Billing Account Number (OEC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>HBAN</fieldName>
          <fieldDescription>High Capacity Channel Billing Account Number (OEC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>LOCBAN</fieldName>
          <fieldDescription>Local Billing Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>MAN</fieldName>
          <fieldDescription>Miscellaneous Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>BAN</fieldName>
          <fieldDescription>Billing Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>HBAN</fieldName>
          <fieldDescription>High Capacity Channel Billing Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>MAN</fieldName>
          <fieldDescription>Miscellaneous Account Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BHC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>BHC</fieldName>
          <fieldDescription>Batch Hot Cut</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BIC_ID_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BIC_ID</fieldName>
          <fieldDescription>BIC Identifier</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BIC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BIC</fieldName>
          <fieldDescription>Exchange Company Initiated Change</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BLOCK_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>BLOCK</fieldName>
          <fieldDescription>Blocking Options</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BRAND_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>BRAND</fieldName>
          <fieldDescription>Branding</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BSC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>BSC</fieldName>
          <fieldDescription>Broadband Service Category</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>BSC</fieldName>
          <fieldDescription>Broadband Service Category</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BUM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>BUM</fieldName>
          <fieldDescription>Broadcast, Unknown Unicast and Multicast Option</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>BUM</fieldName>
          <fieldDescription>Broadcast, Unknown Unicast and Multicast Option</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>BUM</fieldName>
          <fieldDescription>Broadcast, Unknown Unicast and Multicast Option</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CAD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>CAD</fieldName>
          <fieldDescription>Call Denial</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CBAN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CBAN</fieldName>
          <fieldDescription>Collocation Billing Account Number (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="13"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CBD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>CBD</fieldName>
          <fieldDescription>Call Before Dispatch</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CBO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CBO</fieldName>
          <fieldDescription>Cellular Billing Option</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CBPC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>CBPC</fieldName>
          <fieldDescription>Conference Bridge Passcode Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CBPC</fieldName>
          <fieldDescription>Conference Bridge Passcode Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CCAT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CCAT</fieldName>
          <fieldDescription>Cable Category (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CCEA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>CCEA</fieldName>
          <fieldDescription>Cross Connect Equipment Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SCCEA</fieldName>
          <fieldDescription>Secondary Cross Connect Equipment Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CCEA</fieldName>
          <fieldDescription>Cross Connect Equipment Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>CCEA</fieldName>
          <fieldDescription>Cross Connect Equipment Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>SCCEA</fieldName>
          <fieldDescription>Secondary Cross Connect Equipment Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>CCEA</fieldName>
          <fieldDescription>Cross Connect Equipment Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SCCEA</fieldName>
          <fieldDescription>Secondary Cross Connect Equipment Assignment</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="60"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CCNFG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CCNFG</fieldName>
          <fieldDescription>Cross Connect Configuration</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CCVN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>CCVN</fieldName>
          <fieldDescription>Coordinated Conversion</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CCW_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>CCW</fieldName>
          <fieldDescription>Carrier Connect Wink Validation</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>CC</fieldName>
          <fieldDescription>Company Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CDND_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CDND</fieldName>
          <fieldDescription>Called Directory Number Delivery</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CDOM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>CDOM</fieldName>
          <fieldDescription>Customer Domain Name</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="20"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CDR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CDR</fieldName>
          <fieldDescription>Circuit Design Request (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CDV_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>CDV</fieldName>
          <fieldDescription>Cell Delay Variation</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RCDV</fieldName>
          <fieldDescription>Related Cell Delay Variation</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CDVT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>CDVT</fieldName>
          <fieldDescription>Cell Delay Variation Tolerance</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RCDVT</fieldName>
          <fieldDescription>Related Cell Delay Variation Tolerance</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CFA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>CFA</fieldName>
          <fieldDescription>Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>SCFA</fieldName>
          <fieldDescription>Secondary Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CFA</fieldName>
          <fieldDescription>Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SCFA</fieldName>
          <fieldDescription>Secondary Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>CFA</fieldName>
          <fieldDescription>Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SCFA</fieldName>
          <fieldDescription>Secondary Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>CFA</fieldName>
          <fieldDescription>Connecting Facility Assignment (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>CFA</fieldName>
          <fieldDescription>Connecting Facility Assignment (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>CFA</fieldName>
          <fieldDescription>Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>SCFA</fieldName>
          <fieldDescription>Secondary Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>SCFA</fieldName>
          <fieldDescription>Secondary Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>CFA</fieldName>
          <fieldDescription>Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>CFA</fieldName>
          <fieldDescription>Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CFA2</fieldName>
          <fieldDescription>Interim Connecting Facility Assignment Two</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CFA3</fieldName>
          <fieldDescription>Interim Connecting Facility Assignment Three</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CFA4</fieldName>
          <fieldDescription>Interim Connecting Facility Assignment Four</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>CFA</fieldName>
          <fieldDescription>Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>ACFA</fieldName>
          <fieldDescription>Alternate Connecting Facility Assignment</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>ICFA1</fieldName>
          <fieldDescription>Intermediate Connecting Facility Assignment One (1)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>ICFA2</fieldName>
          <fieldDescription>Intermediate Connecting Facility Assignment Two (2)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>ICFA3</fieldName>
          <fieldDescription>Intermediate Connecting Facility Assignment Three (3)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>ICFA4</fieldName>
          <fieldDescription>Intermediate Connecting Facility Assignment Four (4)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="42"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CFNI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>CFNI</fieldName>
          <fieldDescription>Customer Fiber Network ID</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="20"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CFW_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>CFW</fieldName>
          <fieldDescription>Call Forwarding</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CGAP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CGAP</fieldName>
          <fieldDescription>Call Gapping Interval</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CHANNEL_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>CHANNEL</fieldName>
          <fieldDescription>Channel</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CHOK_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CHOK</fieldName>
          <fieldDescription>Choke Network</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CHPD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CHPD</fieldName>
          <fieldDescription>Call History Package Delivery</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CIC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CIC</fieldName>
          <fieldDescription>Carrier Identification Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>CIC</fieldName>
          <fieldDescription>Carrier Identification Code - FGD</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>ACIC</fieldName>
          <fieldDescription>Additional Carrier Identification Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>CIC</fieldName>
          <fieldDescription>Carrier Identification Code - SACNXX</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CIP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>CIP</fieldName>
          <fieldDescription>Carrier Identification Parameter</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CITY25_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BILL_CITY</fieldName>
          <fieldDescription>Billing Address City</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DSGCON_CITY</fieldName>
          <fieldDescription>Design/Engineering Address City</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>EUCON_CITY</fieldName>
          <fieldDescription>City (EUCON)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PEU_CITY</fieldName>
          <fieldDescription>City</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SEU_CITY</fieldName>
          <fieldDescription>City</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CITY32_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>CITY</fieldName>
          <fieldDescription>City</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="32"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CKR1_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>CKR1</fieldName>
          <fieldDescription>Customer Circuit Reference (T1)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CKR1</fieldName>
          <fieldDescription>Customer Circuit Reference (T1)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>CKR1</fieldName>
          <fieldDescription>Customer Circuit Reference (T1)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CKR1</fieldName>
          <fieldDescription>Customer Circuit Reference (T1)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="40"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CKR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>CKR</fieldName>
          <fieldDescription>Customer Circuit Reference</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>CKR</fieldName>
          <fieldDescription>Customer Circuit Reference</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>CKR</fieldName>
          <fieldDescription>Customer Circuit Reference</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>CKR</fieldName>
          <fieldDescription>Customer Circuit Reference</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CKR</fieldName>
          <fieldDescription>Customer Circuit Reference</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>EVCCKR</fieldName>
          <fieldDescription>Ethernet Virtual Connection Customer Circuit Reference</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>EVCCKR</fieldName>
          <fieldDescription>Ethernet Virtual Connection Customer Circuit Reference</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>CKR</fieldName>
          <fieldDescription>Customer Circuit Reference</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="53"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CCLASS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>CCLASS</fieldName>
          <fieldDescription>Carrier Classification</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CLLI_or_EU_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>SECLOC</fieldName>
          <fieldDescription>Secondary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>SECLOC</fieldName>
          <fieldDescription>Secondary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PRILOC</fieldName>
          <fieldDescription>Primary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SECLOC</fieldName>
          <fieldDescription>Secondary Location</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CLLI_or_Narrative_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>APOT</fieldName>
          <fieldDescription>Additional Point of Termination</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CSL</fieldName>
          <fieldDescription>Access Customer Switch Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>END_OFF</fieldName>
          <fieldDescription>End Office</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>SPOT</fieldName>
          <fieldDescription>Secondary Location Point of Termination</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="11"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CLLI_or_SALI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SECLOC</fieldName>
          <fieldDescription>Secondary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>PRILOC</fieldName>
          <fieldDescription>Primary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SECLOC</fieldName>
          <fieldDescription>Secondary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>PRILOC</fieldName>
          <fieldDescription>Primary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>PRILOC</fieldName>
          <fieldDescription>Primary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>SECLOC</fieldName>
          <fieldDescription>Secondary Location</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CLLI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ACTL</fieldName>
          <fieldDescription>Access Customer Terminal Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>JPR</fieldName>
          <fieldDescription>Jointly Provided Ring</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>PSL</fieldName>
          <fieldDescription>Primary Service Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>MUXLOC</fieldName>
          <fieldDescription>Multiplexing Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>SECLOC</fieldName>
          <fieldDescription>Secondary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>DTO</fieldName>
          <fieldDescription>Dial Tone Office</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>FACTL</fieldName>
          <fieldDescription>Facility Access Customer Terminal Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>MUXLOC</fieldName>
          <fieldDescription>Multiplexing Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>PRI_ADM</fieldName>
          <fieldDescription>Primary Add Drop Multiplexer</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SEC_ADM</fieldName>
          <fieldDescription>Secondary Add Drop Multiplexer</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SECLOC</fieldName>
          <fieldDescription>Secondary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SMUXLOC</fieldName>
          <fieldDescription>Secondary Multiplexing Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SSPC_LOC</fieldName>
          <fieldDescription>Service Signaling Point Code Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TSPC_LOC</fieldName>
          <fieldDescription>Transient Signaling Point Code Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>CKLT</fieldName>
          <fieldDescription>Bridging Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>MUXLOC</fieldName>
          <fieldDescription>Multiplexing Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>PRI_ADM</fieldName>
          <fieldDescription>Primary Add Drop Multiplexer</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SEC_ADM</fieldName>
          <fieldDescription>Secondary Add Drop Multiplexer</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SMUXLOC</fieldName>
          <fieldDescription>Secondary Multiplexing Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>LEGCKLT</fieldName>
          <fieldDescription>Bridging Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>SSWC</fieldName>
          <fieldDescription>SECLOC Serving Wire Center</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>DTO</fieldName>
          <fieldDescription>Dial Tone Office</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>SWC</fieldName>
          <fieldDescription>Serving Wire Center</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>SECLOC</fieldName>
          <fieldDescription>Secondary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>SSWC</fieldName>
          <fieldDescription>SECLOC Serving Wire Center</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>CKLT</fieldName>
          <fieldDescription>Bridging Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>MUXLOC</fieldName>
          <fieldDescription>Multiplexing Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>PRI_ADM</fieldName>
          <fieldDescription>Primary Add Drop Multiplexer</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SEC_ADM</fieldName>
          <fieldDescription>Secondary Add Drop Multiplexer</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SMUXLOC</fieldName>
          <fieldDescription>Secondary Multiplexing Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>ACC_TANDEM</fieldName>
          <fieldDescription>Access Tandem</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>EVCSP</fieldName>
          <fieldDescription>Ethernet Virtual Connection Switch Point</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>PRILOC_SPOT</fieldName>
          <fieldDescription>Secondary Point of Termination (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>SECLOC_SPOT</fieldName>
          <fieldDescription>Secondary Location Point of Termination (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>PRILOC_SPOT</fieldName>
          <fieldDescription>Secondary Point of Termination (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>SECLOC_SPOT</fieldName>
          <fieldDescription>Secondary Location Point of Termination (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>AFACTL</fieldName>
          <fieldDescription>Alternate Facility Access Customer Terminal Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>ACTL</fieldName>
          <fieldDescription>Access Customer Terminal Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>APOT</fieldName>
          <fieldDescription>Additional Point of Termination</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>CKLT</fieldName>
          <fieldDescription>Bridging Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>LOCN</fieldName>
          <fieldDescription>Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SPOT_PRE</fieldName>
          <fieldDescription>Secondary Location Point of Termination - Primary Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SPOT_SEC</fieldName>
          <fieldDescription>Secondary Location Point of Termination - Secondary Location</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="11"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CLN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>CLN1</fieldName>
          <fieldDescription>Clock Register Number 1</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>OFN</fieldName>
          <fieldDescription>Overflow Register Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>CLN2</fieldName>
          <fieldDescription>Clock Register Number 2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>CLN3</fieldName>
          <fieldDescription>Clock Register Number 3</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CMLG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CMLG</fieldName>
          <fieldDescription>Commingling</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CNA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>CCNA</fieldName>
          <fieldDescription>Customer Carrier Name Abbreviation</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ACNA</fieldName>
          <fieldDescription>Access Customer Name Abbreviation</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>PCNA</fieldName>
          <fieldDescription>Point Code Name Abbreviation</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RACNA</fieldName>
          <fieldDescription>Related Access Customer Name Abbreviation</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TPNA</fieldName>
          <fieldDescription>Third Party Name Abbreviation</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CND_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>CND</fieldName>
          <fieldDescription>Calling Directory Number Delivery</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CNO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>CNO</fieldName>
          <fieldDescription>Case Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CNO</fieldName>
          <fieldDescription>Case Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CNR_VER_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>CNR_VER</fieldName>
          <fieldDescription>Clarification/Notification Version</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CNT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>CNT</fieldName>
          <fieldDescription>Clarification/Notification Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="COIN_EA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>COIN_EA</fieldName>
          <fieldDescription>Coin Equal Access</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="COND_SPEC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>COND_SPEC</fieldName>
          <fieldDescription>Conditioning Spec</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="27"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Contact_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BILLCON</fieldName>
          <fieldDescription>Billing Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DSGCON</fieldName>
          <fieldDescription>Design/Engineering Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>IMPCON</fieldName>
          <fieldDescription>Implementation Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>INIT</fieldName>
          <fieldDescription>Request Initiator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>LANM</fieldName>
          <fieldDescription>Lease Authorization Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>ECREP</fieldName>
          <fieldDescription>Provider Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>AP_REP</fieldName>
          <fieldDescription>Provider Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>INIT</fieldName>
          <fieldDescription>Initiator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>AP_REP</fieldName>
          <fieldDescription>Provider Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>INIT</fieldName>
          <fieldDescription>Request Initiator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>ALCON</fieldName>
          <fieldDescription>Alternate Local Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>LCON</fieldName>
          <fieldDescription>Local Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TECHCON</fieldName>
          <fieldDescription>Customer Technical Contact (INTER_TRANS_RTG)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TECHCON</fieldName>
          <fieldDescription>Customer Technical Contact (SACNXX)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TECHCON</fieldName>
          <fieldDescription>Customer Technical Contact (TQ)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SALESCON</fieldName>
          <fieldDescription>Sales Contact Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>DSGCON</fieldName>
          <fieldDescription>Design/Engineering Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>EC_DSGCON</fieldName>
          <fieldDescription>Provider Design/Engineering Contact</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CO</fieldName>
          <fieldDescription>Central Office Announcement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CPER_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>CPER</fieldName>
          <fieldDescription>L2TP Peer Name</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="20"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CPEV_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CPEV</fieldName>
          <fieldDescription>CPE Vendor (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CPN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>CPN</fieldName>
          <fieldDescription>Calling Party Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CPT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>CPT</fieldName>
          <fieldDescription>Channel Pair/Timeslot</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CPT</fieldName>
          <fieldDescription>Channel Pair/Timeslot</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>CPT</fieldName>
          <fieldDescription>Channel Pair/Timeslot</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>CPT</fieldName>
          <fieldDescription>Channel Pair/Timeslot</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>CPT</fieldName>
          <fieldDescription>Channel Pair/Timeslot</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CSHIELD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CSHIELD</fieldName>
          <fieldDescription>Cable Shielding (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CSP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>CSP</fieldName>
          <fieldDescription>Carrier Selection Parameter</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CST_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CST</fieldName>
          <fieldDescription>Access Customer Switch Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CTO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>CTO</fieldName>
          <fieldDescription>Cut Through</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CTS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VCAT-017</asogPractice>
          <fieldName>CTS</fieldName>
          <fieldDescription>Channel Time Slot</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CTYP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>CTYP</fieldName>
          <fieldDescription>Connection Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CustomerName_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BILLNM</fieldName>
          <fieldDescription>Billing Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>CUST</fieldName>
          <fieldDescription>Customer Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>SBILLNM</fieldName>
          <fieldDescription>Secondary Billing Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>EUCON</fieldName>
          <fieldDescription>End User Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>CTX_NAME</fieldName>
          <fieldDescription>CENTREX Listed Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>GCON</fieldName>
          <fieldDescription>General Exchange Tariff Options Contact Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>CTX_NAME</fieldName>
          <fieldDescription>CENTREX Listed Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>GCON</fieldName>
          <fieldDescription>General Exchange Tariff Options Contact Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>GCON</fieldName>
          <fieldDescription>General Exchange Tariff Options Contact Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>EUCON</fieldName>
          <fieldDescription>End User Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>CTX_NAME</fieldName>
          <fieldDescription>CENTREX Listed Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>GCON</fieldName>
          <fieldDescription>General Exchange Tariff Options Contact Name (EUSA_PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>GCON</fieldName>
          <fieldDescription>General Exchange Tariff Options Contact Name (EUSA_SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>EUNAME</fieldName>
          <fieldDescription>End User Name</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>EXPNM</fieldName>
          <fieldDescription>Expedite Name (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>IC</fieldName>
          <fieldDescription>Interexchange Carrier/Access Customer Name</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CWG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>CWG</fieldName>
          <fieldDescription>Call Waiting</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DAACC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>DAACC</fieldName>
          <fieldDescription>Directory Assistance Access</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Date6_Type">
    <xs:annotation>
      <xs:documentation>Date in "YYMMDD" format</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CPO_EBD</fieldName>
          <fieldDescription>Combined Platform Offering - Effective Billing Date</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Date_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>D_SENT</fieldName>
          <fieldDescription>Date Sent</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DATED</fieldName>
          <fieldDescription>Date of Agency Authorization</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DDD</fieldName>
          <fieldDescription>Desired Due Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>LADATED</fieldName>
          <fieldDescription>Lease Arrangement Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>PPTD</fieldName>
          <fieldDescription>Project Plant Test Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>PSD</fieldName>
          <fieldDescription>Promotion Subscription Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>D_SENT</fieldName>
          <fieldDescription>Date Sent</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>CD</fieldName>
          <fieldDescription>Completion Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>CRDD</fieldName>
          <fieldDescription>Customer Response Due Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>APP</fieldName>
          <fieldDescription>Application Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CD_SENT</fieldName>
          <fieldDescription>Confirmation Date Sent</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CDLRD</fieldName>
          <fieldDescription>-Confirming Design Layout Report Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>DD</fieldName>
          <fieldDescription>Due Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>DLRD</fieldName>
          <fieldDescription>Design Layout Report Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>EBD</fieldName>
          <fieldDescription>Effective Bill Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>FCDLRD</fieldName>
          <fieldDescription>Facility Confirming Design Layout Report Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>FDD</fieldName>
          <fieldDescription>Facility Due Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>FDLRD</fieldName>
          <fieldDescription>Facility Design Layout Report Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>FPTD</fieldName>
          <fieldDescription>Facility Plant Test Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>PTD</fieldName>
          <fieldDescription>Plant Test Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>OEC_PSD</fieldName>
          <fieldDescription>Other Exchange Company Promotion Subscription Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>E911ID</fieldName>
          <fieldDescription>911 Installation Date "MMDDCCYY" (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>RID</fieldName>
          <fieldDescription>Record Issue Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SAED</fieldName>
          <fieldDescription>Specialized Arrangement Expiration Date "MMDDCCYY"</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>DD</fieldName>
          <fieldDescription>Due Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>ISS</fieldName>
          <fieldDescription>DLR Issue Date</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PTD</fieldName>
          <fieldDescription>Due Date</fieldDescription>
        </reference>
        <reference>
          <dlrFieldNumber/>
          <fieldName>CDLRD</fieldName>
          <fieldDescription>Confirming Design Layout Report in MIS only</fieldDescription>
        </reference>
        <reference>
          <dlrFieldNumber/>
          <fieldName>DLRD</fieldName>
          <fieldDescription>Design Layout Report in MIS only</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DDTEST_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DDTEST</fieldName>
          <fieldDescription>Due Date Test</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DIDQ_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>DIDQ</fieldName>
          <fieldDescription>DID Trunk Queuing</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DIDR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DIDR2</fieldName>
          <fieldDescription>Direct Inward Dial Number Range Two</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DIDR3</fieldName>
          <fieldDescription>Direct Inward Dial Number Range Three</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DIDR4</fieldName>
          <fieldDescription>Direct Inward Dial Number Range Four</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DIDR5</fieldName>
          <fieldDescription>Direct Inward Dial Number Range Five</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DID_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>DID</fieldName>
          <fieldDescription>Direct Inward Dial</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DIR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>DIR</fieldName>
          <fieldDescription>Directionality</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SDIR</fieldName>
          <fieldDescription>Secondary Directionality</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>DIR</fieldName>
          <fieldDescription>Directionality (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SDIR</fieldName>
          <fieldDescription>Secondary Directionality (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>DIR</fieldName>
          <fieldDescription>Directionality</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>SDIR</fieldName>
          <fieldDescription>Secondary Directionality</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>DIR1</fieldName>
          <fieldDescription>Directionality One (1)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>DIR2</fieldName>
          <fieldDescription>Directionality Two (2)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>DIR3</fieldName>
          <fieldDescription>Directionality Three (3)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>DIR4</fieldName>
          <fieldDescription>Directionality Four (4)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VCAT-017</asogPractice>
          <fieldName>DIR</fieldName>
          <fieldDescription>Directionality</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DIST_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DIST</fieldName>
          <fieldDescription>Distributor Name</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="32"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DLCI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>DLCI</fieldName>
          <fieldDescription>Data Link Connection Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RDLCI</fieldName>
          <fieldDescription>Related Data Link Connection Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>DLCI</fieldName>
          <fieldDescription>Data Link Connection Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>RDLCI</fieldName>
          <fieldDescription>Related Data Link Connection Identifier</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DPEA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>DPEAA</fieldName>
          <fieldDescription>Drop Port Equipment Assignment A Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>DPEAZ</fieldName>
          <fieldDescription>Drop Port Equipment Assignment Z Location</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="50"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DRC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DRC</fieldName>
          <fieldDescription>Design Routing Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DRL_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>DRL</fieldName>
          <fieldDescription>Directory Listing Requirement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>DRL</fieldName>
          <fieldDescription>Directory Listing Requirement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DSCP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>DSCP</fieldName>
          <fieldDescription>Differentiated Services Code Point</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="E_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>SECLOC</fieldName>
          <fieldDescription>Secondary Location - always E</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>EA_TYPE</fieldName>
          <fieldDescription>Ethernet Access Type (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EBP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>EBP</fieldName>
          <fieldDescription>Extended Billing Plan</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ECCKT28_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>LAG_ID</fieldName>
          <fieldDescription>Link Aggregation Group ID</fieldDescription>
          <additionalNote>Common Language Special Service Circuit Code - Serial Number Format (28 A/N) even though ASOG defined as (24 A/N)</additionalNote>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>EVCID</fieldName>
          <fieldDescription>Ethernet Virtual Connection Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>LAG_ID</fieldName>
          <fieldDescription>Link Aggregation Group ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>LAG_ID</fieldName>
          <fieldDescription>Link Aggregation Group ID</fieldDescription>
          <additionalNote>Common Language Special Service Circuit Code - Serial Number Format (28 A/N) even though ASOG defined as (24 A/N)</additionalNote>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>EVCID</fieldName>
          <fieldDescription>Ethernet Virtual Connection Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>RUID</fieldName>
          <fieldDescription>Related UNI Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ACCESSID</fieldName>
          <fieldDescription>Access Circuit Identifier (ECI_CKT_LEVEL_RTN)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>EAID</fieldName>
          <fieldDescription>Ethernet Access Circuit Identifier (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ICID</fieldName>
          <fieldDescription>Interconnect Circuit Identifier (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>PORTID</fieldName>
          <fieldDescription>Port Circuit Identifier (ECI_CKT_LEVEL_RTN)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>VCCID</fieldName>
          <fieldDescription>Virtual Connection Circuit Identifier (ECI_CKT_LEVEL_RTN)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="28"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ECCKT36_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>DIVCKT</fieldName>
          <fieldDescription>Diverse Circuit ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>DIVCKT</fieldName>
          <fieldDescription>Diverse Circuit ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>DIVCKT</fieldName>
          <fieldDescription>Diverse Circuit ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>ECCKT</fieldName>
          <fieldDescription>Exchange Company Circuit ID</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="36"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ECCKT42_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>RECCKT</fieldName>
          <fieldDescription>Related Exchange Company Circuit ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>EVCMPID</fieldName>
          <fieldDescription>EVC Meet Point ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>RECCKT</fieldName>
          <fieldDescription>Related Exchange Company Circuit ID</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="42"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ECCKT53_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ECCKT</fieldName>
          <fieldDescription>Exchange Company Circuit ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>RECCKT</fieldName>
          <fieldDescription>Related Exchange Company Circuit ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>RECCKT2</fieldName>
          <fieldDescription>Related Exchange Company Circuit ID 2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>ECCKT</fieldName>
          <fieldDescription>Exchange Company Circuit ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RECCKT</fieldName>
          <fieldDescription>Related Exchange Company Circuit ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>ECCKT</fieldName>
          <fieldDescription>Exchange Company Circuit ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>ECCKT</fieldName>
          <fieldDescription>Exchange Company Circuit ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>FCKT</fieldName>
          <fieldDescription>Facility Circuit Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>RECCKT</fieldName>
          <fieldDescription>Related Exchange Company Circuit Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>ECCKT</fieldName>
          <fieldDescription>Exchange Company Circuit ID</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>OLDECCKT</fieldName>
          <fieldDescription>Exchange Company Circuit ID</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="53"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ECI_NAME_Type">
    <xs:annotation>
      <xs:documentation>Company Specific Field Name</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ECI_RTI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>RTI</fieldName>
          <fieldDescription>Route Index Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ECI_VALUE_Type">
    <xs:annotation>
      <xs:documentation>Company Specific Field Value</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="EgressScheduler_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>ES</fieldName>
          <fieldDescription>Egress Scheduler</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>ES</fieldName>
          <fieldDescription>Egress Scheduler</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>ES</fieldName>
          <fieldDescription>Egress Scheduler</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EMAIL_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BILLCON_EMAIL</fieldName>
          <fieldDescription>Billing Contact Electronic Mail Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DSG_EMAIL</fieldName>
          <fieldDescription>Design Electronic Mail Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>INIT_EMAIL</fieldName>
          <fieldDescription>Initiator Electronic Mail Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>MTCE_EMAIL</fieldName>
          <fieldDescription>Maintenance Contact Electronic Mail Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>AP_REP_EMAIL</fieldName>
          <fieldDescription>Provider Contact Electronic Mail Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>EMAIL</fieldName>
          <fieldDescription>Provider Rep Electronic Mail Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>ALCON_EMAIL</fieldName>
          <fieldDescription>Alternate Local Contact Electronic Mail Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>LCON_EMAIL</fieldName>
          <fieldDescription>Local Contact Electronic Mail Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SALESCON_EMAIL</fieldName>
          <fieldDescription>Sales Contact Electronic Mail Address</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="60"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EO_Traffic_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>ORIG</fieldName>
          <fieldDescription>Traffic Estimate Originating (EO)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>TERM</fieldName>
          <fieldDescription>Traffic Estimate Terminating (EO)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EOD_USE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>EOD_USE</fieldName>
          <fieldDescription>End Office Detail Form Use</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EOI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>EOI</fieldName>
          <fieldDescription>End Office Integration</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>EP</fieldName>
          <fieldDescription>End Point</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EQPDESG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>EQTYPE</fieldName>
          <fieldDescription>Equipment Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ER_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>ER</fieldName>
          <fieldDescription>S25 Exemption Reason</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>ER</fieldName>
          <fieldDescription>S25 Exempt Reason (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>ER</fieldName>
          <fieldDescription>S25 Exempt Reason (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>ER</fieldName>
          <fieldDescription>S25C Exemption Reason</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>ER</fieldName>
          <fieldDescription>S25 Exemption Reason</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>ER</fieldName>
          <fieldDescription>S25 Exemption Reason</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ESN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>ESN</fieldName>
          <fieldDescription>Emergency Service Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EU_TERM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PEU_TERM</fieldName>
          <fieldDescription>End User Termination</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SEU_TERM</fieldName>
          <fieldDescription>End User Termination</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PEU_TERM_4W</fieldName>
          <fieldDescription>End User Termination 4 Wire</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SEU_TERM_4W</fieldName>
          <fieldDescription>End User Termination 4 Wire</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EVCI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>EVCI</fieldName>
          <fieldDescription>Ethernet Virtual Connection Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FACDESG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>FACDESG</fieldName>
          <fieldDescription>Facility/Cable Designation</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FACTYPE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>FACTYPE</fieldName>
          <fieldDescription>Facility/Cable Designation</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FACT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>FACT</fieldName>
          <fieldDescription>Feature Activity (Alt Ref)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>FACT_950</fieldName>
          <fieldDescription>Feature Activity (950-XXXX)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FBA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>FBA</fieldName>
          <fieldDescription>Facility Billing Arrangement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FCUS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>FCUS</fieldName>
          <fieldDescription>Facility Customer Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FDRC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>FDRC</fieldName>
          <fieldDescription>Facility Design Routing Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FGD_950_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>FGD_950</fieldName>
          <fieldDescription>FGD With 950 Access</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FID_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>FID</fieldName>
          <fieldDescription>Error Tag</fieldDescription>
        </reference>
        <reference>
          <asogFieldNumber/>
          <fieldName>FID</fieldName>
          <fieldDescription>Field IDentifier</fieldDescription>
          <fullDefinition>Field IDentifier</fullDefinition>
          <source>ATIS/OBF-ASR-041 Access Service Request (ASR), Mechanized Interface Specifications, Section 3</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="20"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FLOOR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BILL_FL</fieldName>
          <fieldDescription>Billing Address Floor</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DSGCON_FL</fieldName>
          <fieldDescription>Design/Engineering Address Floor</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>EUCON_FL</fieldName>
          <fieldDescription>Floor (EUCON)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FNI_NAI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>FNIA</fieldName>
          <fieldDescription>Fiber Network Identification A</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>FNIZ</fieldName>
          <fieldDescription>Fiber Network Identification Z</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FNI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>FNI</fieldName>
          <fieldDescription>Fiber Network Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>FNI</fieldName>
          <fieldDescription>Fiber Network Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>RFNI</fieldName>
          <fieldDescription>Related Fiber Network Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SFNI</fieldName>
          <fieldDescription>Secondary Fiber Network Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SFNI</fieldName>
          <fieldDescription>Secondary Fiber Network Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SFNI</fieldName>
          <fieldDescription>Secondary Fiber Network Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>IFNI1</fieldName>
          <fieldDescription>Intermediate Fiber Network Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>IFNI2</fieldName>
          <fieldDescription>Intermediate Fiber Network Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>IFNI3</fieldName>
          <fieldDescription>Intermediate Fiber Network Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>IFNI4</fieldName>
          <fieldDescription>Intermediate Fiber Network Identification</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="13"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FNT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>FNT</fieldName>
          <fieldDescription>Fiber Network Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FPI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>FPI</fieldName>
          <fieldDescription>Freeze PIC Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FSO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>FSO</fieldName>
          <fieldDescription>Foreign Switching Office</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="GETO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>GETO</fieldName>
          <fieldDescription>General Exchange Tariff Options Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>GETO</fieldName>
          <fieldDescription>General Exchange Tariff Options Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>GETO</fieldName>
          <fieldDescription>General Exchange Tariff Options Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>GETO</fieldName>
          <fieldDescription>General Exchange Tariff Options Code (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>GETO</fieldName>
          <fieldDescription>General Exchange Tariff Options Code (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>GETO</fieldName>
          <fieldDescription>General Exchange Tariff Options Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>GETO</fieldName>
          <fieldDescription>General Exchange Tariff Options Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="GLARE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>GLARE</fieldName>
          <fieldDescription>Glare Master</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="GSZ_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>GSZ</fieldName>
          <fieldDescription>Group Size</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="HML_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>HML</fieldName>
          <fieldDescription>Hunting Multi-line Group Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="HNTYP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>HNTYP</fieldName>
          <fieldDescription>Hunting Type Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>HNTYP</fieldName>
          <fieldDescription>Hunting Type Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="HPF_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>HPF</fieldName>
          <fieldDescription>Hunting Preferential List</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>HPF</fieldName>
          <fieldDescription>Hunting Preferential List</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="75"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="HTG_IND_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>HTG_IND</fieldName>
          <fieldDescription>Hunting Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="HVP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>HVP</fieldName>
          <fieldDescription>High Voltage Protection</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>HVP</fieldName>
          <fieldDescription>High Voltage Protection</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="HWL_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>HWL</fieldName>
          <fieldDescription>Hot/Warm Line</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IBS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>IBS</fieldName>
          <fieldDescription>Incremental Base Speed</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ICNI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ICNI</fieldName>
          <fieldDescription>IntelliMux Customer Network Identification</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ICOL_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>ICOL</fieldName>
          <fieldDescription>Independent Company (ICO) Location</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>ICOL</fieldName>
          <fieldDescription>Independent Company (ICO) Location</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ICSC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ICSC</fieldName>
          <fieldDescription>Interexchange Customer Service Center</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>ICSC</fieldName>
          <fieldDescription>Interexchange Customer Service Center - ASC</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>ICSC</fieldName>
          <fieldDescription>Interexchange Customer Service Center - OEC</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>ICSC</fieldName>
          <fieldDescription>Interexchange Customer Service Center - Promotional Contract</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>CO</fieldName>
          <fieldDescription>Provider Company</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IEX_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>IEX</fieldName>
          <fieldDescription>IntraLATA Extension</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IFID_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>IFID</fieldName>
          <fieldDescription>Interconnection Facility Identifier (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="33"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="INCH_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>INCH</fieldName>
          <fieldDescription>Internodal Channel</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>INCH</fieldName>
          <fieldDescription>Internodal Channel</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IndexNumber1_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>LREF</fieldName>
          <fieldDescription>Level of Service Reference Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>LREF</fieldName>
          <fieldDescription>Level of Service Reference Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IndexNumber2_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>PC-012</asogPractice>
          <fieldName>PREF</fieldName>
          <fieldDescription>Ports Configuration - Ports Reference Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>UREF</fieldName>
          <fieldDescription>User Network Interface (UNI) Reference Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>UREF</fieldName>
          <fieldDescription>User Network Interface (UNI) Reference Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IndexNumber3_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>OCC</fieldName>
          <fieldDescription>Occurrence</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IndexNumber4_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>EVCNUM</fieldName>
          <fieldDescription>EVC Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>REFNUM</fieldName>
          <fieldDescription>Reference Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>REFNUM</fieldName>
          <fieldDescription>Reference Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>REFNUM</fieldName>
          <fieldDescription>Reference Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>REFNUM</fieldName>
          <fieldDescription>Reference Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>REFNUM</fieldName>
          <fieldDescription>Reference Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>REFNUM</fieldName>
          <fieldDescription>Reference Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>REFNUM</fieldName>
          <fieldDescription>Reference Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>VCNUM</fieldName>
          <fieldDescription>Virtual Connection Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>EVC_VCNUM</fieldName>
          <fieldDescription>Ethernet Virtual Connection/Virtual Connection Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>EVC_VCNUM</fieldName>
          <fieldDescription>Ethernet Virtual Connection/Virtual Connection Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IndicatorY_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>AFG</fieldName>
          <fieldDescription>Agency of the Federal Government</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BSA</fieldName>
          <fieldDescription>Basic Serving Arrangement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>CCI</fieldName>
          <fieldDescription>Coordinated Change Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>EDA</fieldName>
          <fieldDescription>Early Date Acceptance</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>EXP</fieldName>
          <fieldDescription>Expedite</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>NAG</fieldName>
          <fieldDescription>Network Access Groom</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>QA</fieldName>
          <fieldDescription>Quote Authorized</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>UNE</fieldName>
          <fieldDescription>Unbundled Network Elements</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>CFAU</fieldName>
          <fieldDescription>Connecting Facility Assignment Use</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>CFAU</fieldName>
          <fieldDescription>Connecting Facility Assignment Use</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CFAU</fieldName>
          <fieldDescription>Connecting Facility Assignment Use</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>NS</fieldName>
          <fieldDescription>No Skip</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>BI</fieldName>
          <fieldDescription>Bundling Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>CFAU</fieldName>
          <fieldDescription>Connecting Facility Assignment Use</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>ETET</fieldName>
          <fieldDescription>End to End Test</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SCFAU</fieldName>
          <fieldDescription>Secondary Connecting Facility Assignment Use</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SEI</fieldName>
          <fieldDescription>Switched Ethernet Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>BI</fieldName>
          <fieldDescription>Bundling Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>CFAU</fieldName>
          <fieldDescription>Connecting Facility Assignment Use</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>SCFAU</fieldName>
          <fieldDescription>Secondary Connecting Facility Assignment Use</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>SMJK_PRI</fieldName>
          <fieldDescription>Smart Jack (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>SMJK_SEC</fieldName>
          <fieldDescription>Smart Jack (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>SDI</fieldName>
          <fieldDescription>Subsequent Dispatch Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>SUPI</fieldName>
          <fieldDescription>SUP Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>SUPR</fieldName>
          <fieldDescription>SUP Requested</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>NFR</fieldName>
          <fieldDescription>Network Facility Requirement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>SC</fieldName>
          <fieldDescription>Special Construction Requirement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>PC-012</asogPractice>
          <fieldName>EQP</fieldName>
          <fieldDescription>Equipped</fieldDescription>
        </reference>
        <reference>
          <asogPractice>PC-012</asogPractice>
          <fieldName>PI</fieldName>
          <fieldDescription>Primary Location Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>BI</fieldName>
          <fieldDescription>Bundling Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>CFAU</fieldName>
          <fieldDescription>Connecting Facility Assignment Use - PRILOC</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>CFAU</fieldName>
          <fieldDescription>Connecting Facility Assignment Use - SECLOC</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>ETET</fieldName>
          <fieldDescription>End to End Test</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SEI</fieldName>
          <fieldDescription>Switched Ethernet Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>NCON</fieldName>
          <fieldDescription>New Construction</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>PI</fieldName>
          <fieldDescription>Primary Location Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>SMJK</fieldName>
          <fieldDescription>Smart Jack</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>EI</fieldName>
          <fieldDescription>ENNI Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>SVP</fieldName>
          <fieldDescription>S-VLAN ID Preservation</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>ICFAU1</fieldName>
          <fieldDescription>Intermediate Connecting Facility Assignment One (1) Use</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>ICFAU2</fieldName>
          <fieldDescription>Intermediate Connecting Facility Assignment Two (2) Use</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>ICFAU3</fieldName>
          <fieldDescription>Intermediate Connecting Facility Assignment Three (3) Use</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>ICFAU4</fieldName>
          <fieldDescription>Intermediate Connecting Facility Assignment Four (4) Use</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CFAPA</fieldName>
          <fieldDescription>Connecting Facility Assignment Provider Authorized (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DISPREQ</fieldName>
          <fieldDescription>Dispatch Required (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>EXDI</fieldName>
          <fieldDescription>Extended Demarcation Indicator (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>NSB</fieldName>
          <fieldDescription>Non-Specified Bridging (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>RESVLOOP</fieldName>
          <fieldDescription>Reserved Loop Due Date (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TRS</fieldName>
          <fieldDescription>Telecommunications Relay Service (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="InformationRate8_Type">
    <xs:annotation>
      <xs:documentation>Numeric value followed by K (kilobits), M (megabits) or G (gigabits)</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SBDW</fieldName>
          <fieldDescription>Supplemental Bandwidth</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SBDW</fieldName>
          <fieldDescription>Supplemental Bandwidth</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="InformationRate_Type">
    <xs:annotation>
      <xs:documentation>Numeric value followed by K (kilobits), M (megabits) or G (gigabits)</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>PSPEED</fieldName>
          <fieldDescription>Port Speed</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>PSPEED</fieldName>
          <fieldDescription>Port Speed</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>BDW</fieldName>
          <fieldDescription>Bandwidth</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>BC</fieldName>
          <fieldDescription>Committed Burst Size</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>BE</fieldName>
          <fieldDescription>Excess Burst Size</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>CIR</fieldName>
          <fieldDescription>Committed Information Rate</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>PSPEED</fieldName>
          <fieldDescription>Port Speed</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RBC</fieldName>
          <fieldDescription>Related Committed Burst Size</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RBE</fieldName>
          <fieldDescription>Related Excess Burst Size</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RCIR</fieldName>
          <fieldDescription>Related Committed Information Rate</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RPSPEED</fieldName>
          <fieldDescription>Related Port Speed</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DCIR</fieldName>
          <fieldDescription>Disconnect Committed Information Rate (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="INTER_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>INTER</fieldName>
          <fieldDescription>Intrastate InterLATA Traffic</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="INTRA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>INTRA</fieldName>
          <fieldDescription>Intrastate IntraLATA Traffic</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IPAI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>IPAI</fieldName>
          <fieldDescription>Internet Protocol Address Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>IPAI</fieldName>
          <fieldDescription>Internet Protocol Address Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>IPAI</fieldName>
          <fieldDescription>Internet Protocol Address Identifier</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IPV4_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SUBNET_MASK</fieldName>
          <fieldDescription>Subnet Mask</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>SUBNET_MASK</fieldName>
          <fieldDescription>Subnet Mask</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SUBNET_MASK</fieldName>
          <fieldDescription>Subnet Mask</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IPVN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>IP_ADDRESS</fieldName>
          <fieldDescription>Internet Protocol Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>IP_ADDRESS</fieldName>
          <fieldDescription>Internet Protocol Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>IP_ADDRESS</fieldName>
          <fieldDescription>Internet Protocol Address</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="39"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ITID_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ITID</fieldName>
          <fieldDescription>Interconnection Trunk Identifier (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="45"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IWBAN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>IWBAN</fieldName>
          <fieldDescription>Inside Wire Billing Account Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CIWBAN</fieldName>
          <fieldDescription>Corrected Inside Wire Billing Account Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="16"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="JKNUM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>JKNUM</fieldName>
          <fieldDescription>Jack Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>JK_NUM</fieldName>
          <fieldDescription>Jack Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="JKPOS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>JKPOS</fieldName>
          <fieldDescription>Jack Position</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>JK_POS</fieldName>
          <fieldDescription>Jack Position</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="JK_CODE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>SEC_JKCODE</fieldName>
          <fieldDescription>Jack Code (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>PRI_JKCODE</fieldName>
          <fieldDescription>Jack Code (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>JK_CODE</fieldName>
          <fieldDescription>Jack Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="JS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>SEC_JS</fieldName>
          <fieldDescription>Jack Status (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>PRI_JS</fieldName>
          <fieldDescription>Jack Status (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>JS</fieldName>
          <fieldDescription>Jack Status</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="L2CP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>L2CP</fieldName>
          <fieldDescription>Layer Two Control Protocol</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LAGP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>LAG_P</fieldName>
          <fieldDescription>Link Aggregation Group Protection</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>LAG_P</fieldName>
          <fieldDescription>Link Aggregation Group Protection</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LAG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>LAG</fieldName>
          <fieldDescription>Link Aggregation Group</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LATA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>LATA</fieldName>
          <fieldDescription>Local Access Transport Area</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>LA</fieldName>
          <fieldDescription>Lease Arrangement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>LD1</fieldName>
          <fieldDescription>Location Designator #1</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>LD2</fieldName>
          <fieldDescription>Location Designator #2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>LD3</fieldName>
          <fieldDescription>Location Designator #3</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LEGNUM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>LEGNUM</fieldName>
          <fieldDescription>Multipoint Leg Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>LEGNUM</fieldName>
          <fieldDescription>Multipoint Leg Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LEGS25C_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>LEGS25C</fieldName>
          <fieldDescription>Surcharge Status Circuit</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>S25C</fieldName>
          <fieldDescription>Surcharge Status Circuit</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LEGSEG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>LEGSEG</fieldName>
          <fieldDescription>Segment Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LINE_CLASS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>LINE_CLASS</fieldName>
          <fieldDescription>Line Class of Service (Second Column)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LMP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>LMP</fieldName>
          <fieldDescription>Link Management Protocol</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>LMP</fieldName>
          <fieldDescription>Link Management Protocol</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LOOP_LEN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>LOOP_LEN</fieldName>
          <fieldDescription>Loop length</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LOS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>LOS</fieldName>
          <fieldDescription>Level of Service Name</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="20"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LPIC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>LPIC</fieldName>
          <fieldDescription>IntraLATA Primary Interexchange Carrier</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LRN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>LRN_G</fieldName>
          <fieldDescription>Location Routing Number Global</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>LRN</fieldName>
          <fieldDescription>Location Routing Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LSRN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>LSRN</fieldName>
          <fieldDescription>Local Service Request Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="18"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LSRSPEC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>LSRSPEC</fieldName>
          <fieldDescription>Local Service Request Specification</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LTP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>LTP</fieldName>
          <fieldDescription>Local Transport</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>LT</fieldName>
          <fieldDescription>Link Type</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>LT</fieldName>
          <fieldDescription>Link Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LV_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>LV1</fieldName>
          <fieldDescription>Location Value #1</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>LV2</fieldName>
          <fieldDescription>Location Value #2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>LV3</fieldName>
          <fieldDescription>Location Value #3</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="M64_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>M64</fieldName>
          <fieldDescription>Multiple 64 Clear Channel Capability</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MaxCellRate_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>PCR</fieldName>
          <fieldDescription>Peak Cell Rate</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>SCR</fieldName>
          <fieldDescription>Sustained Cell Rate</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>MBS</fieldName>
          <fieldDescription>Maximum Burst Size</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RPCR</fieldName>
          <fieldDescription>Related Peak Cell Rate</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RSCR</fieldName>
          <fieldDescription>Related Sustained Cell Rate</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RMBS</fieldName>
          <fieldDescription>Related Maximum Burst Size</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MBA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>MBA</fieldName>
          <fieldDescription>Make Busy Arrangement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>MBA</fieldName>
          <fieldDescription>Make Busy Arrangement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MESSAGE_ID_Type">
    <xs:annotation>
      <xs:appinfo>
        <fieldDescription>Unique ID of the message</fieldDescription>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MESSAGE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>MESSAGE</fieldName>
          <fieldDescription>Error Message</fieldDescription>
        </reference>
        <reference>
          <asogFieldNumber/>
          <fieldName>MESSAGE</fieldName>
          <fieldDescription>Acknowledgment, Fatal Error, or Non-Fatal Error Message</fieldDescription>
          <fullDefinition>Acknowledgment, Fatal Error, or Non-Fatal Error Message</fullDefinition>
          <source>ATIS/OBF-ASR-041 Access Service Request (ASR), Mechanized Interface Specifications, Section 3</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="150"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MinCellRate_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>MCR</fieldName>
          <fieldDescription>Minimum Cell Rate</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RMCR</fieldName>
          <fieldDescription>Related Minimum Cell Rate</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MISC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>MISC</fieldName>
          <fieldDescription>Miscellaneous Information</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MLG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>MLG</fieldName>
          <fieldDescription>Multi-line Non-Hunt Group Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MODE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>PC-012</asogPractice>
          <fieldName>MODE</fieldName>
          <fieldDescription>Ports Configuration - Fiber Mode</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MSG_CODE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>MSG_CODE</fieldName>
          <fieldDescription>Acknowledgment, Fatal Error, or Non-Fatal Error Message Code</fieldDescription>
          <fullDefinition>Acknowledgment, Fatal Error, or Non-Fatal Error Message Code</fullDefinition>
          <source>ATIS/OBF-ASR-041 Access Service Request (ASR), Mechanized Interface Specifications, Section 3</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="11"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MST_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>MST</fieldName>
          <fieldDescription>Master Circuit Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>PRILOC_MST</fieldName>
          <fieldDescription>Priloc Master Circuit Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>LEGMST</fieldName>
          <fieldDescription>Master Circuit Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MTCE_CONTACT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>MTCE_CONTACT</fieldName>
          <fieldDescription>Maintenance Contact</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="11"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MWI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>MWI</fieldName>
          <fieldDescription>Message Waiting Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NCI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>NCI</fieldName>
          <fieldDescription>Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>NCI</fieldName>
          <fieldDescription>Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>NCI</fieldName>
          <fieldDescription>Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SECNCI</fieldName>
          <fieldDescription>Secondary Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>NCI</fieldName>
          <fieldDescription>Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SECNCI</fieldName>
          <fieldDescription>Secondary Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>NCI</fieldName>
          <fieldDescription>Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>SECNCI</fieldName>
          <fieldDescription>Secondary Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>NCI</fieldName>
          <fieldDescription>Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>SECNCI</fieldName>
          <fieldDescription>Secondary Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>LEGSECNCI</fieldName>
          <fieldDescription>Secondary Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>SECNCI</fieldName>
          <fieldDescription>Secondary Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>NCI</fieldName>
          <fieldDescription>Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SECNCI</fieldName>
          <fieldDescription>Secondary Network Channel Interface Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>NCI</fieldName>
          <fieldDescription>Network Channel Interface Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>NC</fieldName>
          <fieldDescription>Network Channel Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>NC1</fieldName>
          <fieldDescription>Network Channel Code (T1)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>NC</fieldName>
          <fieldDescription>Network Channel Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>NC1</fieldName>
          <fieldDescription>Network Channel Code (T1)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>NC</fieldName>
          <fieldDescription>Network Channel Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>NC</fieldName>
          <fieldDescription>Network Channel Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>LEGNC</fieldName>
          <fieldDescription>Network Channel Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>NC</fieldName>
          <fieldDescription>Network Channel Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>NC</fieldName>
          <fieldDescription>Network Channel Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>NC</fieldName>
          <fieldDescription>Network Channel Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>NC</fieldName>
          <fieldDescription>Network Channel Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>NC</fieldName>
          <fieldDescription>Network Channel Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NDO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>NDO</fieldName>
          <fieldDescription>Number of Digits Outpulsed</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NFRT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>NFRT</fieldName>
          <fieldDescription>Network Facility Requirement Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NHNI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>NHNI</fieldName>
          <fieldDescription>Non-Hunt Number Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>NHNI</fieldName>
          <fieldDescription>Non-Hunt Number Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>NHNI</fieldName>
          <fieldDescription>Non-Hunt Number Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NHN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>NHN</fieldName>
          <fieldDescription>Non-Hunting Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>NHN</fieldName>
          <fieldDescription>Non-Hunting Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NK_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>NK</fieldName>
          <fieldDescription>Network Configuration</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>NWKSTAT</fieldName>
          <fieldDescription>Network Status</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NMO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>NMO</fieldName>
          <fieldDescription>Node Management Option</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>NMO</fieldName>
          <fieldDescription>Node Management Option</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NOJA1_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>NOJA1</fieldName>
          <fieldDescription>Number of Reserved Number Blocks</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NON_SUB_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>NON_SUB</fieldName>
          <fieldDescription>Non Presubscription</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NOR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>NOR</fieldName>
          <fieldDescription>Number of Requests</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NPA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SAC</fieldName>
          <fieldDescription>Service Access Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NPANXX_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>CNPANXX</fieldName>
          <fieldDescription>Local Exchange Customer NPA/NXX</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>ARLRN</fieldName>
          <fieldDescription>Alternate Routing for Location Routing Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>D_NPA_NXX</fieldName>
          <fieldDescription>Desired NPA and NXX</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NSLB_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>NSLB</fieldName>
          <fieldDescription>Notification of Subscriber Line Break</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NSTN_Type">
    <xs:annotation>
      <xs:appinfo>
        <description>Non-Standard_Telephone_Number</description>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>ATTEST_TN</fieldName>
          <fieldDescription>Additional Translations Test Telephone Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="22"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NUMP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>NUMP</fieldName>
          <fieldDescription>Number Portability</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NXX_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>NXX</fieldName>
          <fieldDescription>SAC NXX Information</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="N_U_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>N_U</fieldName>
          <fieldDescription>NNI or UNI</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>N_U</fieldName>
          <fieldDescription>NNI or UNI</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ODID_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ODID</fieldName>
          <fieldDescription>Out Bound Dial Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OPS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>OPS</fieldName>
          <fieldDescription>Operator Services</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OPTCON_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPTCON</fieldName>
          <fieldDescription>Optical Connector (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ORD_Short_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>LOOP_ORD</fieldName>
          <fieldDescription>Loop Order</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>NP_ORD</fieldName>
          <fieldDescription>Number Portability Order</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>PEND_ORD</fieldName>
          <fieldDescription>Pending Order Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="11"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ORD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>RORD</fieldName>
          <fieldDescription>Related Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>RORD</fieldName>
          <fieldDescription>Related Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>CRO</fieldName>
          <fieldDescription>Complete with Related Order</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>CRO2</fieldName>
          <fieldDescription>Complete with Related Order</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>RORD</fieldName>
          <fieldDescription>Related Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>ORD</fieldName>
          <fieldDescription>Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CRO</fieldName>
          <fieldDescription>Complete with Related Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>EVCORD</fieldName>
          <fieldDescription>Ethernet Virtual Connection Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>FORD</fieldName>
          <fieldDescription>Facility Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>ORD</fieldName>
          <fieldDescription>Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RORD</fieldName>
          <fieldDescription>Related Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ACCESSORD</fieldName>
          <fieldDescription>Access Order Number (ECI_CKT_LEVEL_RTN)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>PORTORD</fieldName>
          <fieldDescription>Port Order Number (ECI_CKT_LEVEL_RTN)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>VCORD</fieldName>
          <fieldDescription>Virtual Connection Order Number (ECI_CKT_LEVEL_RTN)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>ORD</fieldName>
          <fieldDescription>Order Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="17"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OSAC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>OSAC</fieldName>
          <fieldDescription>Other Service Access Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>OT</fieldName>
          <fieldDescription>Operator Transfer</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OTC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>OTC</fieldName>
          <fieldDescription>Other Exchange Company</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>OTC</fieldName>
          <fieldDescription>Other Exchange Company</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>OTC</fieldName>
          <fieldDescription>Other Exchange Company</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>PRILOC_OTC</fieldName>
          <fieldDescription>Other Exchange Company (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SECLOC_OTC</fieldName>
          <fieldDescription>Other Exchange Company (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>OTC</fieldName>
          <fieldDescription>Other Exchange Company (Terminating) (EVC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>PRILOC_OTC</fieldName>
          <fieldDescription>Other Exchange Company</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>PRILOC_OTC</fieldName>
          <fieldDescription>Other Exchange Company</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OVLP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>OVLP</fieldName>
          <fieldDescription>Overlap Outpulsing</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="P_BIT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>P_BIT</fieldName>
          <fieldDescription>Priority Bit</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="P8J_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>P8J</fieldName>
          <fieldDescription>Page 800 Lines J</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="P8K_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>P8K</fieldName>
          <fieldDescription>Page 800 Lines K</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="P8L_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>P8L</fieldName>
          <fieldDescription>Page 800 Lines L</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PASSWORD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <fieldDescription>Security Password</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>ITPW</fieldName>
          <fieldDescription>ISP Tunnel Password</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PC_TYP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>PC_TYP</fieldName>
          <fieldDescription>Point Code Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PCA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>SEC_PCA</fieldName>
          <fieldDescription>Protective Connecting Arrangement (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>PRI_PCA</fieldName>
          <fieldDescription>Protective Connecting Arrangement (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>PCA</fieldName>
          <fieldDescription>Protective Connecting Arrangement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PCU_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>PCU</fieldName>
          <fieldDescription>Point Code Use</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PER_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>PER</fieldName>
          <fieldDescription>Planning Engineering Request (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PNO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>PRILOC_PNO</fieldName>
          <fieldDescription>Premises Node Owner (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>SECLOC_PNO</fieldName>
          <fieldDescription>Premises Node Owner (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>SECLOC_PNO</fieldName>
          <fieldDescription>Premises Node Owner (SECLOC)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PNUM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>PNUM</fieldName>
          <fieldDescription>Promotion Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>OEC_PNUM</fieldName>
          <fieldDescription>Other Exchange Company Promotion Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="20"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PointCode_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPC_1</fieldName>
          <fieldDescription>Originating Point Code 1</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPC_2</fieldName>
          <fieldDescription>Originating Point Code 2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPC_3</fieldName>
          <fieldDescription>Originating Point Code 3</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPC_4</fieldName>
          <fieldDescription>Originating Point Code 4</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPC_5</fieldName>
          <fieldDescription>Originating Point Code 5</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPC_6</fieldName>
          <fieldDescription>Originating Point Code 6</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPC_7</fieldName>
          <fieldDescription>Originating Point Code 7</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPC_8</fieldName>
          <fieldDescription>Originating Point Code 8</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPC_9</fieldName>
          <fieldDescription>Originating Point Code 9</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPC_1</fieldName>
          <fieldDescription>Destination Point Code 1</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPC_2</fieldName>
          <fieldDescription>Destination Point Code 2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPC_3</fieldName>
          <fieldDescription>Destination Point Code 3</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPC_4</fieldName>
          <fieldDescription>Destination Point Code 4</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPC_5</fieldName>
          <fieldDescription>Destination Point Code 5</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPC_6</fieldName>
          <fieldDescription>Destination Point Code 6</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPC_7</fieldName>
          <fieldDescription>Destination Point Code 7</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPC_8</fieldName>
          <fieldDescription>Destination Point Code 8</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPC_9</fieldName>
          <fieldDescription>Destination Point Code 9</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PointCodeActivity_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPACT_1</fieldName>
          <fieldDescription>Originating Point Code Activity 1</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPACT_2</fieldName>
          <fieldDescription>Originating Point Code Activity 2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPACT_3</fieldName>
          <fieldDescription>Originating Point Code Activity 3</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPACT_4</fieldName>
          <fieldDescription>Originating Point Code Activity 4</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPACT_5</fieldName>
          <fieldDescription>Originating Point Code Activity 5</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPACT_6</fieldName>
          <fieldDescription>Originating Point Code Activity 6</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPACT_7</fieldName>
          <fieldDescription>Originating Point Code Activity 7</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPACT_8</fieldName>
          <fieldDescription>Originating Point Code Activity 8</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>OPACT_9</fieldName>
          <fieldDescription>Originating Point Code Activity 9</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPACT_1</fieldName>
          <fieldDescription>Destination Point Code Activity 1</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPACT_2</fieldName>
          <fieldDescription>Destination Point Code Activity 2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPACT_3</fieldName>
          <fieldDescription>Destination Point Code Activity 3</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPACT_4</fieldName>
          <fieldDescription>Destination Point Code Activity 4</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPACT_5</fieldName>
          <fieldDescription>Destination Point Code Activity 5</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPACT_6</fieldName>
          <fieldDescription>Destination Point Code Activity 6</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPACT_7</fieldName>
          <fieldDescription>Destination Point Code Activity 7</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPACT_8</fieldName>
          <fieldDescription>Destination Point Code Activity 8</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>DPACT_9</fieldName>
          <fieldDescription>Destination Point Code Activity 9</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PON_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>PON</fieldName>
          <fieldDescription>Purchase Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>RPON</fieldName>
          <fieldDescription>Related Purchase Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>DIVPON</fieldName>
          <fieldDescription>Diverse Purchase Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>DIVPON</fieldName>
          <fieldDescription>Diverse Purchase Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>DIVPON</fieldName>
          <fieldDescription>Diverse Purchase Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>RPON</fieldName>
          <fieldDescription>Related Purchase Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>APON</fieldName>
          <fieldDescription>Associated Purchase Order Number (COMMON_MATRIX_ROW)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>APON</fieldName>
          <fieldDescription>Associated Purchase Order Number (SAC_INFO)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RPON</fieldName>
          <fieldDescription>Related Purchase Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ACPON</fieldName>
          <fieldDescription>Alternate Customer Purchase Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>MPON</fieldName>
          <fieldDescription>Master Purchase Order Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>RPON2</fieldName>
          <fieldDescription>Related Purchase Order Number Two</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>RPON3</fieldName>
          <fieldDescription>Related Purchase Order Number Three</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>RPON4</fieldName>
          <fieldDescription>Related Purchase Order Number Four</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PON</fieldName>
          <fieldDescription>Purchase Order Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="16"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PORTS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>PORTS</fieldName>
          <fieldDescription>Port Type and Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>PORTS</fieldName>
          <fieldDescription>Port Type and Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="19"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="POWER_SUPPLY_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>PWRT</fieldName>
          <fieldDescription>Power Type (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PQTY_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>PC-012</asogPractice>
          <fieldName>PQTY</fieldName>
          <fieldDescription>Ports Configuration - Wired Ports Quantity</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PreSubInd_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>PIC</fieldName>
          <fieldDescription>Pre-subscription Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>PIC</fieldName>
          <fieldDescription>Pre-subscription Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PRID_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>PRID</fieldName>
          <fieldDescription>Priority Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PRILOC_NID_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>PRILOC_NID</fieldName>
          <fieldDescription>PRILOC Node Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>PRILOC_NID</fieldName>
          <fieldDescription>PRILOC Node Identifier</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Profile_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>PROFE</fieldName>
          <fieldDescription>Profile Egress</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>PROFI</fieldName>
          <fieldDescription>Profile Ingress</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>PROFE</fieldName>
          <fieldDescription>Profile Egress</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>PROFI</fieldName>
          <fieldDescription>Profile Ingress</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>PROFE</fieldName>
          <fieldDescription>Profile Egress</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>PROFI</fieldName>
          <fieldDescription>Profile Ingress</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="30"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ProfileCodeSet_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>PROF</fieldName>
          <fieldDescription>Profile Code Set</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PROJECT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>PROJECT</fieldName>
          <fieldDescription>Project Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>PROJECT</fieldName>
          <fieldDescription>Project Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>PROJECT</fieldName>
          <fieldDescription>Project Identification</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="16"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PROVINT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>PROVINT</fieldName>
          <fieldDescription>Provisioning Interval</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PSAP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>PSAP</fieldName>
          <fieldDescription>Public Service Answering Point</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PSLI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>PSLI</fieldName>
          <fieldDescription>Primary Service Location Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PTYP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>PC-012</asogPractice>
          <fieldName>PTYP</fieldName>
          <fieldDescription>Ports Configuration - Ports Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PWR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>PC-012</asogPractice>
          <fieldName>PWR</fieldName>
          <fieldDescription>Ports Configuration - Power</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="QACI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>QACI</fieldName>
          <fieldDescription>Quantity Additional Circuit Information</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="QOPT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>QOPT</fieldName>
          <fieldDescription>Queuing Option (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="QPR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>PC-012</asogPractice>
          <fieldName>PQPR</fieldName>
          <fieldDescription>Quantity of Primary Port Configuration Elements</fieldDescription>
        </reference>
        <reference>
          <asogPractice>PC-012</asogPractice>
          <fieldName>QPR</fieldName>
          <fieldDescription>Quantity of Port Configuration Elements</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="QTY_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>QTY</fieldName>
          <fieldDescription>Quantity</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="QTY2_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>NSL</fieldName>
          <fieldDescription>Number of Secondary Locations</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>NSL</fieldName>
          <fieldDescription>Number of Secondary Locations</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>NSL</fieldName>
          <fieldDescription>Number of Secondary Locations</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>NSL</fieldName>
          <fieldDescription>Number of Secondary Locations</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>NVC</fieldName>
          <fieldDescription>Number of Virtual Connections</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>NVC</fieldName>
          <fieldDescription>Number of Virtual Connections</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>QNAI</fieldName>
          <fieldDescription>Quantity of Network Assignment Information</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>QSA</fieldName>
          <fieldDescription>Quantity Service Address Location Information</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>NUT</fieldName>
          <fieldDescription>Number of UNI Terminations</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>QIBS</fieldName>
          <fieldDescription>Quantity Incremental Base Speed</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="QUE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>QUE</fieldName>
          <fieldDescription>Queuing</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RC6BX_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>RC6BX</fieldName>
          <fieldDescription>Recording Number Blocks</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RCF_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>RCF</fieldName>
          <fieldDescription>Remote Call Forwarding</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RCODE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>RCODE</fieldName>
          <fieldDescription>Jeopardy Reason Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RDET_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>RDET</fieldName>
          <fieldDescription>Jeopardy Reason Code Detail</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="60"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="REF_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>REF</fieldName>
          <fieldDescription>Reference Value = A,B,C,D</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
      <xs:enumeration value="A"/>
      <xs:enumeration value="B"/>
      <xs:enumeration value="C"/>
      <xs:enumeration value="D"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RELAY_RACK_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>RELAY_RACK</fieldName>
          <fieldDescription>Relay Rack</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Remarks124_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks (TQ)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks (SACNXX)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="124"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Remarks186_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ASR_REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Remarks</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="186"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Remarks225_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>REMARKS</fieldName>
          <fieldDescription>Clarification/Notification Remarks</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="225"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Remarks250_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>CONFIG_REMARKS</fieldName>
          <fieldDescription>Configuration Remarks</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="250"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="REP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>REP</fieldName>
          <fieldDescription>Related End Point</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="REQTYP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>REQTYP</fieldName>
          <fieldDescription>Requisition Type and Status</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RGN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>RGN1</fieldName>
          <fieldDescription>Register Number 1</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>RGN2</fieldName>
          <fieldDescription>Register Number 2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>RGN3</fieldName>
          <fieldDescription>Register Number 3</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RL_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>RL</fieldName>
          <fieldDescription>Root Leaf</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RMP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>RMP</fieldName>
          <fieldDescription>Ring Management Performance Monitoring</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ROOM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BILL_RM</fieldName>
          <fieldDescription>Billing Address Room</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DSGCON_RM</fieldName>
          <fieldDescription>Design/Engineering Address Room</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>EUCON_RM</fieldName>
          <fieldDescription>Room (EUCON)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>RT</fieldName>
          <fieldDescription>Response Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RTEMI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>INC_MI</fieldName>
          <fieldDescription>Incremental Mileage</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RTI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>RTI</fieldName>
          <fieldDescription>Route Index</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RTR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>RTR</fieldName>
          <fieldDescription>Response Type Requested</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="S25_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>S25</fieldName>
          <fieldDescription>Surcharge Status</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>PRILOC_S25</fieldName>
          <fieldDescription>Surcharge Status</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>S25</fieldName>
          <fieldDescription>Surcharge Status</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>S25</fieldName>
          <fieldDescription>Surcharge Status</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SACNON_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SACNON</fieldName>
          <fieldDescription>SAC Non-Conforming</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SAC_ACT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SAC_ACT</fieldName>
          <fieldDescription>SAC Activity</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SAI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SAI</fieldName>
          <fieldDescription>Specialized Arrangement Identifier</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SAL_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SAL</fieldName>
          <fieldDescription>Service Assurance Level</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SANO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>SANO</fieldName>
          <fieldDescription>Address Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SAN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>SAN</fieldName>
          <fieldDescription>Subscriber Authorization Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="30"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SAPR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>SAPR</fieldName>
          <fieldDescription>Address Number Prefix</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SAR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SAR</fieldName>
          <fieldDescription>Service Availability Request (ECI_ASR_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SASD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>SASD</fieldName>
          <fieldDescription>Street Directional Prefix</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SASF_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>SASF</fieldName>
          <fieldDescription>Address Number Suffix</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SASN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>SASN</fieldName>
          <fieldDescription>Street Name</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="60"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SASS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>SASS</fieldName>
          <fieldDescription>Street Directional Suffix</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SATH_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>SATH</fieldName>
          <fieldDescription>Street Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SCCT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>SCCT</fieldName>
          <fieldDescription>Service Category</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RSCCT</fieldName>
          <fieldDescription>Related Service Category</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SCD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>SCD</fieldName>
          <fieldDescription>Service Code Denial Requirement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SCRT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SCRT</fieldName>
          <fieldDescription>Service Class Routing</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="53"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SFG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>SFG</fieldName>
          <fieldDescription>Simulated Facility Group Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SFN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>SFN</fieldName>
          <fieldDescription>Simulated Facility Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>SI</fieldName>
          <fieldDescription>Secondary Point of Termination Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SLC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SLC</fieldName>
          <fieldDescription>Signaling Link Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SLC</fieldName>
          <fieldDescription>Signaling Link Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SM</fieldName>
          <fieldDescription>Speed of Issuance Measurement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SM2</fieldName>
          <fieldDescription>Speed of Issuance Measurement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SM3</fieldName>
          <fieldDescription>Speed of Issuance Measurement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SM4</fieldName>
          <fieldDescription>Speed of Issuance Measurement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SM5</fieldName>
          <fieldDescription>Speed of Issuance Measurement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SM6</fieldName>
          <fieldDescription>Speed of Issuance Measurement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SM7</fieldName>
          <fieldDescription>Speed of Issuance Measurement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="19"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SMDI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>SMDI</fieldName>
          <fieldDescription>Simplified Message Desk Interface</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SON_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SON</fieldName>
          <fieldDescription>Service Order Numbers</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="128"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>CSPC</fieldName>
          <fieldDescription>Customer Signaling Point Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SSPC</fieldName>
          <fieldDescription>Service Signaling Point Code(s)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TSPC</fieldName>
          <fieldDescription>Transient Signaling Point Code(s)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>ECSPC</fieldName>
          <fieldDescription>Exchange Company Signaling Point Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>CSPC</fieldName>
          <fieldDescription>Customer's Signaling Point Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>ECSPC</fieldName>
          <fieldDescription>Access Provider Signaling Point Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="9"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SPA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>SPA</fieldName>
          <fieldDescription>Special Action Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>SPA</fieldName>
          <fieldDescription>Special Action Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SPC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>SPC</fieldName>
          <fieldDescription>Speed Calling</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SPEC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>SPEC</fieldName>
          <fieldDescription>Service and Product Enhancement Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>SPEC</fieldName>
          <fieldDescription>Service and Product Enhancement Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>SPEC</fieldName>
          <fieldDescription>Service and Product Enhancement Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>SPEC</fieldName>
          <fieldDescription>Service and Product Enhancement Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SR_Short_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>SR</fieldName>
          <fieldDescription>Special Routing Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SR</fieldName>
          <fieldDescription>Special Routing Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>SR</fieldName>
          <fieldDescription>Special Routing Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SR</fieldName>
          <fieldDescription>Special Routing Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SR</fieldName>
          <fieldDescription>Special Routing Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>RING-021</asogPractice>
          <fieldName>SR</fieldName>
          <fieldDescription>Special Routing Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ARI-022</asogPractice>
          <fieldName>SR</fieldName>
          <fieldDescription>Special Routing Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SRN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>SRN</fieldName>
          <fieldDescription>Service Reservation Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>SRN</fieldName>
          <fieldDescription>Service Reservation Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SS7UB_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SS7UB</fieldName>
          <fieldDescription>Signaling System 7 Unbundled</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SSPC_TYPE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SSPC_TYPE</fieldName>
          <fieldDescription>Type of Service Signaling Point Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SSS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SSS</fieldName>
          <fieldDescription>Secondary Service Support</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SSS</fieldName>
          <fieldDescription>Secondary Service Support</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SST_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SST</fieldName>
          <fieldDescription>Start Signaling Tone</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="STATE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BILL_STATE</fieldName>
          <fieldDescription>Billing Address State/Province</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DSGCON_STATE</fieldName>
          <fieldDescription>Design/Engineering Address State</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>STATE</fieldName>
          <fieldDescription>State/Province</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>EUCON_STATE</fieldName>
          <fieldDescription>State/Province (EUCON)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PEU_STATE</fieldName>
          <fieldDescription>State</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SEU_STATE</fieldName>
          <fieldDescription>State</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="STN_DATA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>STN_DATA</fieldName>
          <fieldDescription>Screening Telephone Number Data</fieldDescription>
          <fullDefinition>Screening Telephone Number Data</fullDefinition>
          <source>ATIS/OBF-ASR-041 Access Service Request (ASR), Mechanized Interface Specifications, Section 3</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="STREET_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BILL_STR</fieldName>
          <fieldDescription>Billing Address Street</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DSGCON_STR</fieldName>
          <fieldDescription>Design/Engineering Address Street</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>EUCON_STR</fieldName>
          <fieldDescription>End User Contact Street Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PEU_STREET</fieldName>
          <fieldDescription>End User Street Address</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SEU_STREET</fieldName>
          <fieldDescription>End User Street Address</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="STR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>STR</fieldName>
          <fieldDescription>Single Tandem Routing</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SUBSPEC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SUBSPEC</fieldName>
          <fieldDescription>Sub-Product Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SUBST_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SUBST</fieldName>
          <fieldDescription>Substandard</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="14"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SubSystemNumber_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SSN</fieldName>
          <fieldDescription>Sub System Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SUP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>SUP</fieldName>
          <fieldDescription>Supplement Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SystemNumber_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ASN</fieldName>
          <fieldDescription>Autonomous System Number (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TAG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>TAG</fieldName>
          <fieldDescription>Tagging</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TBE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>TBE</fieldName>
          <fieldDescription>Toll Billing Exception</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TCIC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TCIC</fieldName>
          <fieldDescription>Trunk Circuit ID Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>TCIC</fieldName>
          <fieldDescription>Trunk Circuit ID Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>TCIC</fieldName>
          <fieldDescription>Trunk Circuit Identification Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>TCIC</fieldName>
          <fieldDescription>Trunk Circuit Identification Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TDM_Traffic_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>ORIG_TRF</fieldName>
          <fieldDescription>Originating Traffic (Tandem)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>TERM_TRF</fieldName>
          <fieldDescription>Terminating Traffic (Tandem)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TelNumber12_Type">
    <xs:annotation>
      <xs:documentation>Telephone Number without Extension in "NPA-NXX-LLLL" format</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>ACPGN</fieldName>
          <fieldDescription>Access Pager Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>STN</fieldName>
          <fieldDescription>Screening Telephone Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TelNumber4_Type">
    <xs:annotation>
      <xs:documentation>Shortest Telephone Number in "LLLL" format</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>XXXX</fieldName>
          <fieldDescription>950 Access Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TEST_TN</fieldName>
          <fieldDescription>SAC Test Telephone Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TelNumber7_Type">
    <xs:annotation>
      <xs:documentation>Short Telephone Number without Extension in "NXXLLLL" format</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>PTN</fieldName>
          <fieldDescription>Plant Test Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>SIA</fieldName>
          <fieldDescription>Special Intercept Arrangement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TelNumberExt14_Type">
    <xs:annotation>
      <xs:documentation>Telephone Number with Extension in "NPANXXLLLLEEEE" format</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>IMPCON_TEL</fieldName>
          <fieldDescription>Implementation Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>EUCON_TEL</fieldName>
          <fieldDescription>End User Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>FIMPTEL</fieldName>
          <fieldDescription>Facility Implementation Telephone Number (T1)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>GTEL</fieldName>
          <fieldDescription>General Exchange Tariff Options Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>FIMPTEL</fieldName>
          <fieldDescription>Facility Implementation Telephone Number (T1)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>GCON_TEL</fieldName>
          <fieldDescription>General Exchange Tariff Options Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>GTEL</fieldName>
          <fieldDescription>General Exchange Tariff Options Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>EUCON_TEL</fieldName>
          <fieldDescription>End User Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>AP_REP_TEL</fieldName>
          <fieldDescription>Provider Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>AP_REP_TEL</fieldName>
          <fieldDescription>Provider Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>GTEL</fieldName>
          <fieldDescription>General Exchange Tariff Options Contact Telephone Number (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>GTEL</fieldName>
          <fieldDescription>General Exchange Tariff Options Contact Telephone Number (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>AACTEL</fieldName>
          <fieldDescription>Alternate Access Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>AALCON_TEL</fieldName>
          <fieldDescription>Additional Alternate Local Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>ACTEL</fieldName>
          <fieldDescription>Access Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>ALCON_TEL</fieldName>
          <fieldDescription>Alternate Local Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TECHCON_TEL</fieldName>
          <fieldDescription>Technical Contact Telephone Number (NPANXX/X)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TECHCON_TEL</fieldName>
          <fieldDescription>Technical Contact Telephone Number (SAC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TECHCON_TEL</fieldName>
          <fieldDescription>Technical Contact Telephone Number (Translation)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ATR_CON</fieldName>
          <fieldDescription>Acceptance Testing Request Contact</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>SALESCON_TEL</fieldName>
          <fieldDescription>Sales Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>EC_MCO</fieldName>
          <fieldDescription>Provider Maintenance Control Office</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>EC_OCO</fieldName>
          <fieldDescription>Provider Operations Control Office</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>EC_TEL</fieldName>
          <fieldDescription>Provider Telephone Number (DSGCON)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>TEL</fieldName>
          <fieldDescription>Telephone Number (DSGCON)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="14"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TelNumberExt17_Type">
    <xs:annotation>
      <xs:documentation>Telephone Number with Extension in "NPANXXLLLLEEEEEEE" format</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BILLCON_TEL</fieldName>
          <fieldDescription>Billing Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DSGCON_TEL</fieldName>
          <fieldDescription>Design/Engineering Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>INITIATOR_TEL</fieldName>
          <fieldDescription>Initiator Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CNR-010</asogPractice>
          <fieldName>INIT_TEL</fieldName>
          <fieldDescription>Initiator Telephone Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="17"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TelNumber_Type">
    <xs:annotation>
      <xs:documentation>Telephone Number without Extension in "NPANXXLLLL" format</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BIC_TEL</fieldName>
          <fieldDescription>BIC Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>CB_TEL_NO</fieldName>
          <fieldDescription>Conference Bridge Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>ISTN</fieldName>
          <fieldDescription>Interconnection Screening Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>INIT_FAX_NO</fieldName>
          <fieldDescription>Initiator Facsimile Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DSG_FAX_NO</fieldName>
          <fieldDescription>Design Facsimile Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>MTCE_TEL</fieldName>
          <fieldDescription>Maintenance Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>DESIRED_TN</fieldName>
          <fieldDescription>Desired Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>PDN</fieldName>
          <fieldDescription>Predetermined Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>TNC_TO_TN</fieldName>
          <fieldDescription>Transfer of Calls To</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>GBTN</fieldName>
          <fieldDescription>General Exchange Tariff Options Billing Tel No</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>CTX_TEL</fieldName>
          <fieldDescription>CENTREX Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>CTX_TEL</fieldName>
          <fieldDescription>CENTREX Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>GBTN</fieldName>
          <fieldDescription>General Exchange Tariff Options Billing Telephone Number (PRILOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>GBTN</fieldName>
          <fieldDescription>General Exchange Tariff Options Billing Telephone Number (SECLOC)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TTEST_TN</fieldName>
          <fieldDescription>Translations Test Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>GBTN</fieldName>
          <fieldDescription>General Exchange Tariff Options Billing Tel No</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>WKTEL</fieldName>
          <fieldDescription>Working Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>BTN</fieldName>
          <fieldDescription>Billing Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>ELTN</fieldName>
          <fieldDescription>Eligible Local Telephone Number (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>LSNP_TN</fieldName>
          <fieldDescription>Local Service Number Portability Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>LOSS_TN</fieldName>
          <fieldDescription>Loss Notification Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>TNC_TO</fieldName>
          <fieldDescription>Transfer Of Calls To</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>GBTN</fieldName>
          <fieldDescription>General Exchange Tariff Options Billing Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>CTX_TEL</fieldName>
          <fieldDescription>CENTREX Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>AP_REP_TEL</fieldName>
          <fieldDescription>Provider Contact Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>STN</fieldName>
          <fieldDescription>Screening Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>RTN</fieldName>
          <fieldDescription>Recording Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>DTN</fieldName>
          <fieldDescription>Discrete Telephone Number</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CB_TEL_NO</fieldName>
          <fieldDescription>Conference Bridge Telephone Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TER_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>TER</fieldName>
          <fieldDescription>Terminal Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TESTANI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TESTANI</fieldName>
          <fieldDescription>Test Automatic Number Identification Indicator (Translation)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TESTANI</fieldName>
          <fieldDescription>Test Automatic Number Identification Indicator (SAC)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TEST_RESP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TEST_RESP</fieldName>
          <fieldDescription>SAC Test Response</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TTEST_RESP</fieldName>
          <fieldDescription>Translations Test Response</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>ATTEST_RESP</fieldName>
          <fieldDescription>Translations Test Response</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="62"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>TE</fieldName>
          <fieldDescription>Tax Exemption</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>FUSF</fieldName>
          <fieldDescription>Federal Universal Service Fund</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TGN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TGN</fieldName>
          <fieldDescription>Trunk Group Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TGTYP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TGTYP</fieldName>
          <fieldDescription>Trunk Group Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TIA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TIA</fieldName>
          <fieldDescription>Trunk Interconnection Arrangement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TIER_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TIER</fieldName>
          <fieldDescription/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Time_Type">
    <xs:annotation>
      <xs:documentation>Time in "HHMMAP" format (HH between 01 and 24) (MM between 00 and 59) (AP=AM/PM or blank)</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>T_SENT</fieldName>
          <fieldDescription>Time Sent</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>FDT</fieldName>
          <fieldDescription>Frame Due Time</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CT_SENT</fieldName>
          <fieldDescription>Confirmation Time Sent</fieldDescription>
        </reference>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>T_SENT</fieldName>
          <fieldDescription>Time Sent</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TIMEZONE_Type">
    <xs:annotation>
      <xs:documentation>Time in "THHMMAP" format (T is C, E, M, or P) (HH between 01 and 24) (MM between 00 and 59) (AP=AM/PM or blank)</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>FDT</fieldName>
          <fieldDescription>Frame Due Time</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>FDT</fieldName>
          <fieldDescription>Frame Due Time</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TKSEQ_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TKSEQ</fieldName>
          <fieldDescription>Trunk Group Hunt Sequence</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TKSIG_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TKSIG</fieldName>
          <fieldDescription>Trunk Signaling</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TK_QTY_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>TK_QTY</fieldName>
          <fieldDescription>Trunk Quantity</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TLA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>TLA</fieldName>
          <fieldDescription>Test Line Access</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TLV_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>TLV</fieldName>
          <fieldDescription>Transmission Level Point</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>SECTLV</fieldName>
          <fieldDescription>Secondary Transmission Level Point</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>PRILOC_TLV</fieldName>
          <fieldDescription>Transmission Level Point</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>SECLOC_TLV</fieldName>
          <fieldDescription>Secondary Transmission Level Point</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>TLV</fieldName>
          <fieldDescription>Transmission Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>SECTLV</fieldName>
          <fieldDescription>Secondary Transmission Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TLV</fieldName>
          <fieldDescription>Transmission Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>SECTLV</fieldName>
          <fieldDescription>Secondary Transmission Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>LEGSECTLV</fieldName>
          <fieldDescription>Secondary Transmission Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>TLV</fieldName>
          <fieldDescription>Transmission Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>SECTLV</fieldName>
          <fieldDescription>Transmission Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>TLV</fieldName>
          <fieldDescription>Transmission Level Point</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SECTLV</fieldName>
          <fieldDescription>Secondary Transmission Level</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TNC_PER_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>TNC_PER</fieldName>
          <fieldDescription>Transfer of Calls Period</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>TNC_PER</fieldName>
          <fieldDescription>Transfer Of Calls Period</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TNT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TNT</fieldName>
          <fieldDescription/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TOGP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TOGP</fieldName>
          <fieldDescription>Toggable Parameter</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TOS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>TOS</fieldName>
          <fieldDescription>Type of Service</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TPL_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TPL</fieldName>
          <fieldDescription>Trunk Pulsing</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TPTGN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TPTGN</fieldName>
          <fieldDescription>Tandem Provider Trunk Group Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TQDIR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>DIR</fieldName>
          <fieldDescription>Directionality</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TQ_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>TQ</fieldName>
          <fieldDescription>Translation Questionnaire Request</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TRANS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TRANS</fieldName>
          <fieldDescription>Transmission Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TRFTYP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TRFTYP</fieldName>
          <fieldDescription>Traffic Type</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>TRFTYP</fieldName>
          <fieldDescription>Traffic Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TRF_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>PRILOC_TRF</fieldName>
          <fieldDescription>Transfer Feature</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>TRF</fieldName>
          <fieldDescription>Transfer Feature</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MSL-006</asogPractice>
          <fieldName>LEGTRF</fieldName>
          <fieldDescription>Transfer Feature</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TRKQTY_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>TRKQTY</fieldName>
          <fieldDescription>Trunk Quantity</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TRM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>TRM</fieldName>
          <fieldDescription>Traffic Management (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TRN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TRN_START</fieldName>
          <fieldDescription>Trunk Number (Start)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TRN_END</fieldName>
          <fieldDescription>Trunk Number (End)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>TRN_START</fieldName>
          <fieldDescription>Trunk Number (Start)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>TRN_END</fieldName>
          <fieldDescription>Trunk Number (End)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>TRN_START</fieldName>
          <fieldDescription>Trunk Number (Start)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>TRN_END</fieldName>
          <fieldDescription>Trunk Number (End)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TrunkGroup_Ref_or_TSC_Type">
    <xs:annotation>
      <xs:documentation>Trunk Group Reference(A,B,C,D) or TSC</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>BCR3</fieldName>
          <fieldDescription>Bearer Capability Routing 3.1 KHZ</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>BCR5</fieldName>
          <fieldDescription>Bearer Capability Routing 56 KB</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>BCR6</fieldName>
          <fieldDescription>Bearer Capability Routing 64 KB</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TrunkGroup_X_Type">
    <xs:annotation>
      <xs:documentation>Trunk Group Reference(A,B,C,D) or X</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_ALL</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_1</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_0</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_00</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_011</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_01</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_1_700</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_0_700</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_8YY</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_1_9YY</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_0_9YY</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_1_5YY</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_0_5YY</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_0_L</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_411</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_LPDA</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>SERV_PREF_0_L_INTRA</fieldName>
          <fieldDescription>TQ REF - Trunk Group or X</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
      <xs:enumeration value="A"/>
      <xs:enumeration value="B"/>
      <xs:enumeration value="C"/>
      <xs:enumeration value="D"/>
      <xs:enumeration value="X"/>
      <xs:enumeration value=" "/>
      <xs:enumeration value=""/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TSC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>TSC</fieldName>
          <fieldDescription>Two Six Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>REL_TSC</fieldName>
          <fieldDescription>Related Two-Six Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TSC2</fieldName>
          <fieldDescription>Two Six Code 2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TSC3</fieldName>
          <fieldDescription>Two Six Code 3</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TSC4</fieldName>
          <fieldDescription>Two Six Code 4</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>TSC</fieldName>
          <fieldDescription>Two Six Code (Tandem Level)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>TSC</fieldName>
          <fieldDescription>Two-Six Code (End Office)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>TSC</fieldName>
          <fieldDescription>Two Six Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>TSC</fieldName>
          <fieldDescription>Two Six Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>TSC</fieldName>
          <fieldDescription>Two Six Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TSP_CODE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>TSP_CODE</fieldName>
          <fieldDescription>Telecommunications Service Priority Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TSP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>TSP</fieldName>
          <fieldDescription>Telecommunications Service Priority</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>TSP</fieldName>
          <fieldDescription>Telecommunications Service Priority</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="11"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TTN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TTN</fieldName>
          <fieldDescription>Translation Type Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TTT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>TTT</fieldName>
          <fieldDescription>Transport Trunk Terminating Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TWC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>FGA-002</asogPractice>
          <fieldName>TWC</fieldName>
          <fieldDescription>Three Way Calling</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UNITS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EOD-014</asogPractice>
          <fieldName>UNITS</fieldName>
          <fieldDescription>Tandem Units</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UNIT_NUM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>UNIT</fieldName>
          <fieldDescription>Unit</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UNIT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>UNIT</fieldName>
          <fieldDescription>Unit Identification</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UsagePercentage_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>LUP</fieldName>
          <fieldDescription>Intrastate IntraLATA Usage Percentage</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>PIU</fieldName>
          <fieldDescription>Percentage of Interstate Usage</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>PLU</fieldName>
          <fieldDescription>Percentage of Local Usage</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="USDO2_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>USDO2</fieldName>
          <fieldDescription>Dial Out Pulsing Options</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VCID_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>VCID</fieldName>
          <fieldDescription>Virtual Circuit Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="31"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VCIOCD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>VCIOCD</fieldName>
          <fieldDescription>Virtual Channel Identifier (OCD)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="11"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VCI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>VCI</fieldName>
          <fieldDescription>Virtual Circuit Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RVCI</fieldName>
          <fieldDescription>Related Virtual Circuit Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>VCI</fieldName>
          <fieldDescription>Virtual Circuit Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>RVCI</fieldName>
          <fieldDescription>Related Virtual Circuit Identifier</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VEN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>VEN</fieldName>
          <fieldDescription>Vendor Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VER_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>VER</fieldName>
          <fieldDescription>Version Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>ECVER</fieldName>
          <fieldDescription>Exchange Company Version</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>VER</fieldName>
          <fieldDescription>Version Identification</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>ISS_NO</fieldName>
          <fieldDescription>Issue Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VLAN_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CE_VLAN_END</fieldName>
          <fieldDescription>Customer Edge Virtual Local Area Network End</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>CE_VLAN_START</fieldName>
          <fieldDescription>Customer Edge Virtual Local Area Network Start</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>S_VLAN</fieldName>
          <fieldDescription>Stacked Virtual Local Area Network</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>CE_VLAN_END</fieldName>
          <fieldDescription>Customer Edge Virtual Local Area Network End</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>CE_VLAN_START</fieldName>
          <fieldDescription>Customer Edge Virtual Local Area Network Start</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>S_VLAN_END</fieldName>
          <fieldDescription>Service Virtual Local Area Network End</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EVC-016</asogPractice>
          <fieldName>S_VLAN_START</fieldName>
          <fieldDescription>Service Virtual Local Area Network Start</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>VLAN_TAG</fieldName>
          <fieldDescription>Virtual Local Area Network Tag (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>VLAN_TAG</fieldName>
          <fieldDescription>Virtual Local Area Network Tag (ECI_CKT_LEVEL_RTN)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VPID_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>VPID</fieldName>
          <fieldDescription>Virtual Path Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="31"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VPIOCD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>VPIOCD</fieldName>
          <fieldDescription>Virtual Path Identifier (OCD)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="11"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VPI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>VPI</fieldName>
          <fieldDescription>Virtual Path Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>RVPI</fieldName>
          <fieldDescription>Related Virtual Path Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>VPI</fieldName>
          <fieldDescription>Virtual Path Identifier</fieldDescription>
        </reference>
        <reference>
          <asogPractice>CN-011</asogPractice>
          <fieldName>RVPI</fieldName>
          <fieldDescription>Related Virtual Path Identifier</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VPN_NAME_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>VPN_NM</fieldName>
          <fieldDescription>Virtual Private Network Name (ECI_CKT_LEVEL)</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="40"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VSC_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>TQ-019</asogPractice>
          <fieldName>VSC</fieldName>
          <fieldDescription>Vertical Service Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VST_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>VST</fieldName>
          <fieldDescription>Virtual Service Translations</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VTA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>VTA</fieldName>
          <fieldDescription>Variable Term Agreement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>VCVTA</fieldName>
          <fieldDescription>Virtual Connection Variable Term Agreement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>VC-023</asogPractice>
          <fieldName>VCVTA</fieldName>
          <fieldDescription>Virtual Connection Variable Term Agreement</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>VTA2</fieldName>
          <fieldDescription>Variable Term Agreement Two</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>VTA3</fieldName>
          <fieldDescription>Variable Term Agreement Three</fieldDescription>
        </reference>
        <reference>
          <asogPractice>MULTIEC-018</asogPractice>
          <fieldName>OECVTA</fieldName>
          <fieldDescription>Other Exchange Company Variable Term Agreement</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="17"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VTI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>VTIA</fieldName>
          <fieldDescription>Virtual Termination Identifier A</fieldDescription>
        </reference>
        <reference>
          <asogPractice>NAI-024</asogPractice>
          <fieldName>VTIZ</fieldName>
          <fieldDescription>Virtual Termination Identifier Z</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VZB_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>Verizon Business</fieldName>
          <fieldDescription>Identifies ISP Orders from the Vconnect System</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WACD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>WACD1</fieldName>
          <fieldDescription>Work Authorization Circuit Detail 1</fieldDescription>
        </reference>
        <reference>
          <asogPractice>EUSA-013</asogPractice>
          <fieldName>WACD2</fieldName>
          <fieldDescription>Work Authorization Circuit Detail 2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>WACD1</fieldName>
          <fieldDescription>Work Authorization Circuit Detail 1</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRANSPORTSA-005</asogPractice>
          <fieldName>WACD2</fieldName>
          <fieldDescription>Work Authorization Circuit Detail 2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>WACD1</fieldName>
          <fieldDescription>Work Authorization Circuit Detail 1</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ACI-007</asogPractice>
          <fieldName>WACD2</fieldName>
          <fieldDescription>Work Authorization Circuit Detail 2</fieldDescription>
        </reference>
        <reference>
          <asogPractice>TRUNK-004</asogPractice>
          <fieldName>WACD1</fieldName>
          <fieldDescription>Work Authorization Circuit Detail 1</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="36"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WAVELENGTH_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>PC-012</asogPractice>
          <fieldName>WAVELENGTH</fieldName>
          <fieldDescription>Ports Configuration - Wavelength</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WRO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>OB-009</asogPractice>
          <fieldName>WRO</fieldName>
          <fieldDescription>WATS Recording Office</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WSI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>WSI</fieldName>
          <fieldDescription>Wireless Site Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WST_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>WST</fieldName>
          <fieldDescription>Wireless Service Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="XOCD_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ECI-025</asogPractice>
          <fieldName>XOCD</fieldName>
          <fieldDescription>Optical Concentration Device</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="23"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ZIP_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>BILL_ZIP</fieldName>
          <fieldDescription>Billing Address Zip Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>ASR-001</asogPractice>
          <fieldName>DSGCON_ZIP</fieldName>
          <fieldDescription>Design/Engineering Address Zip Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>SALI-015</asogPractice>
          <fieldName>ZIP</fieldName>
          <fieldDescription>Zip Code</fieldDescription>
        </reference>
        <reference>
          <asogPractice>WATS-003</asogPractice>
          <fieldName>EUCON_ZIP</fieldName>
          <fieldDescription>Zip Code</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <!--========================================================================-->
  <!--End: simpleType DEFINITIONS (Field Types)-->
  <!--========================================================================-->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--Class: CE_VLAN-->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xs:element name="CE_VLAN">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Customer Edge Virtual Local Area Network</description>
          <ATIS_OBF_ASR_Practice>011, 016</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="CE_VLAN_START" type="VLAN_Type"/>
        <xs:element name="CE_VLAN_END" type="VLAN_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--Class: S_VLAN-->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xs:element name="S_VLAN">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Service Virtual Local Area Network</description>
          <ATIS_OBF_ASR_Practice>011, 016</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="S_VLAN_START" type="VLAN_Type"/>
        <xs:element name="S_VLAN_END" type="VLAN_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--===========================================-->
  <!--Complex Types  Complex Types  Complex Types-->
  <!--===========================================-->
  <xs:complexType name="Address_ComplexType" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Address Detail</description>
        <ATIS_OBF_ASR_Practice>015</ATIS_OBF_ASR_Practice>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="AFT" type="AFT_Type" minOccurs="0"/>
      <xs:element name="SAPR" type="SAPR_Type" minOccurs="0"/>
      <xs:element name="SANO" type="SANO_Type" minOccurs="0"/>
      <xs:element name="SASF" type="SASF_Type" minOccurs="0"/>
      <xs:element name="SASD" type="SASD_Type" minOccurs="0"/>
      <xs:element name="SASN" type="SASN_Type" minOccurs="0"/>
      <xs:element name="SATH" type="SATH_Type" minOccurs="0"/>
      <xs:element name="SASS" type="SASS_Type" minOccurs="0"/>
      <xs:element name="LD1" type="LD_Type" minOccurs="0"/>
      <xs:element name="LV1" type="LV_Type" minOccurs="0"/>
      <xs:element name="LD2" type="LD_Type" minOccurs="0"/>
      <xs:element name="LV2" type="LV_Type" minOccurs="0"/>
      <xs:element name="LD3" type="LD_Type" minOccurs="0"/>
      <xs:element name="LV3" type="LV_Type" minOccurs="0"/>
      <xs:element name="CITY" type="CITY32_Type" minOccurs="0"/>
      <xs:element name="STATE" type="STATE_Type" minOccurs="0"/>
      <xs:element name="ZIP" type="ZIP_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CFA_ComplexType" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Channel Facility Assignment</description>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="FACDESG" type="FACDESG_Type" minOccurs="0"/>
      <xs:element name="FACTYPE" type="FACTYPE_Type" minOccurs="0"/>
      <xs:element name="CHANNEL" type="CHANNEL_Type" minOccurs="0"/>
      <xs:element name="LOCA" type="CLLI_Type" minOccurs="0"/>
      <xs:element name="LOCZ" type="CLLI_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ECI_FIELD_ComplexType" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Company Specific Field</description>
        <ATIS_OBF_ASR_Practice>025</ATIS_OBF_ASR_Practice>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ECI_NAME" type="ECI_NAME_Type"/>
      <xs:element name="ECI_VALUE" type="ECI_VALUE_Type"/>
    </xs:sequence>
  </xs:complexType>
  <!--Fatal, Non-Fatal, Clarification Errors-->
  <xs:complexType name="Error_ComplexType" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>ASR Fatal and Non-Fatal Error or Clarification/Notification Request Error</description>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="FID" type="FID_Type" minOccurs="0"/>
      <xs:element name="MSG_CODE" type="MSG_CODE_Type" minOccurs="0"/>
      <xs:element name="MESSAGE" type="MESSAGE_Type" minOccurs="0"/>
      <xs:element name="PRACTICE" type="ASOGPractice_Type" minOccurs="0"/>
      <xs:element name="REFNUM" type="IndexNumber4_Type" minOccurs="0"/>
      <xs:element name="EVC_VCNUM" type="IndexNumber4_Type" minOccurs="0"/>
      <xs:element name="UREF" type="IndexNumber2_Type" minOccurs="0"/>
      <xs:element name="SUPI" type="IndicatorY_Type" minOccurs="0"/>
      <xs:element name="LREF" type="IndexNumber1_Type" minOccurs="0"/>
      <xs:element name="OCC" type="IndexNumber3_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--============================================-->
  <!--Additional Header  Types  Additional Header-->
  <!--============================================-->
  <xs:simpleType name="CONTROL_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>CONTROL</fieldName>
          <fieldDescription>Control</fieldDescription>
          <fullDefinition>Used in an ASR Service Request message 
					to request special handling of the service 
					request. 
					The OVERRIDE_PREVALIDATION is used to request 
					that the ASR pre-validation fatal error 
					editing checks be limited to the minimum 
					edits required by the provider. 
					This handling is needed to provide backwards 
					compatibility with the ASR four-step NDM 
					processing rules where fewer fatal edits 
					are enforced</fullDefinition>
          <source>UOM-ASR Volume II</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="15"/>
    </xs:restriction>
  </xs:simpleType>
  <!--============================================-->
  <!--Response Types Response Types Response Types-->
  <!--============================================-->
  <xs:simpleType name="SR_STATE_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>SR_STATE</fieldName>
          <fieldDescription>Service Request State</fieldDescription>
          <fullDefinition>State of Service Request</fullDefinition>
          <source>UOM-ASR Volume II</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="20"/>
      <xs:enumeration value="RECEIVED"/>
      <xs:enumeration value="REJECTED"/>
      <xs:enumeration value="CANCELLED"/>
      <xs:enumeration value="PARTIAL"/>
      <xs:enumeration value="ACCEPTED"/>
      <xs:enumeration value="CONFIRMED"/>
      <xs:enumeration value="DESIGNED"/>
      <xs:enumeration value="ERROR_ON_HOLD"/>
      <xs:enumeration value="ERROR_C/NR_PENDING"/>
      <xs:enumeration value="QUERY_ON_HOLD"/>
      <xs:enumeration value="COMPLETED"/>
    </xs:restriction>
  </xs:simpleType>
  <!--============================================-->
  <!--Exception Types  Exception Types   Exception-->
  <!--============================================-->
  <xs:simpleType name="ExceptionType_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>TYPE</fieldName>
          <fieldDescription>Exception Type</fieldDescription>
          <fullDefinition>Used in an Exception Response message to specify a non-business error condition</fullDefinition>
          <source>UOM-ASR Volume II</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="GENERAL_FAILURE"/>
      <xs:enumeration value="GENERAL_ERROR_RETRYABLE"/>
      <xs:enumeration value="TRANSPORT_FAILURE"/>
      <xs:enumeration value="TRANSPORT_ERROR_RETRYABLE"/>
      <xs:enumeration value="SECURITY_PROBLEM"/>
      <xs:enumeration value="RESOURCE_PROBLEM_RETRYABLE"/>
      <xs:enumeration value="FUNCTION_NOT_SUPPORTED"/>
      <xs:enumeration value="INVALID_MESSAGE_FORMAT"/>
      <xs:enumeration value="RETURN_RESULT_PROBLEM"/>
      <xs:enumeration value="DUPLICATE_INVOCATION"/>
      <xs:enumeration value="INVALID_ATTRIBUTE"/>
      <xs:enumeration value="MISSING_ATTRIBUTE"/>
      <xs:enumeration value="INVALID_DATA_VALUE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ExceptionCode_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>CODE</fieldName>
          <fieldDescription>Exception Code</fieldDescription>
          <fullDefinition>Used in an Exception Response message to specific a code for this particular error condition</fullDefinition>
          <source>UOM-ASR Volume II</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="20"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ExceptionDescription_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>DESCRIPTION</fieldName>
          <fieldDescription>Exception Description</fieldDescription>
          <fullDefinition>Used in an Exception Response message to provide a descriptive explanation for the particular error condition</fullDefinition>
          <source>UOM-ASR Volume II</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
        <reference>
          <asogFieldNumber/>
          <fieldName>MORE_INFO</fieldName>
          <fieldDescription>More Exception Description</fieldDescription>
          <fullDefinition>Used in an Exception Response message to provide additional context information describing the particular error condition</fullDefinition>
          <source>UOM-ASR Volume II</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="120"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ExceptionAdditionalInfo_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>ADDITIONAL_INFO</fieldName>
          <fieldDescription>Exception Description</fieldDescription>
          <fullDefinition>Used in an Exception Response message to provide a descriptive explanation for the particular error condition</fullDefinition>
          <source>UOM-ASR Volume II</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
        <reference>
          <asogFieldNumber/>
          <fieldName>MORE_INFO</fieldName>
          <fieldDescription>More Exception Description</fieldDescription>
          <fullDefinition>Used in an Exception Response message to provide additional context information describing the particular error condition</fullDefinition>
          <source>UOM-ASR Volume II</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="120"/>
    </xs:restriction>
  </xs:simpleType>
  <!--============================================-->
  <!--Inquiry Types  Inquiry Types  Inquiry Types-->
  <!--============================================-->
  <xs:simpleType name="IRI_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>IRI</fieldName>
          <fieldDescription>Inquiry Response Indicator</fieldDescription>
          <fullDefinition>Identifies the type of response provided for this request</fullDefinition>
          <source>UOM-ASR Volume I</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="A"/>
      <xs:enumeration value="B"/>
      <xs:enumeration value="C"/>
      <xs:enumeration value="D"/>
      <xs:enumeration value="E"/>
      <xs:enumeration value="F"/>
      <xs:enumeration value="G"/>
      <xs:enumeration value="H"/>
      <xs:enumeration value="J"/>
      <xs:enumeration value="K"/>
      <xs:enumeration value="L"/>
      <xs:enumeration value="M"/>
      <xs:enumeration value="N"/>
      <xs:enumeration value="P"/>
      <xs:enumeration value="R"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IRM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>IRM</fieldName>
          <fieldDescription>Inquiry Response Message</fieldDescription>
          <fullDefinition>Identifies the additional information on responses provided for this request</fullDefinition>
          <source>UOM-ASR Volume I</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="80"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="JEOPARDY_STATUS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>JEOPARDY_STATUS</fieldName>
          <fieldDescription>Jeopardy Status</fieldDescription>
          <fullDefinition>Indicates whether or not the order is in jeopardy</fullDefinition>
          <source>UOM-ASR Volume I</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CFA_STATUS_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>STATUS</fieldName>
          <fieldDescription>Status</fieldDescription>
          <fullDefinition>Identifies the status of the requested channel(s)/slot(s)</fullDefinition>
          <source>UOM-ASR Volume I</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PA_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>PA</fieldName>
          <fieldDescription>Pending Activity</fieldDescription>
          <fullDefinition>Identifies the providers provisioning system pending activity on this request</fullDefinition>
          <source>UOM-ASR Volume I</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CLO_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>CLO</fieldName>
          <fieldDescription>Circuit Layout Order Number</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Note_Indicator_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>DN</fieldName>
          <fieldDescription>Note Indicator</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>NN</fieldName>
          <fieldDescription>Note Indicator</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SV_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SV</fieldName>
          <fieldDescription>Signal/Voice Path Type</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Decibel_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>Z_TO_A</fieldName>
          <fieldDescription>Transmission Level Point (TLP) - Z to A Direction</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>A_TO_Z</fieldName>
          <fieldDescription>Transmission Level Point (TLP) - A to Z Direction</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PEU_RCV</fieldName>
          <fieldDescription>End User Receive Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PE_XMT</fieldName>
          <fieldDescription>End User Transmit Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PE_XMT_4W</fieldName>
          <fieldDescription>End User 4 Wire Transmit Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SEU_XMT</fieldName>
          <fieldDescription>End User Transmit Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SE_RCV</fieldName>
          <fieldDescription>End User Recieve Level</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SE_RCV_4W</fieldName>
          <fieldDescription>End User 4 Wire Recieve Level</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BLDG_Type">
    <xs:annotation>
      <xs:documentation>Building</xs:documentation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PEU_BLDG</fieldName>
          <fieldDescription>Building</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SEU_BLDG</fieldName>
          <fieldDescription>Building</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="9"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DLR_NOTES_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>NOTES</fieldName>
          <fieldDescription>Notes</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="980"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DLR_FLOOR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PEU_FLR</fieldName>
          <fieldDescription>Floor</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SEU_FLR</fieldName>
          <fieldDescription>Floor</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="9"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DLR_ROOM_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>PEU_ROOM</fieldName>
          <fieldDescription>Room</fieldDescription>
        </reference>
        <reference>
          <asogPractice>DLR</asogPractice>
          <fieldName>SEU_ROOM</fieldName>
          <fieldDescription>Room</fieldDescription>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="9"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SANOR_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>SANOR</fieldName>
          <fieldDescription>Address Number Range</fieldDescription>
          <fullDefinition>Identifies the range or end range address number when consecutive address numbers are to be provided</fullDefinition>
          <source>UOM-ASR Volume I</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="21"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SANORT_Type">
    <xs:annotation>
      <xs:appinfo>
        <reference>
          <asogFieldNumber/>
          <fieldName>SANORT</fieldName>
          <fieldDescription>Address Number Range Type</fieldDescription>
          <fullDefinition>Indicates whether the addresses provided within a SANOR response are exclusively odd numbered, even numbered or a combination of both</fullDefinition>
          <source>UOM-ASR Volume I</source>
          <BorA>B</BorA>
          <BusinessTerm/>
          <Status/>
        </reference>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <!--============================================-->
  <!--END Inquiry Types   END Inquiry Types  END-->
  <!--============================================-->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--Class: ACKNOWLEDGEMENT_Type-->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xs:element name="ACKNOWLEDGEMENT_Type" type="ACKNOWLEDGEMENT_Type" abstract="true"/>
  <xs:complexType name="ACKNOWLEDGEMENT_Type" abstract="true">
    <xs:complexContent>
      <xs:extension base="UOM_Type"/>
    </xs:complexContent>
  </xs:complexType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--Class: <<XSDcomplexType>> ACKNOWLEDGEMENT-->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xs:element name="ACKNOWLEDGEMENT" type="ACKNOWLEDGEMENT"/>
  <xs:complexType name="ACKNOWLEDGEMENT">
    <xs:complexContent>
      <xs:extension base="ACKNOWLEDGEMENT_Type">
        <xs:sequence>
          <xs:element name="HDR" type="UOM_HDR_Type"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--Class: <<XSDcomplexType>> EXCEPTION_RESPONSE-->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xs:element name="EXCEPTION_RESPONSE" type="EXCEPTION_RESPONSE"/>
  <xs:complexType name="EXCEPTION_RESPONSE">
    <xs:complexContent>
      <xs:extension base="EXCEPTION_RESPONSE_Type">
        <xs:sequence>
          <xs:element name="HDR" type="UOM_HDR_Type"/>
          <xs:element name="TYPE" type="ExceptionType_Type"/>
          <xs:element ref="EXCEPTION_DETAILS" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--Class: <<XSDcomplexType>> EXCEPTION_RESPONSE_Type-->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xs:element name="EXCEPTION_RESPONSE_Type" type="EXCEPTION_RESPONSE_Type" abstract="true"/>
  <xs:complexType name="EXCEPTION_RESPONSE_Type" abstract="true">
    <xs:complexContent>
      <xs:extension base="UOM_Type"/>
    </xs:complexContent>
  </xs:complexType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--Class: <<XSDcomplexType>> EXCEPTION_DETAILS-->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xs:element name="EXCEPTION_DETAILS" type="EXCEPTION_DETAILS"/>
  <xs:complexType name="EXCEPTION_DETAILS">
    <xs:sequence>
      <xs:element name="CODE" type="ExceptionCode_Type" minOccurs="0"/>
      <xs:element name="DESCRIPTION" type="ExceptionDescription_Type"/>
      <xs:element name="ADDITIONAL_INFO" type="ExceptionAdditionalInfo_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\:\p4_work\qa\BasicServices_SoapUI_Automation\ASRSchemas\schemas-asog47\UOM-ASRNotify.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.atis.org/OBF/ASR/UOM-ASRNotify" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.atis.org/OBF/ASR/UOM-ASRNotify">
  <xs:annotation>
    <xs:documentation>This schema was developed under the charter of the
			Alliance for Telecommunications Industry Solutions (ATIS),
			Ordering and Billing Forum (OBF),
			Ordering Solutions Committee,
			Access Service Ordering (ASO) Subcommittee.

			This schema is based on the Access Service Ordering Guidelines (ASOG) Version 47.</xs:documentation>
  </xs:annotation>
  <!--UOM Base contains UOM Top level structures and Field Type Declarations-->
  <xs:include schemaLocation="UOM-Base.xsd"/>
  <!--===========================================-->
  <!--UOM-ASR Top Level     UOM-ASR Top Level-->
  <!--===========================================-->
  <xs:complexType name="ASR_HDR_ComplexType" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>ASR Header</description>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="UOM_HDR_Type">
        <xs:sequence>
          <xs:element name="ICSC" type="ICSC_Type"/>
          <xs:element name="ASOG_VER" type="ASOG_VER_Type"/>
          <xs:element name="ASRNO" type="ASRNO_Type" minOccurs="0"/>
          <xs:element name="PON" type="PON_Type" minOccurs="0"/>
          <xs:element name="REQTYP" type="REQTYP_Type" minOccurs="0"/>
          <xs:element name="ACT" type="ACT_Type" minOccurs="0"/>
          <xs:element name="VER" type="VER_Type" minOccurs="0"/>
          <xs:element name="SR_STATE" type="SR_STATE_Type" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ASR_NOTIFICATION_Type" mixed="false">
    <xs:complexContent mixed="false">
      <xs:extension base="NOTIFICATION_Type">
        <xs:sequence>
          <xs:element name="HDR" type="ASR_HDR_ComplexType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="BAN_CORRECTION" type="BAN_CORRECTION_Type"/>
  <xs:complexType name="BAN_CORRECTION_Type" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>BAN Correction</description>
        <ATIS_OBF_ASR_Practice>011</ATIS_OBF_ASR_Practice>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="ASR_NOTIFICATION_Type">
        <xs:sequence>
          <xs:element ref="BANC"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="CONFIRMATION" type="CONFIRMATION_Type">
    <xs:unique name="CKT_REFNUM_unique">
      <xs:selector xpath=".//CKT"/>
      <xs:field xpath="REFNUM"/>
    </xs:unique>
    <xs:unique name="VC_EVC_VCNUM_unique">
      <xs:selector xpath=".//VC"/>
      <xs:field xpath="EVC_VCNUM"/>
    </xs:unique>
    <!--Uniqueness constraints-->
  </xs:element>
  <xs:complexType name="CONFIRMATION_Type" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Confirmation</description>
        <ATIS_OBF_ASR_Practice>011</ATIS_OBF_ASR_Practice>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="ASR_NOTIFICATION_Type">
        <xs:sequence>
          <xs:element ref="CN" minOccurs="0"/>
          <xs:element ref="WATS_OPEN_BILLING" minOccurs="0"/>
          <xs:element ref="ECI_ASR_LEVEL_RTN" minOccurs="0"/>
          <xs:element ref="CKT" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="VC" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CUSTOMER_HDR_ComplexType" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Customer Header</description>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="UOM_HDR_Type">
        <xs:sequence>
          <xs:element name="ICSC" type="ICSC_Type"/>
          <xs:element name="CC" type="CC_Type" minOccurs="0"/>
          <xs:element name="ASRNO" type="ASRNO_Type" minOccurs="0"/>
          <xs:element name="PON" type="PON_Type"/>
          <xs:element name="VER" type="VER_Type" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CUSTOMER_JEOPARDY_ComplexType" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Customer Jeopardy</description>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ECCKT" type="ECCKT53_Type"/>
      <xs:element name="RCODE" type="RCODE_Type" minOccurs="0"/>
      <xs:element name="RDET" type="RDET_Type" minOccurs="0"/>
      <xs:element name="ESDD" type="Date_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="CUSTOMER_NOTIFY" type="CUSTOMER_NOTIFY_Type"/>
  <xs:complexType name="CUSTOMER_NOTIFY_Type" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Customer Jeopardy Notification</description>
        <ATIS_OBF_ASR_Practice/>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="NOTIFICATION_Type">
        <xs:sequence>
          <xs:element name="HDR" type="CUSTOMER_HDR_ComplexType"/>
          <xs:element name="CUSTOMER_JEOPARDY" type="CUSTOMER_JEOPARDY_ComplexType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="DESIGN_NOTIFY" type="DESIGN_NOTIFY_Type"/>
  <xs:complexType name="DESIGN_NOTIFY_Type" mixed="false">
    <xs:complexContent mixed="false">
      <xs:extension base="ASR_NOTIFICATION_Type">
        <xs:sequence>
          <xs:element ref="DLR_ADMIN"/>
          <xs:element ref="DLR_DESIGN"/>
          <xs:element ref="DLR_END_USER_SECLOC"/>
          <xs:element ref="DLR_END_USER_PRILOC"/>
          <xs:element ref="DLR_NOTES" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ERROR_CLARIFICATION" type="ERROR_CLARIFICATION_Type"/>
  <xs:complexType name="ERROR_CLARIFICATION_Type" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Clarification/Notification Errors</description>
        <ATIS_OBF_ASR_Practice>010</ATIS_OBF_ASR_Practice>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="ASR_NOTIFICATION_Type">
        <xs:sequence>
          <xs:element ref="CNR" minOccurs="0"/>
          <xs:element name="ERROR" type="Error_ComplexType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="JEOPARDY_NOTIFY" type="JEOPARDY_NOTIFY_Type"/>
  <xs:complexType name="JEOPARDY_NOTIFY_Type" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Clarification/Notification Jeopardy</description>
        <ATIS_OBF_ASR_Practice>010</ATIS_OBF_ASR_Practice>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="ASR_NOTIFICATION_Type">
        <xs:sequence>
          <xs:element name="CC" type="CC_Type" minOccurs="0"/>
          <xs:element ref="CNR" minOccurs="0"/>
          <xs:element name="JEOPARDY" type="JEOPARDY_Type" maxOccurs="unbounded"/>
          <xs:element name="ERROR" type="Error_ComplexType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JEOPARDY_Type" mixed="false">
    <xs:annotation>
      <xs:appinfo>
        <description>Jeopardy</description>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="SUPI" type="IndicatorY_Type" minOccurs="0"/>
      <xs:element name="RCODE" type="RCODE_Type" minOccurs="0"/>
      <xs:element name="RDET" type="RDET_Type" minOccurs="0"/>
      <xs:element name="ECCKT" type="ECCKT53_Type" minOccurs="0"/>
      <xs:element name="ESDD" type="Date_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ORDER_INFO_NOTIFY" type="ORDER_INFO_NOTIFY_Type"/>
  <xs:complexType name="ORDER_INFO_NOTIFY_Type" mixed="false">
    <xs:complexContent mixed="false">
      <xs:extension base="ASR_NOTIFICATION_Type">
        <xs:sequence>
          <xs:element name="CD" type="Date_Type" minOccurs="0"/>
          <xs:element name="SDI" type="IndicatorY_Type" minOccurs="0"/>
          <xs:element ref="CNR" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===========================================-->
  <!--END UOM-ASR Top Level END UOM-ASR Top Level-->
  <!--===========================================-->
  <!--++++++++++++++++++++++++++-->
  <!--ASR Notify Structures-->
  <!--++++++++++++++++++++++++++-->
  <xs:element name="BANC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Billing Account Number Correction</description>
          <ATIS_OBF_ASR_Practice>011</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="CKR" type="CKR_Type" minOccurs="0"/>
        <xs:element name="APREP" type="Contact_Type" minOccurs="0"/>
        <xs:element name="ASG" type="ASG_Type" minOccurs="0"/>
        <xs:element name="BAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="AP_REP_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CKT">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Associated Circuit Information</description>
          <ATIS_OBF_ASR_Practice>011</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="REFNUM" type="IndexNumber4_Type"/>
        <xs:element name="ECCKT" type="ECCKT53_Type" minOccurs="0"/>
        <xs:element name="NHN" type="NHN_Type" minOccurs="0"/>
        <xs:element name="FCKT" type="ECCKT53_Type" minOccurs="0"/>
        <xs:element name="CKR" type="CKR_Type" minOccurs="0"/>
        <xs:element name="LEGNUM" type="LEGNUM_Type" minOccurs="0"/>
        <xs:element name="ORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="FORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="CRO" type="ORD_Type" minOccurs="0"/>
        <xs:element name="ASG" type="ASG_Type" minOccurs="0"/>
        <xs:element name="SSWC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="TSC" type="TSC_Type" minOccurs="0"/>
        <xs:element name="TRKQTY" type="TRKQTY_Type" minOccurs="0"/>
        <xs:element name="DTN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="NK" type="NK_Type" minOccurs="0"/>
        <xs:element name="HBAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="CKR1" type="CKR1_Type" minOccurs="0"/>
        <xs:element name="TRN_START" type="TRN_Type" minOccurs="0"/>
        <xs:element name="TRN_END" type="TRN_Type" minOccurs="0"/>
        <xs:element name="TCIC" type="TCIC_Type" minOccurs="0"/>
        <xs:element ref="ECI_CKT_LEVEL_RTN" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CN">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Confirmation</description>
          <ATIS_OBF_ASR_Practice>011</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="SPA" type="SPA_Type" minOccurs="0"/>
        <xs:element name="RT" type="RT_Type" minOccurs="0"/>
        <xs:element name="INIT" type="Contact_Type" minOccurs="0"/>
        <xs:element name="CD_SENT" type="Date_Type" minOccurs="0"/>
        <xs:element name="CT_SENT" type="Time_Type" minOccurs="0"/>
        <xs:element name="AP_REP" type="Contact_Type" minOccurs="0"/>
        <xs:element name="AP_REP_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="AP_REP_EMAIL" type="EMAIL_Type" minOccurs="0"/>
        <xs:element name="PIA" type="ACT_Type" minOccurs="0"/>
        <xs:element name="PROVINT" type="PROVINT_Type" minOccurs="0"/>
        <xs:element name="PROJECT" type="PROJECT_Type" minOccurs="0"/>
        <xs:element name="CNO" type="CNO_Type" minOccurs="0"/>
        <xs:element name="APP" type="Date_Type" minOccurs="0"/>
        <xs:element name="SRN" type="SRN_Type" minOccurs="0"/>
        <xs:element name="DLRD" type="Date_Type" minOccurs="0"/>
        <xs:element name="CDLRD" type="Date_Type" minOccurs="0"/>
        <xs:element name="PTD" type="Date_Type" minOccurs="0"/>
        <xs:element name="DD" type="Date_Type" minOccurs="0"/>
        <xs:element name="NFR" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="NFRT" type="NFRT_Type" minOccurs="0"/>
        <xs:element name="EBD" type="Date_Type" minOccurs="0"/>
        <xs:element name="BAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="SWC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SC" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="ECVER" type="VER_Type" minOccurs="0"/>
        <xs:element name="SECLOC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="FDLRD" type="Date_Type" minOccurs="0"/>
        <xs:element name="FCDLRD" type="Date_Type" minOccurs="0"/>
        <xs:element name="FPTD" type="Date_Type" minOccurs="0"/>
        <xs:element name="FDD" type="Date_Type" minOccurs="0"/>
        <xs:element name="CIWBAN" type="IWBAN_Type" minOccurs="0"/>
        <xs:element name="ECSPC" type="SP_Type" minOccurs="0"/>
        <xs:element name="FNI" type="FNI_Type" minOccurs="0"/>
        <xs:element name="RTI" type="RTI_Type" minOccurs="0"/>
        <xs:element name="FDT" type="TIMEZONE_Type" minOccurs="0"/>
        <xs:element name="CB_TEL_NO" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="CBPC" type="CBPC_Type" minOccurs="0"/>
        <xs:element name="LAG_ID" type="ECCKT28_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CNR">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Clarification/Notification Request</description>
          <ATIS_OBF_ASR_Practice>010</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="CNT" type="CNT_Type" minOccurs="0"/>
        <xs:element name="CNR_VER" type="CNR_VER_Type" minOccurs="0"/>
        <xs:element name="D_SENT" type="Date_Type" minOccurs="0"/>
        <xs:element name="T_SENT" type="Time_Type" minOccurs="0"/>
        <xs:element name="SUPR" type="IndicatorY_Type" minOccurs="0"/>
        <xs:element name="CRDD" type="Date_Type" minOccurs="0"/>
        <xs:element name="INIT" type="Contact_Type" minOccurs="0"/>
        <xs:element name="INIT_TEL" type="TelNumberExt17_Type" minOccurs="0"/>
        <xs:element name="AP_REP" type="Contact_Type" minOccurs="0"/>
        <xs:element name="AP_REP_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="AP_REP_EMAIL" type="EMAIL_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks225_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DLR_ADMIN">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Administrative Section</description>
          <ATIS_OBF_DLR_ISI/>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="IC" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="PON" type="PON_Type" minOccurs="0"/>
        <xs:element name="VER" type="VER_Type" minOccurs="0"/>
        <xs:element name="ECIA" type="ACT_Type" minOccurs="0"/>
        <xs:element name="CKR" type="CKR_Type" minOccurs="0"/>
        <xs:element name="ISS" type="Date_Type" minOccurs="0"/>
        <xs:element name="DSGCON" type="Contact_Type" minOccurs="0"/>
        <xs:element name="TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="ISS_NO" type="VER_Type" minOccurs="0"/>
        <xs:element name="CO" type="ICSC_Type" minOccurs="0"/>
        <xs:element name="ORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="REFNUM" type="IndexNumber4_Type" minOccurs="0"/>
        <xs:element name="ECCKT" type="ECCKT53_Type" minOccurs="0"/>
        <xs:element name="OLDECCKT" type="ECCKT53_Type" minOccurs="0"/>
        <xs:element name="EC_DSGCON" type="Contact_Type" minOccurs="0"/>
        <xs:element name="EC_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="CLO" type="CLO_Type" minOccurs="0"/>
        <xs:element name="EC_MCO" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="EC_OCO" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="DLRD" type="Date_Type" minOccurs="0"/>
        <xs:element name="CDLRD" type="Date_Type" minOccurs="0"/>
        <xs:element name="DD" type="Date_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks186_Type" minOccurs="0"/>
        <xs:element name="TSC" type="TSC_Type" minOccurs="0"/>
        <xs:element name="TSP_CODE" type="TSP_CODE_Type" minOccurs="0"/>
        <xs:element name="PTD" type="Date_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DLR_DESIGN">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Design Section</description>
          <ATIS_OBF_DLR_ISI/>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="ACTL" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="PRILOC" type="CLLI_or_EU_Type" minOccurs="0"/>
        <xs:element name="SPOT_PRE" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="APOT" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="SECLOC" type="CLLI_or_EU_Type" minOccurs="0"/>
        <xs:element name="SPOT_SEC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="CKLT" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="NC" type="NC_Type" minOccurs="0"/>
        <xs:element name="NCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="TLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="SECNCI" type="NCI_Type" minOccurs="0"/>
        <xs:element name="SECTLV" type="TLV_Type" minOccurs="0"/>
        <xs:element name="LT" type="LT_Type" minOccurs="0"/>
        <xs:element name="SLC" type="SLC_Type" minOccurs="0"/>
        <xs:element name="TCIC" type="TCIC_Type" minOccurs="0"/>
        <xs:element name="CSPC" type="SP_Type" minOccurs="0"/>
        <xs:element name="ECSPC" type="SP_Type" minOccurs="0"/>
        <xs:element ref="DLR_DESIGN_DETAILS" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DLR_DESIGN_DETAILS">
    <xs:complexType mixed="false">
      <xs:sequence>
        <xs:element name="DN" type="Note_Indicator_Type" minOccurs="0"/>
        <xs:element name="LOCN" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="EQTYPE" type="EQPDESG_Type" minOccurs="0"/>
        <xs:element name="RELAY_RACK" type="RELAY_RACK_Type" minOccurs="0"/>
        <xs:element name="UNIT" type="UNIT_NUM_Type" minOccurs="0"/>
        <xs:element name="FACDESG" type="FACDESG_Type" minOccurs="0"/>
        <xs:element name="FACTYPE" type="FACTYPE_Type" minOccurs="0"/>
        <xs:element name="CHANNEL" type="CHANNEL_Type" minOccurs="0"/>
        <xs:element name="SV" type="SV_Type" minOccurs="0"/>
        <xs:element name="Z_TO_A" type="Decibel_Type" minOccurs="0"/>
        <xs:element name="A_TO_Z" type="Decibel_Type" minOccurs="0"/>
        <xs:element name="INC_MI" type="RTEMI_Type" minOccurs="0"/>
        <xs:element name="MISC" type="MISC_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DLR_END_USER_PRILOC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Primary Location Section</description>
          <ATIS_OBF_DLR_ISI/>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="PEU_STREET" type="STREET_Type" minOccurs="0"/>
        <xs:element name="PEU_BLDG" type="BLDG_Type" minOccurs="0"/>
        <xs:element name="PEU_FLR" type="DLR_FLOOR_Type" minOccurs="0"/>
        <xs:element name="PEU_ROOM" type="DLR_ROOM_Type" minOccurs="0"/>
        <xs:element name="PEU_CITY" type="CITY25_Type" minOccurs="0"/>
        <xs:element name="PEU_STATE" type="STATE_Type" minOccurs="0"/>
        <xs:element name="PEU_TERM" type="EU_TERM_Type" minOccurs="0"/>
        <xs:element name="PE_RCV" type="Decibel_Type" minOccurs="0"/>
        <xs:element name="PE_XMT" type="Decibel_Type" minOccurs="0"/>
        <xs:element name="PEU_TERM_4W" type="EU_TERM_Type" minOccurs="0"/>
        <xs:element name="PE_XMT_4W" type="Decibel_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DLR_END_USER_SECLOC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Secondary Location Section</description>
          <ATIS_OBF_DLR_ISI/>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="SEU_STREET" type="STREET_Type" minOccurs="0"/>
        <xs:element name="SEU_BLDG" type="BLDG_Type" minOccurs="0"/>
        <xs:element name="SEU_FLR" type="DLR_FLOOR_Type" minOccurs="0"/>
        <xs:element name="SEU_ROOM" type="DLR_ROOM_Type" minOccurs="0"/>
        <xs:element name="SEU_CITY" type="CITY25_Type" minOccurs="0"/>
        <xs:element name="SEU_STATE" type="STATE_Type" minOccurs="0"/>
        <xs:element name="SEU_TERM" type="EU_TERM_Type" minOccurs="0"/>
        <xs:element name="SE_XMT" type="Decibel_Type" minOccurs="0"/>
        <xs:element name="SE_RCV" type="Decibel_Type" minOccurs="0"/>
        <xs:element name="SEU_TERM_4W" type="EU_TERM_Type" minOccurs="0"/>
        <xs:element name="SE_RCV_4W" type="Decibel_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DLR_NOTES">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Notes Section</description>
          <ATIS_OBF_DLR_ISI/>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="NN" type="Note_Indicator_Type" minOccurs="0"/>
        <xs:element name="NOTES" type="DLR_NOTES_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ECCKT_DETAILS">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>WATS Open Billing Circuit Detail</description>
          <ATIS_OBF_ASR_Practice>009</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="ECCKT" type="ECCKT53_Type" minOccurs="0"/>
        <xs:element name="CKR" type="CKR_Type" minOccurs="0"/>
        <xs:element name="SFN" type="SFN_Type" minOccurs="0"/>
        <xs:element name="RGN1" type="RGN_Type" minOccurs="0"/>
        <xs:element name="CLN1" type="CLN_Type" minOccurs="0"/>
        <xs:element name="OFN" type="CLN_Type" minOccurs="0"/>
        <xs:element name="RGN2" type="RGN_Type" minOccurs="0"/>
        <xs:element name="CLN2" type="CLN_Type" minOccurs="0"/>
        <xs:element name="RGN3" type="RGN_Type" minOccurs="0"/>
        <xs:element name="CLN3" type="CLN_Type" minOccurs="0"/>
        <xs:element name="RTN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="PTN" type="TelNumber7_Type" minOccurs="0"/>
        <xs:element name="HML" type="HML_Type" minOccurs="0"/>
        <xs:element name="TER" type="TER_Type" minOccurs="0"/>
        <xs:element name="MLG" type="MLG_Type" minOccurs="0"/>
        <xs:element name="HTG_IND" type="HTG_IND_Type" minOccurs="0"/>
        <xs:element name="SIA" type="TelNumber7_Type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ECI_ASR_LEVEL_RTN">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Enhanced Customer Interface: Company Specific ASR Level Record 1 and Record 2</description>
          <ATIS_OBF_ASR_Practice>025</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="CO" type="CO_Type" minOccurs="0"/>
        <xs:element name="CHPD" type="CHPD_Type" minOccurs="0"/>
        <xs:element name="NSLB" type="NSLB_Type" minOccurs="0"/>
        <xs:element name="NON_SUB" type="NON_SUB_Type" minOccurs="0"/>
        <xs:element name="TOGP" type="TOGP_Type" minOccurs="0"/>
        <xs:element name="BTN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="RID" type="Date_Type" minOccurs="0"/>
        <xs:element name="ECI_FIELD" type="ECI_FIELD_ComplexType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ECI_CKT_LEVEL_RTN">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Company Specific CKT Level</description>
          <ATIS_OBF_ASR_Practice>025</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="ACCESSID" type="ECCKT28_Type" minOccurs="0"/>
        <xs:element name="ACCESSORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="PORTID" type="ECCKT28_Type" minOccurs="0"/>
        <xs:element name="PORTORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="VCCID" type="ECCKT28_Type" minOccurs="0"/>
        <xs:element name="VCORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="VLAN_TAG" type="VLAN_Type" minOccurs="0"/>
        <xs:element name="ECI_FIELD" type="ECI_FIELD_ComplexType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="EVC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Ethernet Virtual Circuit Confirmation</description>
          <ATIS_OBF_ASR_Practice>011</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="UREF" type="IndexNumber2_Type" minOccurs="0"/>
        <xs:element ref="S_VLAN" minOccurs="0" maxOccurs="3"/>
        <xs:element ref="CE_VLAN" minOccurs="0" maxOccurs="10"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="VC">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>Virtual Connection Confirmation</description>
          <ATIS_OBF_ASR_Practice>011</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="EVC_VCNUM" type="IndexNumber4_Type"/>
        <xs:element name="EVCID" type="ECCKT28_Type" minOccurs="0"/>
        <xs:element name="EVCORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="EVCCKR" type="CKR_Type" minOccurs="0"/>
        <xs:element name="DLCI" type="DLCI_Type" minOccurs="0"/>
        <xs:element name="VPI" type="VPI_Type" minOccurs="0"/>
        <xs:element name="VCI" type="VCI_Type" minOccurs="0"/>
        <xs:element name="RECCKT" type="ECCKT53_Type" minOccurs="0"/>
        <xs:element name="RDLCI" type="DLCI_Type" minOccurs="0"/>
        <xs:element name="RVPI" type="VPI_Type" minOccurs="0"/>
        <xs:element name="RVCI" type="VCI_Type" minOccurs="0"/>
        <xs:element ref="EVC" minOccurs="0" maxOccurs="20"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="WATS_OPEN_BILLING">
    <xs:complexType mixed="false">
      <xs:annotation>
        <xs:appinfo>
          <description>WATS Open Billing</description>
          <ATIS_OBF_ASR_Practice>009</ATIS_OBF_ASR_Practice>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="D_SENT" type="Date_Type" minOccurs="0"/>
        <xs:element name="T_SENT" type="Time_Type" minOccurs="0"/>
        <xs:element name="PROJECT" type="PROJECT_Type" minOccurs="0"/>
        <xs:element name="ORD" type="ORD_Type" minOccurs="0"/>
        <xs:element name="MAN" type="BAN_Type" minOccurs="0"/>
        <xs:element name="EUCON" type="CustomerName_Type" minOccurs="0"/>
        <xs:element name="EUCON_TEL" type="TelNumberExt14_Type" minOccurs="0"/>
        <xs:element name="SSWC" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="FSO" type="FSO_Type" minOccurs="0"/>
        <xs:element name="ECREP" type="Contact_Type" minOccurs="0"/>
        <xs:element name="AP_REP_TEL" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="SFG" type="SFG_Type" minOccurs="0"/>
        <xs:element name="GSZ" type="GSZ_Type" minOccurs="0"/>
        <xs:element name="WRO" type="WRO_Type" minOccurs="0"/>
        <xs:element name="STN" type="TelNumber_Type" minOccurs="0"/>
        <xs:element name="STN_DATA" type="STN_DATA_Type" minOccurs="0"/>
        <xs:element name="DTO" type="CLLI_Type" minOccurs="0"/>
        <xs:element name="REMARKS" type="Remarks124_Type" minOccurs="0"/>
        <xs:element ref="ECCKT_DETAILS" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\E:\p4_work\qa\BasicServices_SoapUI_Automation\ASRSchemas\schemas-asog47\tML.Transport.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="annotated-xsd.xsl"?>
<!--Generated by Turbo XML 2.3.1.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<xs:schema targetNamespace="http://tml.t1m1.org/tML.Transport.xsd" elementFormDefault="qualified" xmlns="http://tml.t1m1.org/tML.Transport.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Gleaned from TRANSPORT tML.doc, Appendix D-->
  <!--HEADER FIELDS-->
  <xs:element name="TransportID">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:minLength value="1"/>
        <xs:maxLength value="64"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="CorrelationID">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:minLength value="1"/>
        <xs:maxLength value="64"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="TrackID">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:minLength value="1"/>
        <xs:maxLength value="64"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <!--Dan added this as a guess-->
  <xs:element name="ResultID">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:minLength value="1"/>
        <xs:maxLength value="64"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <!--end of guess-->
  <xs:element name="ApplicationType">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:minLength value="1"/>
        <xs:maxLength value="32"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="From">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:minLength value="1"/>
        <xs:maxLength value="64"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="To">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:minLength value="1"/>
        <xs:maxLength value="64"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="SendTimestamp" type="xs:dateTime"/>
  <xs:element name="RetryCount" type="xs:integer"/>
  <xs:element name="tMLHeader">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="TransportID"/>
        <xs:element ref="CorrelationID" minOccurs="0"/>
        <xs:element ref="TrackID" minOccurs="0"/>
        <xs:element ref="ApplicationType"/>
        <xs:element ref="From"/>
        <xs:element ref="To"/>
        <xs:element ref="SendTimestamp"/>
        <xs:element ref="RetryCount"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--OK MESSAGE-->
  <xs:element name="OK">
    <xs:complexType/>
  </xs:element>
  <!--REQUEST ACKNOWLEDGEMENT FIELDS-->
  <xs:element name="RequestAcknowledgement">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Acknowledgement" type="xs:boolean"/>
        <xs:element name="Reason" type="xs:string" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--REQUEST NOTIFICATION FIELDS-->
  <xs:element name="Result">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ResultID"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ResultWaitingNotification">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="Result" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--GET RESULT FIELDS-->
  <xs:element name="GetResult">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ResultID"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--RESULT ACKNOWLEDGEMENT FIELDS-->
  <xs:element name="ResultAcknowledgement">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ResultID"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--EXCEPTION DESCRIPTION FIELDS-->
  <xs:element name="ExceptionDescription" type="ExceptionDescription_Type"/>
  <xs:complexType name="ExceptionDescription_Type">
    <xs:sequence>
      <xs:element name="Type" type="ExceptionType_Type"/>
      <xs:element ref="ExceptionDetails" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ExceptionDetails" type="ExceptionDetails"/>
  <xs:complexType name="ExceptionDetails">
    <xs:sequence>
      <xs:element name="Code" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Description">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="AdditionalInfo" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="240"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="ExceptionType_Type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="GENERAL_FAILURE"/>
      <xs:enumeration value="GENERAL_ERROR_RETRYABLE"/>
      <xs:enumeration value="TRANSPORT_FAILURE"/>
      <xs:enumeration value="TRANSPORT_ERROR_RETRYABLE"/>
      <xs:enumeration value="SECURITY_PROBLEM"/>
      <xs:enumeration value="RESOURCE_PROBLEM_RETRYABLE"/>
      <xs:enumeration value="FUNCTION_NOT_SUPPORTED"/>
      <xs:enumeration value="INVALID_MESSAGE_FORMAT"/>
      <xs:enumeration value="RETURN_RESULT_PROBLEM"/>
      <xs:enumeration value="DUPLICATE_INVOCATION"/>
      <xs:enumeration value="INVALID_ATTRIBUTE"/>
      <xs:enumeration value="MISSING_ATTRIBUTE"/>
      <xs:enumeration value="INVALID_DATA_VALUE"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://144.157.204.11:9003/axis/services/ATTASRResponseService</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="processConfirmation" bindingOperationName="processConfirmation" type="Request-Response" outputName="confOK" inputName="processConf" receivesAttachments="false" sendsAttachments="false" id="577de6f8-48cd-4616-807d-30ee7e3ec129"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="processDesignNotify" bindingOperationName="processDesignNotify" type="Request-Response" outputName="designNotifyOK" inputName="processDesignNotify" receivesAttachments="false" sendsAttachments="false" id="439019ed-28e0-4124-8f24-9c36bb7713e9"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="processErrorClarification" bindingOperationName="processErrorClarification" type="Request-Response" outputName="errClarOK" inputName="processErrorClar" receivesAttachments="false" sendsAttachments="false" id="b1ab312b-b5ec-4b15-b2b4-0771c4ecc7d4"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="processException" bindingOperationName="processException" type="Request-Response" outputName="excOK" inputName="processExc" receivesAttachments="false" sendsAttachments="false" id="84622964-bca2-411c-bbcb-d016975b6fe8"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="processJeopardyNotify" bindingOperationName="processJeopardyNotify" type="Request-Response" outputName="jeoNotifyOK" inputName="processJeopNotify" receivesAttachments="false" sendsAttachments="false" id="eafab22f-cd1c-42c1-9cb7-d529879882ad"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="processOrderInfoNotify" bindingOperationName="processOrderInfoNotify" type="Request-Response" outputName="ordInfNotifyOK" inputName="processOrdInfoNotify" receivesAttachments="false" sendsAttachments="false" id="f740c416-aa47-4393-a913-e8c7d405f2bf"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="processResponse" bindingOperationName="processResponse" type="Request-Response" outputName="rspOK" inputName="processRsp" receivesAttachments="false" sendsAttachments="false" id="f40edd22-dda3-4380-b3d8-528e7b01fcfc"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="asrportSoapBinding" type="wsdl" bindingName="{java:asr.webservice.neustar.biz}asrportSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://stomvqavasrrcvgw2.va.neustar.com:8301/axis/services/asrport?wsdl" id="9ef879fd-7282-487d-8ffb-81709649a551" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://stomvqavasrrcvgw2.va.neustar.com:8301/axis/services/asrport?wsdl"><con:part><con:url>http://stomvqavasrrcvgw2.va.neustar.com:8301/axis/services/asrport?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="java:asr.webservice.neustar.biz" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:impl="java:asr.webservice.neustar.biz" xmlns:intf="java:asr.webservice.neustar.biz" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--WSDL created by Apache Axis version: 1.3
Built on Oct 05, 2005 (05:23:37 EDT)-->
  <wsdl:message name="processAsyncRequestRequest">
    <wsdl:part name="string" type="xsd:string"/>
  </wsdl:message>
  <wsdl:message name="processSyncRequestResponse">
    <wsdl:part name="response" type="xsd:string"/>
  </wsdl:message>
  <wsdl:message name="processAsyncRequestResponse">
    <wsdl:part name="response" type="xsd:string"/>
  </wsdl:message>
  <wsdl:message name="processSyncRequestRequest">
    <wsdl:part name="string" type="xsd:string"/>
  </wsdl:message>
  <wsdl:portType name="asrport">
    <wsdl:operation name="processAsyncRequest" parameterOrder="string">
      <wsdl:input message="impl:processAsyncRequestRequest" name="processAsyncRequestRequest"/>
      <wsdl:output message="impl:processAsyncRequestResponse" name="processAsyncRequestResponse"/>
    </wsdl:operation>
    <wsdl:operation name="processSyncRequest" parameterOrder="string">
      <wsdl:input message="impl:processSyncRequestRequest" name="processSyncRequestRequest"/>
      <wsdl:output message="impl:processSyncRequestResponse" name="processSyncRequestResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="asrportSoapBinding" type="impl:asrport">
    <wsdlsoap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="processAsyncRequest">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="processAsyncRequestRequest">
        <wsdlsoap:body namespace="java:asr.webservice.neustar.biz" use="literal"/>
      </wsdl:input>
      <wsdl:output name="processAsyncRequestResponse">
        <wsdlsoap:body namespace="java:asr.webservice.neustar.biz" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="processSyncRequest">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="processSyncRequestRequest">
        <wsdlsoap:body namespace="java:asr.webservice.neustar.biz" use="literal"/>
      </wsdl:input>
      <wsdl:output name="processSyncRequestResponse">
        <wsdlsoap:body namespace="java:asr.webservice.neustar.biz" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="asrservice">
    <wsdl:port binding="impl:asrportSoapBinding" name="asrport">
      <wsdlsoap:address location="http://stomvqavasrrcvgw2.va.neustar.com:8301/axis/services/asrport"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Cox_ASR_Response_URL}</con:endpoint><con:endpoint>${#Project#FPC_ASR_Response_URL}</con:endpoint><con:endpoint>http://192.168.73.10:3292/axis/services/FrontierWebService</con:endpoint><con:endpoint>http://stomvqavasrrcvgw2.va.neustar.com:8301/axis/services/asrport</con:endpoint></con:endpoints><con:operation id="560caca3-cfbc-418b-8aa3-5ec2cbda5bdf" isOneWay="false" action="" name="processAsyncRequest" bindingOperationName="processAsyncRequest" type="Request-Response" outputName="processAsyncRequestResponse" inputName="processAsyncRequestRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="72f03a8f-ff87-45f8-be66-3ef54ee78501" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://stomvqavasrrcvgw2.va.neustar.com:8301/axis/services/asrport</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<soapenv:Header>?</soapenv:Header>
	<soapenv:Body>
		<processAsyncRequest xmlns="java:asr.webservice.neustar.biz">
			<string xmlns=""><![CDATA[?]]]]>><![CDATA[</string>
		</processAsyncRequest>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="java:asr.webservice.neustar.biz/asrport/processAsyncRequestRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="7b5fede2-06ab-4d0a-ad36-85a4006dace4" isOneWay="false" action="" name="processSyncRequest" bindingOperationName="processSyncRequest" type="Request-Response" outputName="processSyncRequestResponse" inputName="processSyncRequestRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7e009143-8bef-4ec5-94dc-65a99aeb50db" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Cox_ASR_Response_URL}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:java="java:asr.webservice.neustar.biz">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <java:processSyncRequest>\r
         <string>?</string>\r
      </java:processSyncRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="java:asr.webservice.neustar.biz/asrport/processSyncRequestRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="AsrResponseReceiverSEISoapBinding" type="wsdl" bindingName="{http://server.ws.comms.asr.nightfire.com}AsrResponseReceiverSEISoapBinding" soapVersion="1_1" anonymous="optional" definition="http://192.168.73.10:3292/axis/services/AsrResponseReceiverSEI?wsdl" id="c5f5fdc0-b426-4c7f-b9f2-2c49fa4bd077" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://192.168.73.10:3292/axis/services/AsrResponseReceiverSEI?wsdl"><con:part><con:url>http://192.168.73.10:3292/axis/services/AsrResponseReceiverSEI?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://server.ws.comms.asr.nightfire.com" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:impl="http://server.ws.comms.asr.nightfire.com" xmlns:intf="http://server.ws.comms.asr.nightfire.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--WSDL created by Apache Axis version: 1.4
Built on Apr 22, 2006 (06:55:48 PDT)-->
  <wsdl:message name="processAsrResponseRequest">
    <wsdl:part name="in0" type="soapenc:string"/>
  </wsdl:message>
  <wsdl:message name="processAsrResponseResponse">
    <wsdl:part name="processAsrResponseReturn" type="soapenc:string"/>
  </wsdl:message>
  <wsdl:portType name="AsrResponseReceiverSEI">
    <wsdl:operation name="processAsrResponse" parameterOrder="in0">
      <wsdl:input message="impl:processAsrResponseRequest" name="processAsrResponseRequest"/>
      <wsdl:output message="impl:processAsrResponseResponse" name="processAsrResponseResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AsrResponseReceiverSEISoapBinding" type="impl:AsrResponseReceiverSEI">
    <wsdlsoap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="processAsrResponse">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="processAsrResponseRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.ws.comms.asr.nightfire.com" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="processAsrResponseResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.ws.comms.asr.nightfire.com" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AsrResponseReceiverSEIService">
    <wsdl:port binding="impl:AsrResponseReceiverSEISoapBinding" name="AsrResponseReceiverSEI">
      <wsdlsoap:address location="http://192.168.73.10:3292/axis/services/AsrResponseReceiverSEI"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Frontier_ASR_Response_URL}</con:endpoint><con:endpoint>http://192.168.73.10:3292/axis/services/AsrResponseReceiverSEI</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="processAsrResponse" bindingOperationName="processAsrResponse" type="Request-Response" outputName="processAsrResponseResponse" inputName="processAsrResponseRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="78f0a591-8c26-4b2d-a76e-d5ff7131c96a"><con:settings/><con:call name="Request 1" id="06d7be80-b1b8-4ab3-983c-e6a8130ee0ce" defaultOutgoingWss="" defaultIncomingWss=""><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.73.10:3292/axis/services/AsrResponseReceiverSEI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.ws.comms.asr.nightfire.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:processAsrResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</in0>
      </ser:processAsrResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ws.comms.asr.nightfire.com/AsrResponseReceiverSEI/processAsrResponseRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite name="APIInterfaceAccess" id="0ef66dd8-9f92-4cf9-b5f6-bcefda3dce25" disabled="true"><con:description>Test Suite submits the request to Soap </con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REQUEST_TO_CH" searchProperties="true" id="cc77873c-d8a6-472b-97e2-85f9f0c63f4f" disabled="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="transfer" name="REQUEST_TRANSFER" id="8b719e78-ed8a-4415-a651-8acdda5fa711"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>header</con:name><con:sourceType>header</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>VALIDATE_SAVE_SYNC</con:targetStep><con:targetPath>declare namespace ns='http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0'; declare namespace xs='http://www.w3.org/2000/XMLSchema-instance'; //ns:processSync[1]/in0[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" transferChildNodes="false" ignoreEmpty="false"><con:name>headersubmit</con:name><con:sourceType>header</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>SUBMIT_ASYNC</con:targetStep><con:targetPath>declare namespace ns='http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0'; declare namespace xs='http://www.w3.org/2000/XMLSchema-instance'; //ns:processAsync[1]/in0[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" transferChildNodes="false"><con:name>body</con:name><con:sourceType>body</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>VALIDATE_SAVE_SYNC</con:targetStep><con:targetPath>declare namespace ns='http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0'; declare namespace xs='http://www.w3.org/2000/XMLSchema-instance'; //ns:processSync[1]/in1[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>bodysubmit</con:name><con:sourceType>body</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>SUBMIT_ASYNC</con:targetStep><con:targetPath>declare namespace ns='http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0'; declare namespace xs='http://www.w3.org/2000/XMLSchema-instance'; //ns:processAsync[1]/in1[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATE_SAVE_SUBMIT_CONTROLLER" id="d93ca09b-f48f-4432-93c3-9c6910a593d8"><con:settings/><con:config><script>def tc=testRunner.testCase
def run=testRunner
String action=tc.getPropertyValue("action")
String process=tc.getPropertyValue("remarks")
String req=tc.getPropertyValue("request")
log.info ("Action is :" + action)
if (action.equals("validate") || action.equals("save") || (action.equals("submit") &amp;&amp; process.equals("localezesync")) || action.equals("cancel") || action.equals("abandon") || action.equals("resume") || action.equals("suspend")||(action.equals("submit") &amp;&amp; req.equals("asr_preorder"))){
	run.runTestStepByName("VALIDATE_SAVE_SYNC") 
	log.info("Request has been " +action+ "")
}          
else{   
	run.runTestStepByName("SUBMIT_ASYNC")
	log.info("Request has been " +action+ "")
}
run.runTestStepByName("RESPONSE_TRANSFER")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="request" name="VALIDATE_SAVE_SYNC" id="62a8005e-c0d9-4477-9951-7a81b02f4aea"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processSync</con:operation><con:request name="VALIDATE_SAVE_SYNC" id="f64ce819-f4ec-4f5f-80c5-b160317544af" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#CHRequestURL}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
     <ns:processSync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance"/>
         <in1 xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance"/>
      </ns:processSync>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a6973c79-4907-4fb0-b45b-7c196e154325"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="97412875-54af-41e4-86f9-284bae2de113"><con:configuration><scriptText>def request = context.expand( '${VALIDATE_SAVE_SYNC#Request#declare namespace soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'; //soapenv:Envelope[1]}' )
def response = context.expand( '${VALIDATE_SAVE_SYNC#Response#declare namespace soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'; //soapenv:Envelope[1]}' )

log.info("VALIDATE AND SAVE Request: " + request);
log.info("RECEIVED Response: " + response);</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SUBMIT_ASYNC" id="f2b4e8c4-219d-493d-a1b5-c8253b08fde5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="SUBMIT_ASYNC" id="cf0efb81-a848-45db-bbd6-0cd3e303007c" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#CHRequestURL}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processAsync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance"/>
         <in1 xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance"/>
      </ns:processAsync>

   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fb95a53-b3c6-43d2-84cf-4822c3f34e00"/><con:assertion type="GroovyScriptAssertion" name="Response Recieved from SOAP" id="8d307a1c-bccb-45d7-a681-500f63b88b57"><con:configuration><scriptText>//import com.eviware.soapui.support.XmlHolder;

//def holder = new XmlHolder(messageExchange.responseContentAsXml);
//log.info("RESPONSEMESSAGEQUEUE Table Response: " + holder.getDomNode("//Results"));
//log.info("RESPONSEMESSAGEQUEUE Table Response Node Value: " + holder.getNodeValue("//Results/ResultSet[1]/Row[1]/COUNT[1]"));

def request = context.expand( '${VALIDATE_SAVE_SYNC#Request#declare namespace soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'; //soapenv:Envelope[1]}' )
def response = context.expand( '${SUBMIT_ASYNC#Response#declare namespace soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'; //soapenv:Envelope[1]}' )

log.info("SUBMITTED Request: " + request);
log.info("RECEIVED Response: " + response);
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="e026df4b-63b4-4938-a649-1c4b3bf142e4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>response</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SUBMIT_ASYNC</con:sourceStep><con:targetType>responseXml</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>response_validate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>VALIDATE_SAVE_SYNC</con:sourceStep><con:targetType>responseXmlSync</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="END" id="9fe29a52-cff8-499e-98dd-4f4c726206c0"><con:settings/><con:config><delay>500</delay></con:config></con:testStep><con:setupScript/><con:tearDownScript/><con:properties><con:property><con:name>header</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>body</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>action</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>remarks</con:name><con:value/></con:property><con:property><con:name>responseXml</con:name><con:value><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soapenv:Body>
      <soapenv:Fault>
         <faultcode xmlns:SOAP-ENV="http://xml.apache.org/axis/">SOAP-ENV:Server.MessageException</faultcode>
         <faultstring>SOAP-ENV:Server.MessageException:Malformed data error: com.nightfire.framework.message.parser.MessageParserException: ERROR: XML parsing failed:
ERROR: Could not convert XML stream to DOM Document:
Fatal XML parse error: Message [Premature end of file.].</faultstring>
         <detail>
            <ns1:hostname xmlns:ns1="http://xml.apache.org/axis/">stomvqavgw9.va.neustar.com</ns1:hostname>
         </detail>
      </soapenv:Fault>
   </soapenv:Body>
</soapenv:Envelope>]]></con:value></con:property><con:property><con:name>request</con:name><con:value/></con:property><con:property><con:name>responseXmlSync</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ASR_RESPONSE" searchProperties="true" disabled="true" id="99c370d2-494c-4d85-be07-e163bb125dc7"><con:settings/><con:testStep type="groovy" name="SWITCH_RESPONSE_TYPE" id="c1db8aeb-6772-4b8c-9e17-c513743ce3e4"><con:settings/><con:config><script>def responseType = context.expand( '${#TestCase#ResponseType}' )
def ilec = context.expand( '${#TestCase#Ilec}' )
log.info 'ILEC FOR RESPONSE SUBMISSION:=' + ilec

if(ilec.equals('ATT')){
	if (responseType.equals('CONFIRMATION') || responseType.equals('SEC_CONFIRMATION'))
	{
		log.info 'RESPONSE TYPE TO BE SUBMITTED:=' + responseType
		testRunner.runTestStepByName('processConfirmation')
		testRunner.gotoStepByName('END')
	}
	else if (responseType.equals('DLR'))
	{
		log.info 'RESPONSE TYPE TO BE SUBMITTED:=' + responseType
		testRunner.runTestStepByName('processDesignNotify')
		testRunner.gotoStepByName('END')
	}
	
	else if (responseType.equals('ACK'))
	{
		log.info 'RESPONSE TYPE TO BE SUBMITTED:=' + responseType
		testRunner.runTestStepByName('processResponse')
		testRunner.gotoStepByName('END')
	}
	else if (responseType.equals('NACK'))
	{
		log.info 'RESPONSE TYPE TO BE SUBMITTED:=' + responseType
		testRunner.runTestStepByName('processResponse')
		testRunner.gotoStepByName('END')
	}
	else if (responseType.contains('CNT'))
	{
		log.info 'RESPONSE TYPE TO BE SUBMITTED:=' + responseType
		testRunner.runTestStepByName('processErrorClarification')
		testRunner.gotoStepByName('END')
	}
	else if (responseType.equals('ERROR'))
	{
		log.info 'RESPONSE TYPE TO BE SUBMITTED:=' + responseType
		testRunner.runTestStepByName('processResponse')
		testRunner.gotoStepByName('END')
	}
}
else{
	if(ilec.equals('Frontier')){
		log.info 'RESPONSE TYPE TO BE SUBMITTED:=' + responseType
		testRunner.runTestStepByName('REQUEST_TRANSFER')
		testRunner.runTestStepByName('processAsyncResponse')
		testRunner.gotoStepByName('END')
	}
	else{
		if(ilec.equals('FPC')){
			log.info 'RESPONSE TYPE TO BE SUBMITTED:=' + responseType
			testRunner.runTestStepByName('REQUEST_TRANSFER')
			testRunner.runTestStepByName('processAsyncResponseFpc')
			testRunner.gotoStepByName('END')			
		}
		else{
			if(ilec.equals('COX COMMUNICATIONS')){
				log.info 'RESPONSE TYPE TO BE SUBMITTED:=' + responseType
				testRunner.runTestStepByName('REQUEST_TRANSFER')
				testRunner.runTestStepByName('processAsyncResponseCox')
				testRunner.gotoStepByName('END')				
			}
			else{
				log.info 'RESPONSE TYPE TO BE SUBMITTED:=' + responseType
				testRunner.runTestStepByName('VZW_REQUEST_TRANSFER')
				testRunner.runTestStepByName('processAsrResponse')
				testRunner.gotoStepByName('END')				
			}
			
		}
		
	}
}
</script></con:config></con:testStep><con:testStep type="transfer" name="REQUEST_TRANSFER" id="32a07000-2311-493b-a004-bd2fa57d67e6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body</con:name><con:sourceType>ResponseXML</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType xsi:nil="true"/><con:targetStep>processConfirmation</con:targetStep><con:targetPath>declare namespace java="java:webservice.asr.customer.wisor.com";
//java:processAsyncResponse[1]/string[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>bodyfpc</con:name><con:sourceType>ResponseXML</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType xsi:nil="true"/><con:targetStep>processConfirmation</con:targetStep><con:targetPath>declare namespace java="java:webservice.asr.customer.wisor.com";
//java:processAsyncResponse[1]/string[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false"><con:name>bodycox</con:name><con:sourceType>ResponseXML</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType xsi:nil="true"/><con:targetStep>processConfirmation</con:targetStep><con:targetPath>declare namespace java="java:webservice.asr.customer.wisor.com";
//java:processAsyncResponse[1]/string[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="VZW_REQUEST_TRANSFER" id="10fe3abc-054c-471b-b061-d46ebed173e7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body</con:name><con:sourceType>ResponseXML</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>processAsrResponse</con:targetStep><con:targetPath>declare namespace ser="http://server.ws.comms.asr.nightfire.com"
//ser:processAsrResponse[1]/in0[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="processConfirmation" id="0c25bb40-bb3a-4a2e-a0aa-8380f1ec8dd4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>IxcOrderPortType_SOAPBinding</con:interface><con:operation>processConfirmation</con:operation><con:request name="processConfirmation" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="74e54d4a-b1ac-4b79-b64d-149bd7b8796d" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#ATT_ASR_Response_URL}</con:endpoint><con:request>${#TestCase#ResponseXML}</con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e44eff02-b552-484d-a3b5-0f0ee0ada1df"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="94423f54-ba69-49ef-a293-50fd52bbff68"><con:configuration><scriptText>def request = context.expand( '${processConfirmation#Request}' )
def response = context.expand( '${processConfirmation#Response#declare namespace soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'; //soapenv:Envelope[1]}' )

log.info 'Submitting ASR Response: ' + request ;
log.info 'Received Response: ' + response ;
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ixc.com/Order/IxcOrderPortType/processConf"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="processDesignNotify" id="bfd9d3b9-6ae7-4bd7-a3c5-1a8d322cbdb1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>IxcOrderPortType_SOAPBinding</con:interface><con:operation>processDesignNotify</con:operation><con:request name="processDesignNotify" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="06695641-c341-4f9e-b839-5219253a1e28" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#ATT_ASR_Response_URL}</con:endpoint><con:request>${#TestCase#ResponseXML}</con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c7dbbf8b-3447-4aa9-ae00-8091993b0866"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="92af6808-9216-405a-998e-59d5fdc34f0f"><con:configuration><scriptText>def request = context.expand( '${processDesignNotify#Request}' )
def response = context.expand( '${processDesignNotify#Response#declare namespace soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'; //soapenv:Envelope[1]}' )

log.info 'Submitting ASR Response: ' + request ;
log.info 'Received Response: ' + response ;</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ixc.com/Order/IxcOrderPortType/processDesignNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="processErrorClarification" id="5d257381-f947-46e0-a5d4-9592c2161048"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>IxcOrderPortType_SOAPBinding</con:interface><con:operation>processErrorClarification</con:operation><con:request name="processErrorClarification" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9ec4927f-a1fe-4964-ae5f-b5e0b935505c" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#ATT_ASR_Response_URL}</con:endpoint><con:request>${#TestCase#ResponseXML}</con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4e32f027-8a2b-43c1-83d2-66262d35bb6c"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="158b820f-490c-4349-8e3b-6550c9c535b2"><con:configuration><scriptText>def request = context.expand( '${processErrorClarification#Request}' )
def response = context.expand( '${processErrorClarification#Response#declare namespace soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'; //soapenv:Envelope[1]}' )

log.info 'Submitting ASR Response: ' + request ;
log.info 'Received Response: ' + response ;</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ixc.com/Order/IxcOrderPortType/processErrorClar"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="processException" id="682f65f9-b08c-4acb-bd9f-4f6b15f0d0d6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>IxcOrderPortType_SOAPBinding</con:interface><con:operation>processException</con:operation><con:request name="processException" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="35ef6087-27a4-4e17-a37e-d6d9b2899b0c" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#ATT_ASR_Response_URL}</con:endpoint><con:request>${#TestCase#ResponseXML}</con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4dc8d9ca-0ac3-482f-93c6-1b799bc877ae"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="d0fd16aa-ed5d-459a-81f1-75cd42e5e7e8"><con:configuration><scriptText>def request = context.expand( '${processException#Request}' )
def response = context.expand( '${processException#Response#declare namespace soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'; //soapenv:Envelope[1]}' )

log.info 'Submitting ASR Response: ' + request ;
log.info 'Received Response: ' + response ;</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ixc.com/Order/IxcOrderPortType/processExc"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="processJeopardyNotify" id="0c58f02d-291c-474a-95e3-8de6f021fc3a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>IxcOrderPortType_SOAPBinding</con:interface><con:operation>processJeopardyNotify</con:operation><con:request name="processJeopardyNotify" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="184c87b9-3154-4700-86b3-99648378966c" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#ATT_ASR_Response_URL}</con:endpoint><con:request>${#TestCase#ResponseXML}</con:request><con:assertion type="SOAP Response" name="SOAP Response" id="705e7c11-5ae2-4fda-95d6-ffd9b0952554"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="29b18911-5ff8-4773-8d07-baedf9d38647"><con:configuration><scriptText>def request = context.expand( '${processJeopardyNotify#Request}' )
def response = context.expand( '${processJeopardyNotify#Response#declare namespace soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'; //soapenv:Envelope[1]}' )

log.info 'Submitting ASR Response: ' + request ;
log.info 'Received Response: ' + response ;</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ixc.com/Order/IxcOrderPortType/processJeopNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="processOrderInfoNotify" id="0171cf4e-8f2c-4fc6-b053-2e2c0e605371"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>IxcOrderPortType_SOAPBinding</con:interface><con:operation>processOrderInfoNotify</con:operation><con:request name="processOrderInfoNotify" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3118893b-a2f8-4c11-890f-269ca9ba76be" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#ATT_ASR_Response_URL}</con:endpoint><con:request>${#TestCase#ResponseXML}</con:request><con:assertion type="SOAP Response" name="SOAP Response" id="ff64e07f-3407-4e40-a9c5-e44ec311c2fb"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="1db54117-c461-4d19-ad3e-94af08945348"><con:configuration><scriptText>def request = context.expand( '${processOrderInfoNotify#Request}' )
def response = context.expand( '${processOrderInfoNotify#Response#declare namespace soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'; //soapenv:Envelope[1]}' )

log.info 'Submitting ASR Response: ' + request ;
log.info 'Received Response: ' + response ;</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ixc.com/Order/IxcOrderPortType/processOrdInfoNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="processResponse" id="c6799fb7-5781-46bc-88f7-81d06fe14a01"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>IxcOrderPortType_SOAPBinding</con:interface><con:operation>processResponse</con:operation><con:request name="processResponse" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1761fa61-d798-48f2-a889-2896d2db98f9" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#ATT_ASR_Response_URL}</con:endpoint><con:request>${#TestCase#ResponseXML}</con:request><con:assertion type="SOAP Response" name="SOAP Response" id="9b366c3f-f4c5-4e48-b757-941d8c32af2b"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3a8a3131-02e2-4746-8720-d3ccbee5c1b9"><con:configuration><scriptText>def request = context.expand( '${processResponse#Request}' )
def response = context.expand( '${processResponse#Response#declare namespace soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'; //soapenv:Envelope[1]}' )

log.info 'Submitting ASR Response: ' + request ;
log.info 'Received Response: ' + response ;</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ixc.com/Order/IxcOrderPortType/processRsp"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="processAsrResponse" id="05758c74-c372-4df2-af82-88c7b7333198"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AsrResponseReceiverSEISoapBinding</con:interface><con:operation>processAsrResponse</con:operation><con:request name="processAsrResponse" id="d0f45f10-88c0-4b1d-83c9-c256e46c387f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#VZW_ASR_Response_URL}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.ws.comms.asr.nightfire.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:processAsrResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"></in0>
      </ser:processAsrResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7baa1a3c-8e81-40ac-b453-cec9c58634ba"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="END" id="bfe20bbf-7b19-42b8-af97-9b5f7561fd0d"><con:settings/><con:config><delay>4000</delay></con:config></con:testStep><con:setupScript/><con:tearDownScript/><con:properties><con:property><con:name>ResponseXML</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value/></con:property><con:property><con:name>Ilec</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>039d9ee9-fb36-491c-96c4-aeeaa3c1de15</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e33b56a3-555a-486f-8e97-707f45e2b9d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0d5930da-863c-4d31-8815-ae44ad0180c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>89a51cf2-d52e-44b1-8e65-055ca04c205c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0275b142-2458-427d-8978-906320b0e993</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c08cf8eb-65b7-4399-91fb-b36228b9b651</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f9eb7eea-51ff-4fbe-9c34-a52b6cd3d351</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Utils" id="7af30640-e969-459c-82c6-55e0804d1ecb" disabled="true"><con:description>Test Suite Use for generating pon,ver,tn and retrieve input request xml file for submission</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET_REQUEST_XML" searchProperties="true" id="c93f51fa-46ce-489f-bab8-c7371110ea8e" disabled="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="SELECT_REQUEST_XML" id="6277a963-4b60-4aaf-9760-31b5c1a0619c"><con:settings/><con:config><script>import javax.xml.parsers.*;
import org.w3c.dom.*;
import org.xml.sax.*;
import java.io.*;
import javax.xml.transform.*;
import javax.xml.transform.stream.*;
import javax.xml.transform.dom.DOMSource;

def tc=testRunner.testCase
def project=testRunner.testCase.testSuite.project
def fileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlTestFile=testRunner.testCase.getPropertyValue("TEST_NAME")
def ilec=testRunner.testCase.getPropertyValue("ILEC")
def supp=testRunner.testCase.getPropertyValue("SUPP")
def actiontype=testRunner.testCase.getPropertyValue("ACTION_TYPE")
def body=testRunner.testCase.getPropertyValue("selectXML")
if(supp.equals("") || body.equals("REQ_HEADER")|| body.equals("REQ_ASRC") || body.equals("RES_HEADER") ){
	body=testRunner.testCase.getPropertyValue("selectXML")
}
else{
	body=testRunner.testCase.getPropertyValue("selectXML")
	body=body+"_SUP"
}	
log.info("Selected XML Value:   " + body) 
def finalXMLPath = fileLocation+"/InputRequestXML/"+xmlTestFile+"/"+ilec+"/"+body+".xml"	 
DocumentBuilderFactory factory =DocumentBuilderFactory.newInstance();
DocumentBuilder builder = factory.newDocumentBuilder();
Document doc = builder.parse(finalXMLPath)
StringWriter getrequest = new StringWriter()
Transformer serializer = TransformerFactory.newInstance().newTransformer()
serializer.transform(new DOMSource(doc), new StreamResult(getrequest)) 
String request	=getrequest.toString()
if(!request) {
	log.error("XML provided does not map to an existing XML template in Data Repository: " + body)
	testRunner.fail("XML template not in repository")
}
tc.setPropertyValue("requestXML", request)</script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value/></con:property><con:property><con:name>requestXML</con:name><con:value/></con:property><con:property><con:name>selectXML</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>OTCNUMBER</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>ICSC</con:name><con:value/></con:property><con:property><con:name>TXID</con:name><con:value/></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value/></con:property><con:property><con:name>LOCATIONID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GENERATE_PON_DATES_TN" searchProperties="true" id="2c83ccd6-1fcf-46c0-9531-68eb0f4dab07" disabled="true"><con:settings/><con:testStep type="groovy" name="GENERATE" id="9879d971-dc67-4d0b-939a-9183c05f7d16"><con:settings/><con:config><script>def tc = testRunner.testCase;
def customer = testRunner.testCase.testSuite.project.getPropertyValue("CUSTOMER")
def customerpass = testRunner.testCase.testSuite.project.getPropertyValue("API_password")               
def customeruser = testRunner.testCase.testSuite.project.getPropertyValue("API_username")
//gen=new FormatDates()
def startDate = new Date()
String curtime = startDate.format("MM-dd-yyyy-hhmma")
String ddtime = startDate.format("MM-dd-yyyy")

String pon = startDate.format("MMddyyyyhhmmssa")

String execution=startDate.format("MM/dd/yyyy hh:mm:ss a")
tc.setPropertyValue( "CURR_DT", curtime ) 
tc.setPropertyValue( "DUE_DT", curtime )
tc.setPropertyValue( "PON", pon )
tc.setPropertyValue( "DDD", ddtime )
tc.setPropertyValue( "EXECUTION_START_TIME", execution )
tc.setPropertyValue( "CUSTOMER", customer )
tc.setPropertyValue( "USERNAME", customeruser )
tc.setPropertyValue( "PASSWORD", customerpass )
log.info("CURR_DT=" + curtime)
log.info("DUE_DT=" + curtime)
log.info("PON=" + pon)
log.info("DDD=" + ddtime)
log.info("EXECUTION_START_TIME=" + execution)
log.info("CUSTOMER=" + customer)
log.info("USERNAME=" + customeruser)
log.info("PASSWORD=" + customerpass)
</script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>CURR_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">06-22-2017-0413PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">06-22-2017</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">06-22-2017-0413PM</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>06/22/2017 04:13:23 PM</con:value></con:property><con:property><con:name>PON</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">06222017041323PM</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CCST_E2E</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GENERATE_PHONE" searchProperties="true" id="44a359ee-6e3c-485e-8de1-9ace3038a3fe" disabled="true"><con:settings/><con:testStep type="groovy" name="PHONE" id="0f114233-9c70-4a1a-ad61-7fdd5daaf677"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
def tc = testRunner.testCase
def project = testRunner.testCase.testSuite.project
def customeruser,customerpass
gen=new FormatDates()
String remarks=tc.getPropertyValue("REMARKS")
String curtime = gen.getDateTime("MM-dd-yyyy-hhmma")
String ddtime = gen.getDateTime("MM-dd-yyyy")
String phone = gen.getDateTime("1ss-sss-ssss")
String pon = phone.replaceAll("-","")
String execution=gen.getDateTime("MM/dd/yyyy hh:mm:ss a")
if(remarks.equals("localezeasync")){
	customeruser = testRunner.testCase.testSuite.project.getPropertyValue("API_password")	
     customerpass = testRunner.testCase.testSuite.project.getPropertyValue("API_username")
}
else{
	customeruser = testRunner.testCase.testSuite.project.getPropertyValue("APIsync_username")	
     customerpass = testRunner.testCase.testSuite.project.getPropertyValue("APIsync_password")
}
tc.setPropertyValue( "CURR_DT", curtime ) 
tc.setPropertyValue( "DUE_DT", curtime )
tc.setPropertyValue( "PHONE", phone )  
tc.setPropertyValue( "DDD", ddtime ) 
tc.setPropertyValue( "PON", pon ) 
tc.setPropertyValue( "EXECUTION_START_TIME", execution ) 
tc.setPropertyValue( "USERNAME", customeruser ) 
tc.setPropertyValue( "PASSWORD", customerpass )

log.info("CURR_DT=" + curtime)
log.info("DUE_DT=" + curtime)
log.info("PHONE=" + phone)
log.info("PON=" + pon)
log.info("DDD=" + ddtime)
log.info("EXECUTION_START_TIME=" + execution)
log.info("Selected USERNAME=" + tc.getPropertyValue("USERNAME"))
log.info("Selected PASSWORD=" + tc.getPropertyValue("PASSWORD"))</script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value/></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GENERATE_ORDERNUMBER_TELEPHONE_E911_LIDB" searchProperties="true" id="5a4bfb4e-fad3-4ddd-affa-6f627b55bde4" disabled="true"><con:settings/><con:testStep type="groovy" name="ORDERNUMBER_TN" id="187d28d7-450e-44a8-8b4b-5906ee5a1c66"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
def tc = testRunner.testCase
def project = testRunner.testCase.testSuite.project
gen=new FormatDates()
String curtime = gen.getDateTime("MM-dd-yyyy-hhmma")
String extrtime = gen.getDateTime("MM-dd-yyyy")
String phone = gen.getDateTime("234-5ss-ddss")
String oriphone = phone.replaceAll("-","")
String ordernumber = gen.getDateTime("MMssmsss")
String otcnumber = gen.getDateTime("ssddss")
String execution=gen.getDateTime("MM/dd/yyyy hh:mm:ss a")
def customersyncuser = project.getPropertyValue("API_username")
def customersyncpass = project.getPropertyValue("API_password")	
tc.setPropertyValue( "USERNAME", customersyncuser )
tc.setPropertyValue( "PASSWORD", customersyncpass )
tc.setPropertyValue( "ORDERNUMBER", ordernumber )
tc.setPropertyValue( "OTCNUMBER", otcnumber )
tc.setPropertyValue( "PHONE", phone )  
tc.setPropertyValue( "RESPONSEPHONE", oriphone )  
tc.setPropertyValue( "DDD", extrtime ) 
tc.setPropertyValue( "EXECUTION_START_TIME", execution ) 
tc.setPropertyValue( "CURR_DT", curtime ) 


log.info("CURR_DT=" + curtime)
log.info("ORDERNUMBER=" + ordernumber)
log.info("OTCNUMBER=" + otcnumber)
log.info("PHONE=" + phone)
log.info("DDD=" + extrtime)
log.info("EXECUTION_START_TIME=" + execution)
log.info("Selected USERNAME=" + tc.getPropertyValue("USERNAME"))
log.info("Selected PASSWORD=" + tc.getPropertyValue("PASSWORD"))</script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>DDD</con:name><con:value/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value/></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>RESPONSEPHONE</con:name><con:value/></con:property><con:property><con:name>OTCNUMBER</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FORMAT_AND_SEND_REQUEST_TO_CH" searchProperties="true" id="0e21632d-9705-444e-ab33-db178dfe794a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="calltestcase" name="GET_HEADER_XML" id="2817e513-9737-4ffc-b2d3-546a80890918"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c93f51fa-46ce-489f-bab8-c7371110ea8e</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>requestXML</con:name><con:value/></con:property><con:property><con:name>selectXML</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name><con:value>${#TestCase#OTCNUMBER}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value>${#TestCase#RESPONSEVALUE}</con:value></con:property><con:property><con:name>LOCATIONID</con:name><con:value>${#TestCase#LOCATIONID}</con:value></con:property></con:properties><con:returnProperties><con:entry>requestXML</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_HEADER_TO_SEND_REQUEST" id="3c650121-bf4b-4ee4-bf9d-b2a408218410"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>headerreq</con:name><con:sourceType>requestXML</con:sourceType><con:sourceStep>GET_HEADER_XML</con:sourceStep><con:targetType>header</con:targetType><con:targetStep>SEND_REQUEST</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="GET_BODY" id="f45193d9-6c0c-4947-b976-519fdf121010"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c93f51fa-46ce-489f-bab8-c7371110ea8e</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>requestXML</con:name><con:value/></con:property><con:property><con:name>selectXML</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name><con:value>${#TestCase#OTCNUMBER}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value>${#TestCase#RESPONSEVALUE}</con:value></con:property><con:property><con:name>LOCATIONID</con:name><con:value>${#TestCase#LOCATIONID}</con:value></con:property></con:properties><con:returnProperties><con:entry>requestXML</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_BODY_TO_SEND_REQUEST" id="9fb26458-ef74-4607-9705-dda1ac6e07ea"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>bodyreq</con:name><con:sourceType>requestXML</con:sourceType><con:sourceStep>GET_BODY</con:sourceStep><con:targetType>body</con:targetType><con:targetStep>SEND_REQUEST</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SEND_REQUEST" id="0cc2065b-a986-46e8-a06b-7838f5b80b2c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>cc77873c-d8a6-472b-97e2-85f9f0c63f4f</con:targetTestCase><con:properties><con:property><con:name>header</con:name><con:value/></con:property><con:property><con:name>body</con:name></con:property><con:property><con:name>action</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>remarks</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>responseXml</con:name></con:property><con:property><con:name>request</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>responseXmlSync</con:name></con:property></con:properties><con:returnProperties><con:entry>responseXml</con:entry><con:entry>responseXmlSync</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="dd955de0-ecf9-424b-a6d9-281209305320"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="b2af2cc8-6ae1-490c-9033-68646c96f9c3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>response</con:name><con:sourceType>responseXml</con:sourceType><con:sourceStep>SEND_REQUEST</con:sourceStep><con:targetType>RESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>responsesync</con:name><con:sourceType>responseXmlSync</con:sourceType><con:sourceStep>SEND_REQUEST</con:sourceStep><con:targetType>RESPONSESYNC</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:setupScript>def tc = testRunner.testCase;
log.info tc.getPropertyValue("CUSTOMER");</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>OTCNUMBER</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>ICSC</con:name><con:value/></con:property><con:property><con:name>TXID</con:name><con:value/></con:property><con:property><con:name>LOCATIONID</con:name><con:value/></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET_ASR_RESPONSE_XML" searchProperties="true" disabled="true" id="22fd1a1e-e2c5-4fb9-8d58-86302feb83c7"><con:settings/><con:testStep type="groovy" name="SELECT_REQUEST_XML" id="f43dfa63-884e-4e0f-97c7-6d37c5caf19d"><con:settings/><con:config><script>import javax.xml.parsers.*;
import org.w3c.dom.*;
import org.xml.sax.*;
import java.io.*;
import javax.xml.transform.*;
import javax.xml.transform.stream.*;
import javax.xml.transform.dom.DOMSource;
def tc=testRunner.testCase
def project=testRunner.testCase.testSuite.project
def fileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlTestFile=testRunner.testCase.getPropertyValue("TEST_NAME")
def ilec=testRunner.testCase.getPropertyValue("ILEC")
def supp=testRunner.testCase.getPropertyValue("SUPP")
def actiontype=testRunner.testCase.getPropertyValue("ACTION_TYPE")
def body=testRunner.testCase.getPropertyValue("selectXML")


log.info("Response XML to be selected: " + body) 


def finalXMLPath = fileLocation+"/InputResponseXML/"+xmlTestFile+"/"+ilec+"/"+body+".xml"
log.info 	 "RESPONSE XML PATH:=" + finalXMLPath

DocumentBuilderFactory factory =DocumentBuilderFactory.newInstance();
DocumentBuilder builder = factory.newDocumentBuilder();
Document doc = builder.parse(finalXMLPath)
StringWriter getrequest = new StringWriter()
Transformer serializer = TransformerFactory.newInstance().newTransformer()
serializer.transform(new DOMSource(doc), new StreamResult(getrequest)) 
String request	=getrequest.toString()
if(!request) {
	log.error("XML provided does not map to an existing XML template in Data Repository: " + body)
	testRunner.fail("XML template not in repository")
}
log.info "RESPONSE XML := " + request
tc.setPropertyValue("requestXML", request)</script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value/></con:property><con:property><con:name>requestXML</con:name><con:value/></con:property><con:property><con:name>selectXML</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>ICSC</con:name><con:value/></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value/></con:property><con:property><con:name>ASOG_VER</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FORMAT_AND_SEND_ASR_RESPONSE" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true" id="8d8cfb03-e0f6-4acf-9ecd-ce440ea6ccd5"><con:settings/><con:testStep type="calltestcase" name="GET_RESPONSE_XML" id="25601751-4e89-4878-9959-643b3309a58e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>22fd1a1e-e2c5-4fb9-8d58-86302feb83c7</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>requestXML</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>selectXML</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value>${#TestCase#RESPONSEVALUE}</con:value></con:property><con:property><con:name>ASOG_VER</con:name><con:value>${#TestCase#ASOG_VER}</con:value></con:property></con:properties><con:returnProperties><con:entry>requestXML</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_RESPONSE_XML_TO_SEND_RESPONSE" id="1e16c9be-4475-4712-bb5f-4ef8eb01bb36"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>headerreq</con:name><con:sourceType>requestXML</con:sourceType><con:sourceStep>GET_RESPONSE_XML</con:sourceStep><con:targetType>responseXml</con:targetType><con:targetStep>SUBMIT RESPONSE</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>responseType</con:name><con:sourceType>BODY</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>ResponseType</con:targetType><con:targetStep>SUBMIT RESPONSE</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT RESPONSE" id="97898a1d-e7c4-4f86-9d85-f89dca09aa20"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>99c370d2-494c-4d85-be07-e163bb125dc7</con:targetTestCase><con:properties><con:property><con:name>responseXml</con:name></con:property><con:property><con:name>ResponseType</con:name></con:property><con:property><con:name>Ilec</con:name><con:value>${#TestCase#ILEC}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:setupScript>def tc = testRunner.testCase;
log.info tc.getPropertyValue("CUSTOMER");</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>ICSC</con:name><con:value/></con:property><con:property><con:name>ASOG_VER</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Report" id="a1b928ce-b045-43c5-8451-c8f1256b5f17" disabled="true"><con:description>Report test suite for creating the test step result in CSV file</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REPORTING" searchProperties="true" id="896cd038-d1ce-4873-b63e-e4d80dcd4f50" disabled="true"><con:settings/><con:testStep type="groovy" name="CSV_FILE" id="e3e274a8-837f-436a-986e-174a6010b7a8"><con:settings/><con:config><script>try {
        if(context.expand('${#Project#ProduceReports}') == 'true') {
        	String filepath = context.expand( '${#Project#DATA_REPOSITORY}' )
        	//String filepath= testRunner.testCase.testSuite.project.getPropertyValue("DATA_REPOSITORY")
        def resultDir = new File(filepath+"/SoapUILogs")
        if(!resultDir.exists()) {
            resultDir.mkdirs();
        }
        def resultsFile = new File(resultDir, "CSVReport.csv");

           if(!resultsFile.exists()) {
            resultsFile.createNewFile();
            resultsFile.write('"NAME","RESULT","MESSAGES","DATE"');
        }

        resultsFile.append('\n');
        resultsFile.append('"' + testRunner.testCase.name + '",');
        resultsFile.append('"' + testRunner.status + '",');

        resultsFile.append('"');
        for(result in testRunner.getResults()) {
            msgCount = 0;
            for(message in result.getMessages()) {
                msgCount++;
                if(msgCount &lt; 10) {
                    resultsFile.append(message + ';\n');
                }
            }
        }

        resultsFile.append('",');

        def currentDate = new Date().format("yyyy-MM-dd hh:mm");
        resultsFile.append('"' + currentDate + '"');
    }
} catch(e) {
    log.error("An error occurred: " + e.toString());
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="DBInterfaceAccess" id="5546c786-4e92-4d30-a705-ec50f0ce41ad" disabled="true"><con:description>Test Suite for verifying CH and PEP db for Lsr Send Order and PreOrder.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RESPONSE_MESSAGE_QUEUE" searchProperties="true" id="4a0d11eb-4413-43be-b0fa-15a5863627d3" disabled="true"><con:settings/><con:testStep type="properties" name="EVENTCHANNELNAME" id="24c10b61-1393-46c2-b333-dfcbc18a1cbe" disabled="true"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ALT_ASR</con:name><con:value>NeuStar.asr_order.ALT.ASOG.EventChannel_</con:value></con:property><con:property><con:name>ASRFAX_ASR</con:name><con:value>NeuStar.asr_order.ASRFAX.ASOG.EventChannel_</con:value></con:property><con:property><con:name>ATTORDER</con:name><con:value>NeuStar.lsr_order.ATT.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>ATTPNORDER</con:name><con:value>NeuStar.lsr_order.ATT.LSOG9.PN_</con:value></con:property><con:property><con:name>ATTPREORDER</con:name><con:value>NeuStar.lsr_preorder.ATT.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>ATTSEORDER</con:name><con:value>NeuStar.lsr_order.ATTSE.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>ATTSEPNORDER</con:name><con:value>NeuStar.lsr_order.ATTSE.LSOG9.PN_</con:value></con:property><con:property><con:name>ATTSEPREORDER</con:name><con:value>NeuStar.lsr_preorder.ATTSE.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>ATT_ASR</con:name><con:value>NeuStar.asr_order.ATT.ASOG.EventChannel_</con:value></con:property><con:property><con:name>BHNCSR</con:name><con:value>NeuStar.lsr_preorder.BHN_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>BHNLSR</con:name><con:value>NeuStar.lsr_order.BHN_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>CENTURYLINKORDER</con:name><con:value>NeuStar.lsr_order.CenturyLink.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>CENTURYLINKPREORDER</con:name><con:value>NeuStar.lsr_preorder.CenturyLink.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>COX COMMUNICATIONS_ASR</con:name><con:value>NeuStar.asr_order.COX COMMUNICATIONS.ASOG.EventChannel_</con:value></con:property><con:property><con:name>E911BWC</con:name><con:value>NeuStar.E911_Request.BWC.1_0.EventChannel_</con:value></con:property><con:property><con:name>ELI_ASR</con:name><con:value>NeuStar.asr_order.ELI.ASOG.EventChannel_</con:value></con:property><con:property><con:name>EPBCSR</con:name><con:value>NeuStar.lsr_preorder.EPB_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>EPBLSR</con:name><con:value>NeuStar.lsr_order.EPB_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>FPCORDER</con:name><con:value>NeuStar.lsr_order.FPC.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>FPCPNORDER</con:name><con:value>NeuStar.lsr_order.FPC.LSOG9.PN_</con:value></con:property><con:property><con:name>FPCPREORDER</con:name><con:value>NeuStar.lsr_preorder.FPC.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>FRONTIERORDER</con:name><con:value>NeuStar.lsr_order.Frontier.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>FRONTIERPNORDER</con:name><con:value>NeuStar.lsr_order.Frontier.LSOG9.PN_</con:value></con:property><con:property><con:name>FRONTIERPREORDER</con:name><con:value>NeuStar.lsr_preorder.Frontier.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>FRONTIER_ASR</con:name><con:value>NeuStar.asr_order.Frontier.ASOG.EventChannel_</con:value></con:property><con:property><con:name>HAWAIITELCSR</con:name><con:value>NeuStar.lsr_preorder.HAWAIITEL.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>HAWAIITELLSR</con:name><con:value>NeuStar.lsr_order.HAWAIITEL.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>HAWAIITEL_ASR</con:name><con:value>NeuStar.asr_order.HAWAIITEL.ASOG.EventChannel_</con:value></con:property><con:property><con:name>Intrado</con:name><con:value>NeuStar.E911_Request.Intrado.2_0.EventChannel_</con:value></con:property><con:property><con:name>IntradoI2</con:name><con:value>NeuStar.E911_Request.IntradoI2.I2.EventChannel_</con:value></con:property><con:property><con:name>LOCALEZE</con:name><con:value>NeuStar.online_business_listing.Localeze.1_0.EventChannel_</con:value></con:property><con:property><con:name>MCCCSR</con:name><con:value>NeuStar.lsr_preorder.MCC_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>MCCLSR</con:name><con:value>NeuStar.lsr_order.MCC_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>MCI_ASR</con:name><con:value>NeuStar.asr_order.MCI.ASOG.EventChannel_</con:value></con:property><con:property><con:name>NISORDER</con:name><con:value>NeuStar.lsr_order.NIS.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>PEERLESSCSR</con:name><con:value>NeuStar.lsr_preorder.PEERLESS.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>PEERLESSLSR</con:name><con:value>NeuStar.lsr_order.PEERLESS.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>QWESTCLECCSR</con:name><con:value>NeuStar.lsr_preorder.QWESTCLEC.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>QWESTCLECLSR</con:name><con:value>NeuStar.lsr_order.QWESTCLEC.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>QWESTORDER</con:name><con:value>NeuStar.lsr_order.QWEST.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>QWESTPNORDER</con:name><con:value>NeuStar.lsr_order.QWEST.LSOG10.PN_</con:value></con:property><con:property><con:name>QWESTPREORDER</con:name><con:value>NeuStar.lsr_preorder.QWEST.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>QWEST_ASR</con:name><con:value>NeuStar.asr_order.QWEST.ASOG.EventChannel_</con:value></con:property><con:property><con:name>RCNCSR</con:name><con:value>NeuStar.lsr_preorder.RCN_RECV.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>RCNLSR</con:name><con:value>NeuStar.lsr_order.RCN_RECV.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>Schofield</con:name><con:value>NeuStar.E911_Request.Schofield.1_0.EventChannel_</con:value></con:property><con:property><con:name>SPRINT_ASR</con:name><con:value>NeuStar.asr_order.Sprint.ASOG.EventChannel_</con:value></con:property><con:property><con:name>TW Telecom_ASR</con:name><con:value>NeuStar.asr_order.TW Telecom.ASOG.EventChannel_</con:value></con:property><con:property><con:name>TWCCSR</con:name><con:value>NeuStar.lsr_preorder.TWC_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>TWCLSR</con:name><con:value>NeuStar.lsr_order.TWC_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>TW_TELECOM_ASR</con:name><con:value>NeuStar.asr_order.TW_Telecom.ASOG.EventChannel_</con:value></con:property><con:property><con:name>VNGECSR</con:name><con:value>NeuStar.lsr_preorder.VNGE_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>VNGELSR</con:name><con:value>NeuStar.lsr_order.VNGE_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>VZEORDER</con:name><con:value>NeuStar.lsr_order.VZE.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>VZEPNORDER</con:name><con:value>NeuStar.lsr_order.VZE.LSOG9.PN_</con:value></con:property><con:property><con:name>VZEPREORDER</con:name><con:value>NeuStar.lsr_preorder.VZE.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>VZWORDER</con:name><con:value>NeuStar.lsr_order.VZW.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>VZWPNORDER</con:name><con:value>NeuStar.lsr_order.VZW.LSOG9.PN_</con:value></con:property><con:property><con:name>VZWPREORDER</con:name><con:value>NeuStar.lsr_preorder.VZW.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>WAVECSR</con:name><con:value>NeuStar.lsr_preorder.WAVE_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>WAVELSR</con:name><con:value>NeuStar.lsr_order.WAVE_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>WOWCSR</con:name><con:value>NeuStar.lsr_preorder.WOW.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>WOWLSR</con:name><con:value>NeuStar.lsr_order.WOW.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>XO_ASR</con:name><con:value>NeuStar.asr_order.XO.ASOG.EventChannel_</con:value></con:property><con:property><con:name>YMAXCSR</con:name><con:value>NeuStar.lsr_preorder.YMAX_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>YMAXLSR</con:name><con:value>NeuStar.lsr_order.YMAX_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>VZW_ASR</con:name><con:value>NeuStar.asr_order.VZW.ASOG.EventChannel_</con:value></con:property><con:property><con:name>BAN_ASR</con:name><con:value>NeuStar.asr_order.BAN.ASOG.EventChannel_</con:value></con:property><con:property><con:name>ATT_LNS_ASR</con:name><con:value>NeuStar.asr_order.ATT_LNS.ASOG.EventChannel_</con:value></con:property><con:property><con:name>COX_COMMUNICATIONS_ASR</con:name><con:value>NeuStar.asr_order.COX COMMUNICATIONS.ASOG.EventChannel_</con:value></con:property><con:property><con:name>BAS_ASR</con:name><con:value>NeuStar.asr_order.BAS.ASOG.EventChannel_</con:value></con:property><con:property><con:name>FPC_ASR</con:name><con:value>NeuStar.asr_order.FPC.ASOG.EventChannel_</con:value></con:property><con:property><con:name>CINBELL_ASR</con:name><con:value>NeuStar.asr_order.CinBell.ASOG.EventChannel_</con:value></con:property><con:property><con:name>HAWAIITELASR</con:name><con:value>NeuStar.receive.asr_order.asr_order.HAWAIITEL.ASOG.EventChannel_</con:value></con:property><con:property><con:name>BHNPRODASR</con:name><con:value>NeuStar.receive.asr_order.asr_order.BHN_PROD.ASOG.EventChannel_</con:value></con:property><con:property><con:name>TWCCOMMASR</con:name><con:value>NeuStar.receive.asr_order.asr_order.TWC_COMM.ASOG.EventChannel_</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="EVENTCHANNELSCRIPT" id="6b35d542-60c7-4e31-ab5f-7c80222f4853" disabled="true"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver
def tc = testRunner.testCase
String newpon
boolean fail = true
String pon = tc.getPropertyValue("PON")
String customer = tc.getPropertyValue("CUSTOMER")
String event = tc.getPropertyValue("CHANNELNAME")
String numberofraw = tc.getPropertyValue("RESRAWINRESQUE")
String oid = tc.getPropertyValue("OID")
if(pon.equals("")){
	newpon = '%'+oid+'%'
}
else{
	newpon = '%'+pon+'%'
}
log.info ("CUSTOMER: " + customer )
log.info ("CHANNELNAME: " + event )
log.info ("RESRAWINRESQUE: " + numberofraw )
log.info ("NEWPON: " + newpon )

def eventchannelold = tc.getTestStepByName("EVENTCHANNELNAME").getPropertyValue(event)
def eventchannel=eventchannelold+customer
if (!eventchannel) {
	log.error("Remarks code : " + event + " not found in repository!")
	testRunner.fail("Expected Event code not found in repository")
}
tc.setPropertyValue("PON",newpon)
tc.setPropertyValue("CHANNELNAME",eventchannel)
log.info ("NEWCHANNELNAME: " + eventchannel )</script></con:config></con:testStep><con:testStep type="jdbc" name="VALIDATE_RESPONSE_MESSAGE_QUEUE" id="9336acac-4851-43bc-839f-28bec61db3fe" disabled="true"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#DB_DRIVER}</con:driver><con:connectionString>${#Project#CH_DBSTRING}</con:connectionString><con:query>select count(*) 
from RESPONSEMESSAGEQUEUE 
where CUSTOMERID =:CUSTOMER 
and CHANNELNAME =:CHANNELNAME 
and MESSAGE like :PON
order by ARRIVALTIME desc</con:query><con:assertion type="XPath Match" name="XPath Match" id="12e88629-4793-4db8-88bc-beb82621201c"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]</path><content>${#TestCase#RESRAWINRESQUE}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Raw Verification" id="9d6747de-f455-4660-b29a-2cd1be2e69cd"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder;

def holder = new XmlHolder(messageExchange.responseContentAsXml);
log.info("RESPONSEMESSAGEQUEUE Table Response: " + holder.getDomNode("//Results"));
log.info("RESPONSEMESSAGEQUEUE Table Response Node Value: " + holder.getNodeValue("//Results/ResultSet[1]/Row[1]/COUNT[1]"));
//def response=tc.getPropertyValue("RESRAWINRESQUE")
//def NodeValue = holder.getNodeValue("//Results/ResultSet[1]/Row[1]/COUNT[1]")
//if(response=NodeValue)
//{
//	log.info("ResponseMessageQueueVerification is Done")
//	log.info("Actaul value:"+response+ "and Expected Value:"+NodeValue)
//}</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="7320c15c-0a22-4628-85f0-a11de6e69607" name="XPath Match 1"><con:configuration/></con:assertion><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property></con:properties></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value/></con:property><con:property><con:name>OID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LSR_ORDER_PREORDER_LOCALEZE_DB_VALIDATION_ON_SEA" searchProperties="true" id="29ce6024-7c19-4a9b-93af-b160fc46b8d4" disabled="true"><con:settings/><con:testStep type="properties" name="STATUS" id="ae6a2f03-1b65-4936-892c-a0d68ffce359"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source/><con:properties><con:property><con:name>NEWSTATUS</con:name><con:value>new</con:value></con:property><con:property><con:name>ACKSTATUS</con:name><con:value>ack</con:value></con:property><con:property><con:name>NEGACKSTATUS</con:name><con:value>negack</con:value></con:property><con:property><con:name>FOCACCEPTSTATUS</con:name><con:value>focaccept</con:value></con:property><con:property><con:name>FOCREJECTSTATUS</con:name><con:value>focreject</con:value></con:property><con:property><con:name>JEOPARDYSTATUS</con:name><con:value>jeopardy</con:value></con:property><con:property><con:name>SOCSTATUS</con:name><con:value>soc</con:value></con:property><con:property><con:name>BCNSTATUS</con:name><con:value>billing_completion</con:value></con:property><con:property><con:name>DSRCNSTATUS</con:name><con:value>dsrcn</con:value></con:property><con:property><con:name>PIASTATUS</con:name><con:value>provider_initiated_activity</con:value></con:property><con:property><con:name>PICSTATUS</con:name><con:value>provider_initiated_cancel</con:value></con:property><con:property><con:name>INFOSTATUS</con:name><con:value>info</con:value></con:property><con:property><con:name>SUPPSTATUS</con:name><con:value>supplement</con:value></con:property><con:property><con:name>SUPPACCEPTSTATUS</con:name><con:value>suppaccept</con:value></con:property><con:property><con:name>SUPPREJECTSTATUS</con:name><con:value>suppreject</con:value></con:property><con:property><con:name>STASTATUS</con:name><con:value>status</con:value></con:property><con:property><con:name>BATCHHOTCUT</con:name><con:value>batch_hot_cut</con:value></con:property><con:property><con:name>DSREDSTATUS</con:name><con:value>dsred</con:value></con:property><con:property><con:name>ADDRESSALTERNATIVESTATUS</con:name><con:value>addressAlternative</con:value></con:property><con:property><con:name>MULTIPLERESPONSESTATUS</con:name><con:value>Multiple_response</con:value></con:property><con:property><con:name>ADDRESSERRORSTATUS</con:name><con:value>addressError</con:value></con:property><con:property><con:name>RESPONSESTATUS</con:name><con:value>response</con:value></con:property><con:property><con:name>ERRORSTATUS</con:name><con:value>error_response</con:value></con:property><con:property><con:name>ADDRESSMATCHSTATUS</con:name><con:value>addressMatch</con:value></con:property><con:property><con:name>PARSEDRESPONSESTATUS</con:name><con:value>parsed_response</con:value></con:property><con:property><con:name>UNPARSEDRESPONSESTATUS</con:name><con:value>unparsed_response</con:value></con:property><con:property><con:name>SuccessfulPost</con:name><con:value>SuccessfulPost</con:value></con:property><con:property><con:name>Post_Error</con:name><con:value>Post_Error</con:value></con:property><con:property><con:name>PostWithErrorValidator</con:name><con:value>PostWithErrorValidator</con:value></con:property><con:property><con:name>ErrorResponse</con:name><con:value>ErrorResponse</con:value></con:property><con:property><con:name>Available_Listing</con:name><con:value>Available_Listing</con:value></con:property><con:property><con:name>AvailableAndOwnedByYou</con:name><con:value>AvailableAndOwnedByYou</con:value></con:property><con:property><con:name>Unavailable</con:name><con:value>Unavailable</con:value></con:property><con:property><con:name>SubscriptionsSuccessfull</con:name><con:value>SubscriptionsSuccessfull</con:value></con:property><con:property><con:name>SubscriptionsError</con:name><con:value>SubscriptionsError</con:value></con:property><con:property><con:name>TaxonomySuccessfull</con:name><con:value>TaxonomySuccessfull</con:value></con:property><con:property><con:name>ErrorResponseTQ</con:name><con:value>ErrorResponse</con:value></con:property><con:property><con:name>abandon</con:name><con:value>abandon</con:value></con:property><con:property><con:name>suspend</con:name><con:value>suspend</con:value></con:property><con:property><con:name>resume</con:name><con:value>resume</con:value></con:property><con:property><con:name>cancel</con:name><con:value>cancel</con:value></con:property><con:property><con:name>Check_Availability_Error</con:name><con:value>Check_Availability_Error</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="VALIDATE_LSR_ORDER_PREORDER_LOCALEZE_DB_VALIDATION" id="8fbd1762-c0fd-4cca-a27e-9598f5e37ad8"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver
def tc = testRunner.testCase
def oristatusori,orioidori,oriparentoidori,pon

boolean fail = true

int ver = Integer.parseInt(tc.getPropertyValue("VER"))
long timeout = Long.parseLong(tc.getPropertyValue("TIMEOUT"))
String type = tc.getPropertyValue("TC_TYPE")
String event = tc.getPropertyValue("STATUS")
String supplier = tc.getPropertyValue("ILEC")
String remarks = tc.getPropertyValue("REMARKS")
String customer = tc.getPropertyValue("CUSTOMER")

if(remarks.equals("localezesync") || remarks.equals("localezeasync")){
	pon=tc.getPropertyValue("LOCAL_NUMBER")
}    
else{
	pon=tc.getPropertyValue("PON")
}

log.info("Query Input: PON OR TN=" + pon)
log.info("Query Input: VER=" + ver)
log.info("Query Input: TC_TYPE=" + type)
log.info("Query Input: LAST STATUS TO BE MATCHED=" + event)
log.info("Query Input: SUPPLIER =" + supplier)
log.info("Query Input: REMARKS =" + remarks)
log.info("Query Input: CUSTOMER ID =" + customer)

String statuse = tc.getTestStepByName("STATUS").getPropertyValue(event)
if (!statuse) {
	log.error("Status code : " + event + " not found in repository!")
	testRunner.fail("Expected Status code not found in repository")
}


com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" )
def dbDriver = context.expand('${#Project#DB_DRIVER}')
def dbString = context.expand('${#Project#CHPEP_DBSTRING}')
def dbArray = dbString.split("@")
def dbUP = dbArray[0].split(":")
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1]
def userPass = dbUP[3].split("/")
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver)


for(long i =0 ; i&lt;timeout;i+=25){
	log.info("loop value = " + i)
	try{
		Thread.currentThread().sleep(2000)
	}
	catch(Exception e){}
	if(type.equals("LsrOrder")){
		if(event.equals("abandon") || event.equals("suspend") || event.equals("resume") || event.equals("cancel")){
			def fstatus = sql.firstRow("select last_action from SEA_LSR_TRANS where pon=${pon} and customerid=${customer} and supplier_name=${supplier} and ver=${ver} order by last_status_dt desc")
			log.info("Message Type in DB :" + fstatus) 
               log.info("Selected status Type in Repository :" + statuse)
               if (fstatus == null){
               	log.info("Waiting of expected status in SEA_LSR_TRANS")               	
               }
               else{
               	String oristatus=fstatus[0]
               	log.info("Original status Type in DB :" + oristatus)
               	if(oristatus==statuse){
               		i = timeout
               		fail = false
	  	               log.info ("Final status found in SEA_LSR_TRANS table: " + fstatus )
	  	               tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" )               		       	
               	}
               	else{
               		log.info("Waiting of expected status in SEA_LSR_TRANS++++++++++++++++");
               	}
               }
		}
		else{
			def fstatus = sql.firstRow("select status from SEA_LSR_TRANS where pon=${pon} and customerid=${customer} and supplier_name=${supplier} and ver=${ver} order by updated_dt desc")
			log.info("Message Type in DB :" + fstatus)
               log.info("Selected status Type in Repository :" + statuse)
               if(fstatus == null){ 
               	log.info("Waiting of expected status in SEA_LSR_TRANS")
               }
               else{
               	String oristatus=fstatus[0]
               	log.info("Original status Type in DB :" + oristatus)
               	if(oristatus==statuse){
               		i = timeout
               		fail = false
               		log.info ("Final status found in SEA_LSR_TRANS table: " + fstatus )
	  	               tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" )
               	}
               	else{
               		log.info("Waiting of expected status in SEA_LSR_TRANS++++++++++++++++")
               	}
               }
		}
		
	}
	else{
		if(type.equals("LsrPreOrder")){
			def fstatus = sql.firstRow("select status from SEA_LSR_PO_TRANS where txnum=${pon} and cust_name=${customer} and supplier_name=${supplier} order by updated_dt desc ")
			log.info("Message Type in DB :" + fstatus)
			log.info("Selected status Type in Repository :" + statuse)
			if(fstatus == null){
				log.info("Waiting of expected status in SEA_LSR_PO_TRANS")
			}
			else{
				String oristatus=fstatus[0]
				log.info("Original status Type in DB :" + oristatus)
				if(oristatus==statuse){
					i = timeout
	  	               fail = false
	  	               log.info ("Final status found in SEA_LSR_PO_TRANS table: " + fstatus )  
	  	               tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" )
				}
				else{
					log.info("Waiting of expected status in SEA_LSR_PO_TRANS++++++++++++++++")
				}
			}
		}
		else{
			if(event.equals("AvailableAndOwnedByYou")){
				def fstatus = sql.firstRow("select status from SEA_LOCALEZE_TRANS where servicekey=1510 and telephonenumber=1501460046 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")
				oristatusori=fstatus
				def oid = sql.firstRow("select oid from SEA_LOCALEZE_TRANS where servicekey=1510 and telephonenumber=1501460046 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")
				orioidori=oid
				def parent_oid = sql.firstRow("select parent_oid from SEA_LOCALEZE_TRANS where servicekey=1510 and telephonenumber=1501460046 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")
				oriparentoidori=parent_oid
			}
			else{
				if(event.equals("Unavailable")){
					def fstatus = sql.firstRow("select status from SEA_LOCALEZE_TRANS where servicekey=1510 and telephonenumber=7606332202 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")
					oristatusori=fstatus
					def oid = sql.firstRow("select oid from SEA_LOCALEZE_TRANS where  servicekey=1510 and telephonenumber=7606332202 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")
					orioidori=oid
					def parent_oid = sql.firstRow("select parent_oid from SEA_LOCALEZE_TRANS where servicekey=1510 and telephonenumber=7606332202 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")
					oriparentoidori=parent_oid
				}
				else{
					if(event.equals("TaxonomySuccessfull") || event.equals("ErrorResponseTQ")){
						def fstatus = sql.firstRow("select status from SEA_LOCALEZE_TRANS where servicekey=1501 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")
						oristatusori=fstatus
						def oid = sql.firstRow("select oid from SEA_LOCALEZE_TRANS where servicekey=1501 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")
						orioidori=oid
						def parent_oid = sql.firstRow("select parent_oid from SEA_LOCALEZE_TRANS where servicekey=1501 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")
						oriparentoidori=parent_oid
					}
					else{
						if(event.equals("SubscriptionsSuccessfull")){
							def fstatus = sql.firstRow("select status from SEA_LOCALEZE_TRANS where telephonenumber=7415649026 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")
							oristatusori=fstatus
							def oid = sql.firstRow("select oid from SEA_LOCALEZE_TRANS where telephonenumber=7415649026 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")
							orioidori=oid
							def parent_oid = sql.firstRow("select parent_oid from SEA_LOCALEZE_TRANS where telephonenumber=7415649026 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")            	                  
							oriparentoidori=parent_oid
						}
						else{
							def fstatus = sql.firstRow("select status from SEA_LOCALEZE_TRANS where telephonenumber=${pon} and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")                	                  
							oristatusori=fstatus
							def oid = sql.firstRow("select oid from SEA_LOCALEZE_TRANS where telephonenumber=${pon} and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")             	                  
							orioidori=oid
							def parent_oid = sql.firstRow("select parent_oid from SEA_LOCALEZE_TRANS where telephonenumber=${pon} and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ")            	                  
							oriparentoidori=parent_oid
						}
					}
				}
			}		
		log.info("Message Type in DB :" + oristatusori)
		log.info("OID  in DB :" + orioidori)
		log.info("PARENT_OID  in DB :" + oriparentoidori)
		String oidori=orioidori[0]
		String parent_oidori=oriparentoidori[0]
		tc.setPropertyValue("OID", oidori)
		tc.setPropertyValue("PARENT_OID", parent_oidori)
		if(oristatusori == null){
			log.info("Waiting of expected status in SEA_LOCALEZE_TRANS")
		}
		else{
			String oristatus=oristatusori[0]
			log.info("Original status Type in DB :" + oristatus)
			if(oristatus==statuse){
				i = timeout
				fail = false
				log.info ("Final status found in SEA_LOCALEZE_TRANS table: " + oristatusori )  
				tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" )
			}
			else{
				log.info("Waiting of expected status in SEA_LOCALEZE_TRANS++++++++++++++++")
			}
		}
	}
  }		
}
if (fail){
	testRunner.fail("MESSAGE_TYPE not received 1.")
	log.error("MESSAGE_TYPE not received 2")
	tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Fail" ) 	
}
sql.close()</script></con:config></con:testStep><con:testStep type="groovy" name="VALIDATE_LSR_ORDER_PREORDER_LOCALEZE_DB_VALIDATION_OLD" id="d79f9ae2-d7fe-4c5e-8a7d-eb19b981bc12" disabled="true"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

def tc = testRunner.testCase
def oristatusori,orioidori,oriparentoidori,pon
boolean fail = true
String type = tc.getPropertyValue("TC_TYPE")
long timeout = Long.parseLong(tc.getPropertyValue("TIMEOUT"))
int ver = Integer.parseInt(tc.getPropertyValue("VER"))
String customer = tc.getPropertyValue("CUSTOMER")
String event = tc.getPropertyValue("STATUS")
String supplier = tc.getPropertyValue("ILEC")
String remarks = tc.getPropertyValue("REMARKS")

if(remarks.equals("localezesync") || remarks.equals("localezeasync")){
	pon=tc.getPropertyValue("LOCAL_NUMBER")
}    
else{
	pon=tc.getPropertyValue("PON");
}

String statuse = tc.getTestStepByName("STATUS").getPropertyValue(event);
log.info ("Status found in repository : " + statuse );
if (!statuse) {
	log.error("Status code : " + event + " not found in repository!");
	testRunner.fail("Expected Status code not found in repository");
}
//Get the DB string
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand('${#Project#DB_DRIVER}');
def dbString = context.expand('${#Project#CHPEP_DBSTRING}');
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);
for(long i =0 ; i&lt;timeout;i+=25){
	log.info("loop value = " + i) 
	  try{
		Thread.currentThread().sleep(2000);
	  }
	  catch(Exception e){}
        if(type=="LsrOrder")
          {
          	if(event.equals("abandon") || event.equals("suspend") || event.equals("resume") || event.equals("cancel")){
          		def fstatus = sql.firstRow("select last_action from SEA_LSR_TRANS where pon=${pon} and customerid=${customer} and supplier_name=${supplier} and ver=${ver} order by last_status_dt desc");
                    log.info("Message Type in DB :" + fstatus);  
                    log.info("Selected status Type in Repository :" + statuse);  
                    if (fstatus == null) { 
       	              log.info("Waiting of expected status in SEA_LSR_TRANS");
                    } 
                    else {
                           String oristatus=fstatus[0];
               	       log.info("Original status Type in DB :" + oristatus);
       	                 if(oristatus==statuse){       		
	  	                     i = timeout;
	  	                     fail = false;
	  	                     log.info ("Final status found in SEA_LSR_TRANS table: " + fstatus ); 
	  	                     tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" ) 
       	                 }
       	                 else {
       		                 log.info("Waiting of expected status in SEA_LSR_TRANS++++++++++++++++");
       	                 }
                     }
          	}
          	else{
          		def fstatus = sql.firstRow("select status from SEA_LSR_TRANS where pon=${pon} and customerid=${customer} and supplier_name=${supplier} and ver=${ver} order by updated_dt desc");
                    log.info("Message Type in DB :" + fstatus);  
                    log.info("Selected status Type in Repository :" + statuse);  
                    if (fstatus == null) { 
       	              log.info("Waiting of expected status in SEA_LSR_TRANS");
                    } 
                    else {
                           String oristatus=fstatus[0];
               	       log.info("Original status Type in DB :" + oristatus);
       	                 if(oristatus==statuse){       		
	  	                     i = timeout;
	  	                     fail = false;
	  	                     log.info ("Final status found in SEA_LSR_TRANS table: " + fstatus );  
	  	                     tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" ) 
       	                 }
       	                 else {
       		                 log.info("Waiting of expected status in SEA_LSR_TRANS++++++++++++++++");
       	                 }
                     }
          	}                
	      }
	   else
          {
                if(type=="LsrPreOrder")
                {
                     def fstatus = sql.firstRow("select status from SEA_LSR_PO_TRANS where txnum=${pon} and cust_name=${customer} and supplier_name=${supplier} order by updated_dt desc ");
                     log.info("Message Type in DB :" + fstatus);        
                     log.info("Selected status Type in Repository :" + statuse);  
                     if (fstatus == null) { 
       	              log.info("Waiting of expected status in SEA_LSR_PO_TRANS");
                      }
                     else {
               	   String oristatus=fstatus[0];
               	   log.info("Original status Type in DB :" + oristatus);
       	              if(oristatus==statuse){       		
	  	                   i = timeout;
	  	                   fail = false;
	  	                   log.info ("Final status found in SEA_LSR_PO_TRANS table: " + fstatus );  
	  	                   tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" ) 
       	                 }
       	              else {
       		               log.info("Waiting of expected status in SEA_LSR_PO_TRANS++++++++++++++++");
       	                 }
                    }
                }
                else
                { 
                	     if(event=="AvailableAndOwnedByYou")
                	     {
                		     def fstatus = sql.firstRow("select status from SEA_LOCALEZE_TRANS where servicekey=1510 and telephonenumber=1501460046 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");
                		     oristatusori=fstatus
                	          def oid = sql.firstRow("select oid from SEA_LOCALEZE_TRANS where servicekey=1510 and telephonenumber=1501460046 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");
                	          orioidori=oid
                	          def parent_oid = sql.firstRow("select parent_oid from SEA_LOCALEZE_TRANS where servicekey=1510 and telephonenumber=1501460046 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");                	          
                	          oriparentoidori=parent_oid
                		}
                		else
                		{
                			if(event=="Unavailable")
                			   {
                				def fstatus = sql.firstRow("select status from SEA_LOCALEZE_TRANS where servicekey=1510 and telephonenumber=7606332202 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");
                				oristatusori=fstatus
                	               def oid = sql.firstRow("select oid from SEA_LOCALEZE_TRANS where  servicekey=1510 and telephonenumber=7606332202 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");
                	               orioidori=oid
                	               def parent_oid = sql.firstRow("select parent_oid from SEA_LOCALEZE_TRANS where servicekey=1510 and telephonenumber=7606332202 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");                	               
                	               oriparentoidori=parent_oid
                			   }
                			else
                			   {
                			   	if(event=="TaxonomySuccessfull" || event=="ErrorResponseTQ"  )                			   	
                			   	      {
                			   	      	def fstatus = sql.firstRow("select status from SEA_LOCALEZE_TRANS where servicekey=1501 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");                	                  
                	                         oristatusori=fstatus
                	                         def oid = sql.firstRow("select oid from SEA_LOCALEZE_TRANS where servicekey=1501 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");                	                  
                	                         orioidori=oid
                	                         def parent_oid = sql.firstRow("select parent_oid from SEA_LOCALEZE_TRANS where servicekey=1501 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");                	                  
                	                         oriparentoidori=parent_oid
                			   	      	
                			   		 }
                			   	else
                			   	      { 
                			   	      	if(event=="SubscriptionsSuccessfull")
                			   	      	{
                			   	      		def fstatus = sql.firstRow("select status from SEA_LOCALEZE_TRANS where telephonenumber=7415649026 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");                	                  
                	                              oristatusori=fstatus
                	                              def oid = sql.firstRow("select oid from SEA_LOCALEZE_TRANS where telephonenumber=7415649026 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");                	                  
                	                              orioidori=oid
                	                              def parent_oid = sql.firstRow("select parent_oid from SEA_LOCALEZE_TRANS where telephonenumber=7415649026 and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");                	                  
                	                              oriparentoidori=parent_oid
                			                }
                			   	      	else
                			   	      	{
                			   	      		def fstatus = sql.firstRow("select status from SEA_LOCALEZE_TRANS where telephonenumber=${pon} and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");                	                  
                	                              oristatusori=fstatus
                	                              def oid = sql.firstRow("select oid from SEA_LOCALEZE_TRANS where telephonenumber=${pon} and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");                	                  
                	                              orioidori=oid
                	                              def parent_oid = sql.firstRow("select parent_oid from SEA_LOCALEZE_TRANS where telephonenumber=${pon} and cust_name=${customer} and supplier_name=${supplier} order by last_status_dt desc ");                	                  
                	                              oriparentoidori=parent_oid
                	                         }
                			   	      	
                	                      }                	                  
                                  }    
                          }
                         log.info("Message Type in DB :" + oristatusori);  
                         log.info("OID  in DB :" + orioidori);  
                         log.info("PARENT_OID  in DB :" + oriparentoidori); 
                         String oidori=orioidori[0];
                         String parent_oidori=oriparentoidori[0];
                         tc.setPropertyValue("OID", oidori);
                         tc.setPropertyValue("PARENT_OID", parent_oidori);                          
                         log.info("Selected status Type in Repository :" + statuse);  
                         if (oristatusori == null) { 
       	                       log.info("Waiting of expected status in SEA_LOCALEZE_TRANS");
                           }
                         else {
               	             String oristatus=oristatusori[0];
               	             log.info("Original status Type in DB :" + oristatus);
       	                       if(oristatus==statuse){       		
	  	                               i = timeout;
	  	                               fail = false;
	  	                               log.info ("Final status found in SEA_LOCALEZE_TRANS table: " + oristatusori );  
	  	                               tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" ) 
       	                       }
       	                       else {
       		                          log.info("Waiting of expected status in SEA_LOCALEZE_TRANS++++++++++++++++");
       	                       }
                            }            	
                 }
                }
 	     } 	     
if (fail) {
	testRunner.fail("MESSAGE_TYPE not received 1.");
	log.error("MESSAGE_TYPE not received 2");
	tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Fail" ) 	
}
sql.close();</script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>STATUS</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>LOCAL_NUMBER</con:name><con:value/></con:property><con:property><con:name>OID</con:name><con:value/></con:property><con:property><con:name>PARENT_OID</con:name><con:value/></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LSR_ORDER_PREORDER_DB_VALIDATION_ON_CH" searchProperties="true" id="a2ba0aad-5f07-490c-bb13-8cd0af012d7a" disabled="true"><con:settings/><con:testStep type="properties" name="REMARKS" id="6d0d2901-6480-456b-9dc5-6b60e2b295d0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>abandon</con:name><con:value>info:abandon</con:value></con:property><con:property><con:name>suspend</con:name><con:value>info:suspend</con:value></con:property><con:property><con:name>resume</con:name><con:value>info:resume</con:value></con:property><con:property><con:name>cancel</con:name><con:value>info:cancel</con:value></con:property><con:property><con:name>addressMatch</con:name><con:value>request:save,request:submit,addressMatch:receive</con:value></con:property><con:property><con:name>addressalternative</con:name><con:value>request:save,request:submit,addressAlternative:receive</con:value></con:property><con:property><con:name>addresserror</con:name><con:value>request:save,request:submit,addressError:receive</con:value></con:property><con:property><con:name>csr</con:name><con:value>request:save,request:submit,parsed_response:receive</con:value></con:property><con:property><con:name>loop</con:name><con:value>request:save,request:submit,response:receive</con:value></con:property><con:property><con:name>errorresponse</con:name><con:value>request:save,request:submit,error_response:receive</con:value></con:property><con:property><con:name>tnresponse</con:name><con:value>request:save,request:submit,response:receive</con:value></con:property><con:property><con:name>default</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>-Ack.xml-</con:name><con:value>new:save,new:submit,ack:receive</con:value></con:property><con:property><con:name>-Nack.xml-</con:name><con:value>new:save,new:submit,negack:receive</con:value></con:property><con:property><con:name>-AckFocSocBcn.xml-</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>-AckFocPiaDsrcn.xml-</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,provider_initiated_activity:receive,dsrcn:receive</con:value></con:property><con:property><con:name>-AckFocnonfatalFocPia.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,provider_initiated_activity:receive</con:value></con:property><con:property><con:name>-AckFocnonfatalFocJeop.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>-FocJeop.xml-</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>-FocSocBcn.xml-</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>-FocPiaSoc.xml-</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,provider_initiated_activity:receive,soc:receive</con:value></con:property><con:property><con:name>-Focsuperfatal.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive</con:value></con:property><con:property><con:name>-FocnonfatalFocJeopSoc.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>-FocnonfatalFocDsrcnPic.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,dsrcn:receive</con:value></con:property><con:property><con:name>-FocnonfatalFocStatusSocBcn.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>-Supp.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive</con:value></con:property><con:property><con:name>-SuppPiaSoc.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,provider_initiated_activity:receive,soc:receive</con:value></con:property><con:property><con:name>-SuppJeopSoc.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>-SuppDsrcnPic.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,dsrcn:receive</con:value></con:property><con:property><con:name>-SuppJeopDsrcn.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,dsrcn:receive</con:value></con:property><con:property><con:name>-Suppsuperfatal.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>-SuppnonfatalSupp.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive</con:value></con:property><con:property><con:name>-SuppnonfatalSuppJeop.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>-SuppnonfatalSuppfatal.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>-SuppnonfatalSuppPiaSoc.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,provider_initiated_activity:receive,soc:receive</con:value></con:property><con:property><con:name>(Ack.flow)</con:name><con:value>new:save,new:submit,ack:receive</con:value></con:property><con:property><con:name>(Nack.flow)</con:name><con:value>new:save,new:submit,negack:receive</con:value></con:property><con:property><con:name>(AckFocSoc.flow)</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive</con:value></con:property><con:property><con:name>(AckFocSocBcn.flow)</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(AckFocJeopSoc.flow)</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(AckFocnonfatal.flow)</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive</con:value></con:property><con:property><con:name>(AckFocJeopSocBcn.flow)</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(AckFocnonfatalFoc.flow)</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive</con:value></con:property><con:property><con:name>(AckFocnonfatalFocJeop.flow)</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>(AckFocnonfatalFocJeopSocBcn.flow)</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(FocSoc.flow)</con:name><con:value>new:save,new:submit,focaccept:receive,soc:receive</con:value></con:property><con:property><con:name>(FocnonfatalFocJeop.flow)</con:name><con:value>new:save,new:submit,focreject:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>(FocnonfatalFocJeopSoc.flow)</con:name><con:value>new:save,new:submit,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(FocnonfatalFocJeopSocBcn.flow)</con:name><con:value>new:save,new:submit,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(Soc.flow)</con:name><con:value>new:save,new:submit,soc:receive</con:value></con:property><con:property><con:name>(AckSupp.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive</con:value></con:property><con:property><con:name>(AckSuppSoc.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive</con:value></con:property><con:property><con:name>(AckSuppSocBcn.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(AckSuppJeopSoc.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(AckSuppnonfatal.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>(AckSuppJeopSocBcn.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(AckSuppnonfatalSuppJeopSoc.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(AckSuppnonfatalSuppJeopSocBcn.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(SuppSoc.flow)</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,soc:receive</con:value></con:property><con:property><con:name>(Suppfatal.flow)</con:name><con:value>supplement:save,supplement:submit,suppreject:receive</con:value></con:property><con:property><con:name>(SuppSocBcn.flow)</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(SuppJeopSoc.flow)</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(SuppnonfatalSupp.flow)</con:name><con:value>supplement:save,supplement:submit,suppreject:receive</con:value></con:property><con:property><con:name>(SuppnonfatalSuppJeop.flow)</con:name><con:value>supplement:save,supplement:submit,suppreject:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{Ack.flow}</con:name><con:value>new:save,new:submit,ack:receive</con:value></con:property><con:property><con:name>{Nack.flow}</con:name><con:value>new:save,new:submit,negack:receive</con:value></con:property><con:property><con:name>{AckFoc.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive</con:value></con:property><con:property><con:name>{AckFocSoc.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive</con:value></con:property><con:property><con:name>{AckFocJeop.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{AckFocfatal.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive</con:value></con:property><con:property><con:name>{AckFocSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{AckFocJeopSoc.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>{AckFocnonfatalFocJeop.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Dsrcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,dsrcn:receive</con:value></con:property><con:property><con:name>{Dsred.xml}</con:name><con:value>new:save,new:submit,ack:receive,dsred:receive</con:value></con:property><con:property><con:name>{Foc.flow}</con:name><con:value>new:save,new:submit,focaccept:receive</con:value></con:property><con:property><con:name>{FocSoc.flow}</con:name><con:value>new:save,new:submit,focaccept:receive,soc:receive</con:value></con:property><con:property><con:name>{FocJeop.flow}</con:name><con:value>new:save,new:submit,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{Focfatal.flow}</con:name><con:value>new:save,new:submit,focreject:receive</con:value></con:property><con:property><con:name>{FocSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{FocJeopSoc.flow}</con:name><con:value>new:save,new:submit,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>{Focsuperfatal.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive</con:value></con:property><con:property><con:name>{FocPsonSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocJeop.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocDsrcnPic.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,dsrcn:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocJeopSoc.xml}</con:name><con:value>new:save,new:submit,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocJeopSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocPsonSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocStatusSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Soc.flow}</con:name><con:value>new:save,new:submit,soc:receive</con:value></con:property><con:property><con:name>{AckSupp.flow}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive</con:value></con:property><con:property><con:name>{AckSuppSoc.flow}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive</con:value></con:property><con:property><con:name>{AckSuppJeop.flow}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{AckSuppfatal.flow}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>{Supp.flow}</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive</con:value></con:property><con:property><con:name>{SuppSoc.flow}</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,soc:receive</con:value></con:property><con:property><con:name>{SuppJeop.flow}</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{SuppJeopSoc.flow}</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSupp.flow}</con:name><con:value>supplement:save,supplement:submit,suppreject:receive</con:value></con:property><con:property><con:name>{Suppfatal.flow}</con:name><con:value>supplement:save,supplement:submit,suppreject:receive</con:value></con:property><con:property><con:name>{FocPic.xml}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{Focsuperfatal.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive</con:value></con:property><con:property><con:name>{FocStatusSocBcn.xml}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocPic.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocStatusSoc.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,status:receive,soc:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocJeop.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocSocBcnPic.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Status.xml}</con:name><con:value>new:save,new:submit,ack:receive,status:receive</con:value></con:property><con:property><con:name>{SuppSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive</con:value></con:property><con:property><con:name>{SuppPic.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{SuppSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppSocPic.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{SuppPiaSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,provider_initiated_activity:receive,soc:receive</con:value></con:property><con:property><con:name>{SuppJeopSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>{Suppnonfatal.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>{Suppsuperfatal.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>{SuppJeopSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppStatusSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppJeop.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppfatal.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppSocPic.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,soc:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppJeopSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppStatusSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,status:receive,soc:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocPsonSocBcn.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Dsrcn.xml}</con:name><con:value>new:save,new:submit,ack:receive,dsrcn:receive</con:value></con:property><con:property><con:name>{FocJeopSocBcn.xml}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Bhc_Status.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,batch_hot_cut:receive</con:value></con:property><con:property><con:name>{FocBhc_StatusSoc.xml}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,batch_hot_cut:receive,soc:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocStatusSocBcn.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Supp.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive</con:value></con:property><con:property><con:name>{SuppJeop.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{SuppPsonSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,status:receive,soc:receive</con:value></con:property><con:property><con:name>{SuppPsonSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppPia.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,provider_initiated_activity:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSupp.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>{Bhc_StatusSuppJeopSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,batch_hot_cut:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(AckFocnonfatalFocJeopSoc.flow)</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(Focnonfatal.flow)</con:name><con:value>new:save,new:submit,focreject:receive</con:value></con:property><con:property><con:name>(Supp.flow)</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive</con:value></con:property><con:property><con:name>(AckSuppJeop.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>(SuppnonfatalSuppJeopSoc.flow)</con:name><con:value>supplement:save,supplement:submit,suppreject:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(Suppnonfatal.flow)</con:name><con:value>supplement:save,supplement:submit,suppreject:receive</con:value></con:property><con:property><con:name>(SuppJeop.flow)</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>(AckSuppnonfatalSupp.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive</con:value></con:property><con:property><con:name>defaultsup</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(Foc.flow)</con:name><con:value>new:save,new:submit,focaccept:receive</con:value></con:property><con:property><con:name>(FocnonfatalFoc)</con:name><con:value>new:save,new:submit,focreject:receive,focaccept:receive</con:value></con:property><con:property><con:name>-SAck.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive</con:value></con:property><con:property><con:name>-SNack.xml-</con:name><con:value>supplement:save,supplement:submit,negack:receive</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="VALIDATE_LSR_ORDER_PREORDER_TABLES" id="376edb8e-9cbf-45cd-a198-925c5c9e620f"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver
def tc = testRunner.testCase

boolean fail = true
String statuses

int verreq = Integer.parseInt(tc.getPropertyValue("VER"))
String pon = tc.getPropertyValue("PON")
String ilec = tc.getPropertyValue("ILEC")
String ver = tc.getPropertyValue("HEADERVER")
String sheet = tc.getPropertyValue("TC_TYPE")
String event = tc.getPropertyValue("REMARKS")
String customerid = tc.getPropertyValue("CUSTOMER")

log.info("Query Input: PON=" + pon)
log.info("Query Input: HEADERVER=" + ver)
log.info("Query Input: ILEC=" + ilec)
log.info("Query Input: Customer ID=" + customerid)
log.info("Query Input: TYPE =" + sheet)
log.info("Query Input: REMARKS =" + event)
log.info("Query Input: VER =" + verreq)
 
statuses = tc.getTestStepByName("REMARKS").getPropertyValue(event)
if (!statuses) 
{
	log.error("Remarks code : " + event + " not found in repository!")
	testRunner.fail("Expected Event code not found in repository")
}
statusList = statuses.split(",")


com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" )
def dbDriver = context.expand( '${#Project#DB_DRIVER}' )
def dbString = context.expand( '${#Project#CH_DBSTRING}' )
def dbArray = dbString.split("@")
def dbUP = dbArray[0].split(":")
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1]
def userPass = dbUP[3].split("/")
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver)
if(sheet.equals("LsrOrder")){
	if(event.equals("abandon") || event.equals("suspend") || event.equals("resume") || event.equals("cancel")){
		sql.eachRow("select * from lsr_message where pon = ${pon} and customerid = ${customerid} and ilec = ${ilec} and ver=${verreq} and action=${event} order by datetime")
		{row -> dbResults <<  (row.TYPE + ":" + row.ACTION)}
		if(statusList == dbResults){
			log.info("Verification passed in lsr_message. Found Statuses: " + dbResults.join(","))
			tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Pass" )
		}
		else{
			log.error("Verification failed in lsr_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","))
			testRunner.fail("Verification failed in lsr_message.")
			tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Fail" )
		}
	}
	else{
		sql.eachRow("select * from lsr_message where pon = ${pon} and customerid = ${customerid} and ilec = ${ilec} and ver=${verreq} order by datetime")
		{row -> dbResults <<  (row.TYPE + ":" + row.ACTION)}
		if(statusList == dbResults){
			log.info("Verification passed in lsr_message. Found Statuses: " + dbResults.join(","))
			tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Pass" )
		}
		else{
			log.error("Verification failed in lsr_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","))
			testRunner.fail("Verification failed in lsr_message.")
			tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Fail" )
		}
	}
}
else{
	if(event.equals("addressMatch") || event.equals("addresserror") ||  event.equals("addressalternative")){
		sql.eachRow("select * from supplier_avq_message where pon = ${pon} and customerid = ${customerid} and ilec = ${ilec} order by datetime")
		{row -> dbResults <<  (row.TYPE + ":" + row.ACTION)}
		if(statusList == dbResults){
			log.info("Verification passed in supplier_avq_message. Found Statuses: " + dbResults.join(","))
			tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Pass" )
		}
		else{
			log.error("Verification failed in supplier_avq_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","))
			testRunner.fail("Verification failed in supplier_avq_message.")
			tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Fail" )
		}
	}
	else{
		if(event.equals("csr")){
			sql.eachRow("select * from csr_message where inqnum = ${pon} and customerid = ${customerid} and ilec = ${ilec} order by datetime")
			{row -> dbResults <<  (row.TYPE + ":" + row.ACTION)}
			if(statusList == dbResults){
				log.info("Verification passed in csr_message. Found Statuses: " + dbResults.join(","))
				tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Pass" )
			}
			else{
				log.error("Verification failed in csr_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","))
				testRunner.fail("Verification failed in csr_message.")
				tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Fail" )
			}
		}
		else{
			if(event.equals("loop")){
				sql.eachRow("select * from loopqual_message where txnum = ${pon} and customerid = ${customerid} and ilec = ${ilec} order by datetime")
				{row -> dbResults <<  (row.TYPE + ":" + row.ACTION)}
				if(statusList == dbResults){
					log.info("Verification passed in loopqual_message. Found Statuses: " + dbResults.join(","))
					tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Pass" )
				}
				else{
					log.error("Verification failed in loopqual_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","))
	                    testRunner.fail("Verification failed in loopqual_message.")
	                    tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Fail" )
				}
			}
			else{
				sql.eachRow("select * from lsr_preorder_nf_message where txnum = ${pon} and customerid = ${customerid} and ilec = ${ilec} order by datetime")
				{row -> dbResults <<  (row.TYPE + ":" + row.ACTION)}
				if((statuses.contains(dbResults[0])) && (statuses.contains(dbResults[1])) && (statuses.contains(dbResults[2]))){
					log.info("Verification passed in lsr_preorder_nf_message. Found Statuses: " + dbResults.join(","))
					tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Pass" )
				}
				else{
					log.error("Verification failed in lsr_preorder_nf_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","))
					testRunner.fail("Verification failed in lsr_preorder_nf_message.")
					tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Fail" )
				}
			}
		}
	}
}
sql.close()]]></script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PN_NOTIFICATION_DB_VALIDATION_ON_CH" searchProperties="true" disabled="true" id="7ada811a-cb2f-4495-9a5a-e372782d0ed8"><con:settings/><con:testStep type="properties" name="REMARKS" id="33382a5d-41be-4677-b61f-4900e44bf754"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ATTFLOW</con:name><con:value>ATT:911-111-1119</con:value></con:property><con:property><con:name>ATTSEFLOW</con:name><con:value>ATTSE:199-899-9801</con:value></con:property><con:property><con:name>QWESTFLOW</con:name><con:value>QWEST:999-993-0111</con:value></con:property><con:property><con:name>FPCFLOW</con:name><con:value>FPC:777-222-5508</con:value></con:property><con:property><con:name>FRONTIERFLOW</con:name><con:value>Frontier:787-228-3383</con:value></con:property><con:property><con:name>VZWFLOW</con:name><con:value>VZW:111-111-1116</con:value></con:property><con:property><con:name>VZEFLOW</con:name><con:value>VZE:111-344-9999</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="VALIDATE_PN_NOTIFICATION" id="f6601646-94eb-4606-a0b7-468cf1421cb3"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver
def tc = testRunner.testCase

boolean fail = true
String statuses

String sheet = tc.getPropertyValue("TC_TYPE")
String wtn = tc.getPropertyValue("WTN")
String customerid = tc.getPropertyValue("CUSTOMER")
String ilec = tc.getPropertyValue("ILEC")
String event = tc.getPropertyValue("REMARKS")


log.info("Query Input: TYPE =" + sheet)
log.info("Query Input: WTN=" + wtn)
log.info("Query Input: Customer ID=" + customerid)
log.info("Query Input: ILEC=" + ilec)
log.info("Query Input: REMARKS =" + event)

 
statuses = tc.getTestStepByName("REMARKS").getPropertyValue(event)
if (!statuses) 
{
	log.error("Remarks code : " + event + " not found in repository!")
	testRunner.fail("Expected Event code not found in repository")
}
statusList = statuses.split(",")


com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" )
def dbDriver = context.expand( '${#Project#DB_DRIVER}' )
def dbString = context.expand( '${#Project#CH_DBSTRING}' )
def dbArray = dbString.split("@")
def dbUP = dbArray[0].split(":")
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1]
def userPass = dbUP[3].split("/")
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver)
if(sheet.equals("Pn_Notification")){
		sql.eachRow("select * from PN_NOTIFICATION_MESSAGE where WTN = ${wtn} and customerid = ${customerid} and ilec = ${ilec}  and rownum &lt; 2 order by datetime desc")
		{row -> dbResults &lt;&lt;  (row.ILEC + ":" + row.WTN)}
		if(statusList == dbResults){
			log.info("Verification passed in PN_NOTIFICATION_MESSAGE. Found Statuses: " + dbResults.join(","))
			tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Pass" )
		}
		else{
			log.error("Verification failed in lsr_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","))
			testRunner.fail("Verification failed in PN_NOTIFICATION_MESSAGE.")
			tc.setPropertyValue("LSR_QA_VALIDATION_FLAG" , "Fail" )
		}
}
sql.close()</script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>WTN</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RESPONSE_MESSAGE_QUEUE_FOR_PN" searchProperties="true" disabled="true" id="3d1e6e84-1a2c-470c-8d14-8ff295f2b325"><con:settings/><con:testStep type="properties" name="EVENTCHANNELNAME" id="c9d99d1a-e806-4ede-9df4-6e3bd32c5d34"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ATTORDER</con:name><con:value>NeuStar.lsr_order.ATT.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>ATTSEORDER</con:name><con:value>NeuStar.lsr_order.ATTSE.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>QWESTORDER</con:name><con:value>NeuStar.lsr_order.QWEST.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>VZEORDER</con:name><con:value>NeuStar.lsr_order.VZE.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>VZWORDER</con:name><con:value>NeuStar.lsr_order.VZW.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>FRONTIERORDER</con:name><con:value>NeuStar.lsr_order.Frontier.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>FPCORDER</con:name><con:value>NeuStar.lsr_order.FPC.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>CENTURYLINKORDER</con:name><con:value>NeuStar.lsr_order.CenturyLink.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>ATTPREORDER</con:name><con:value>NeuStar.lsr_preorder.ATT.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>ATTSEPREORDER</con:name><con:value>NeuStar.lsr_preorder.ATTSE.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>QWESTPREORDER</con:name><con:value>NeuStar.lsr_preorder.QWEST.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>VZEPREORDER</con:name><con:value>NeuStar.lsr_preorder.VZE.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>VZWPREORDER</con:name><con:value>NeuStar.lsr_preorder.VZW.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>FRONTIERPREORDER</con:name><con:value>NeuStar.lsr_preorder.Frontier.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>FPCPREORDER</con:name><con:value>NeuStar.lsr_preorder.FPC.LSOG9.EventChannel_</con:value></con:property><con:property><con:name>CENTURYLINKPREORDER</con:name><con:value>NeuStar.lsr_preorder.CenturyLink.LSOG10.EventChannel_</con:value></con:property><con:property><con:name>LOCALEZE</con:name><con:value>NeuStar.online_business_listing.Localeze.1_0.EventChannel_</con:value></con:property><con:property><con:name>Intrado</con:name><con:value>NeuStar.E911_Request.Intrado.2_0.EventChannel_</con:value></con:property><con:property><con:name>Schofield</con:name><con:value>NeuStar.E911_Request.Schofield.1_0.EventChannel_</con:value></con:property><con:property><con:name>IntradoI2</con:name><con:value>NeuStar.E911_Request.IntradoI2.I2.EventChannel_</con:value></con:property><con:property><con:name>BHNLSR</con:name><con:value>NeuStar.lsr_order.BHN_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>BHNCSR</con:name><con:value>NeuStar.lsr_preorder.BHN_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>EPBLSR</con:name><con:value>NeuStar.lsr_order.EPB_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>EPBCSR</con:name><con:value>NeuStar.lsr_preorder.EPB_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>HAWAIITELLSR</con:name><con:value>NeuStar.lsr_order.HAWAIITEL.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>HAWAIITELCSR</con:name><con:value>NeuStar.lsr_preorder.HAWAIITEL.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>MCCLSR</con:name><con:value>NeuStar.lsr_order.MCC_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>MCCCSR</con:name><con:value>NeuStar.lsr_preorder.MCC_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>PEERLESSLSR</con:name><con:value>NeuStar.lsr_order.PEERLESS.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>PEERLESSCSR</con:name><con:value>NeuStar.lsr_preorder.PEERLESS.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>QWESTCLECLSR</con:name><con:value>NeuStar.lsr_order.QWESTCLEC.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>QWESTCLECCSR</con:name><con:value>NeuStar.lsr_preorder.QWESTCLEC.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>RCNLSR</con:name><con:value>NeuStar.lsr_order.RCN_RECV.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>RCNCSR</con:name><con:value>NeuStar.lsr_preorder.RCN_RECV.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>TWCLSR</con:name><con:value>NeuStar.lsr_order.TWC_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>TWCCSR</con:name><con:value>NeuStar.lsr_preorder.TWC_COMM.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>WOWLSR</con:name><con:value>NeuStar.lsr_order.WOW.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>WOWCSR</con:name><con:value>NeuStar.lsr_preorder.WOW.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>YMAXLSR</con:name><con:value>NeuStar.lsr_order.YMAX_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>YMAXCSR</con:name><con:value>NeuStar.lsr_preorder.YMAX_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>VNGELSR</con:name><con:value>NeuStar.lsr_order.VNGE_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>VNGECSR</con:name><con:value>NeuStar.lsr_preorder.VNGE_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>WAVELSR</con:name><con:value>NeuStar.lsr_order.WAVE_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>WAVECSR</con:name><con:value>NeuStar.lsr_preorder.WAVE_PROD.LSOG6.EventChannel_</con:value></con:property><con:property><con:name>ATTPNORDER</con:name><con:value>NeuStar.lsr_order.ATT.LSOG9.PN_</con:value></con:property><con:property><con:name>ATTSEPNORDER</con:name><con:value>NeuStar.lsr_order.ATTSE.LSOG9.PN_</con:value></con:property><con:property><con:name>QWESTPNORDER</con:name><con:value>NeuStar.lsr_order.QWEST.LSOG10.PN_</con:value></con:property><con:property><con:name>VZWPNORDER</con:name><con:value>NeuStar.lsr_order.VZW.LSOG9.PN_</con:value></con:property><con:property><con:name>VZEPNORDER</con:name><con:value>NeuStar.lsr_order.VZE.LSOG9.PN_</con:value></con:property><con:property><con:name>FPCPNORDER</con:name><con:value>NeuStar.lsr_order.FPC.LSOG9.PN_</con:value></con:property><con:property><con:name>FRONTIERPNORDER</con:name><con:value>NeuStar.lsr_order.Frontier.LSOG9.PN_</con:value></con:property><con:property><con:name>HAWAIITELASR</con:name><con:value>NeuStar.receive.asr_order.asr_order.HAWAIITEL.ASOG.EventChannel_</con:value></con:property><con:property><con:name>BHNPRODASR</con:name><con:value>NeuStar.receive.asr_order.asr_order.BHN_PROD.ASOG.EventChannel_</con:value></con:property><con:property><con:name>TWCCOMMASR</con:name><con:value>NeuStar.receive.asr_order.asr_order.TWC_COMM.ASOG.EventChannel_</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="EVENTCHANNELSCRIPT" id="c3c1bdaf-5804-473a-ad4f-136d3707ac6e"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver
def tc = testRunner.testCase
String newpon
boolean fail = true
String pon = tc.getPropertyValue("PON")
String customer = tc.getPropertyValue("CUSTOMER")
String event = tc.getPropertyValue("CHANNELNAME")
String numberofraw = tc.getPropertyValue("RESRAWINRESQUE")
String oid = tc.getPropertyValue("OID")
if(pon.equals("")){
	newpon = '%'+oid+'%'
}
else{
	newpon = '%'+pon+'%'
}
log.info ("CUSTOMER: " + customer )
log.info ("CHANNELNAME: " + event )
log.info ("RESRAWINRESQUE: " + numberofraw )
log.info ("NEWPON: " + newpon )

def eventchannelold = tc.getTestStepByName("EVENTCHANNELNAME").getPropertyValue(event)
def eventchannel=eventchannelold+customer
if (!eventchannel) {
	log.error("Remarks code : " + event + " not found in repository!")
	testRunner.fail("Expected Event code not found in repository")
}
tc.setPropertyValue("PON",newpon)
tc.setPropertyValue("CHANNELNAME",eventchannel)
log.info ("NEWCHANNELNAME: " + eventchannel )</script></con:config></con:testStep><con:testStep type="jdbc" name="VALIDATE_RESPONSE_MESSAGE_QUEUE" id="eb44bf6e-a68d-4288-84ac-6d4333b2b2f5"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#DB_DRIVER}</con:driver><con:connectionString>${#Project#CH_DBSTRING}</con:connectionString><con:query>select count(*) 
from RESPONSEMESSAGEQUEUE 
where CUSTOMERID =:CUSTOMER 
and CHANNELNAME =:CHANNELNAME 
and MESSAGE like :PON
AND ROWNUM &lt; 3
order by ARRIVALTIME desc</con:query><con:assertion type="XPath Match" name="XPath Match" id="08c8a641-0cf4-4038-80ad-62e2360e939c"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]</path><content>${#TestCase#RESRAWINRESQUE}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Raw Verification" id="bed6f5cb-8db6-4ae2-be9c-00b4aa5d2be8"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder;

def holder = new XmlHolder(messageExchange.responseContentAsXml);
log.info("RESPONSEMESSAGEQUEUE Table Response: " + holder.getDomNode("//Results"));
log.info("RESPONSEMESSAGEQUEUE Table Response Node Value: " + holder.getNodeValue("//Results/ResultSet[1]/Row[1]/COUNT[1]"));
//def response=tc.getPropertyValue("RESRAWINRESQUE")
//def NodeValue = holder.getNodeValue("//Results/ResultSet[1]/Row[1]/COUNT[1]")
//if(response=NodeValue)
//{
//	log.info("ResponseMessageQueueVerification is Done")
//	log.info("Actaul value:"+response+ "and Expected Value:"+NodeValue)
//}</scriptText></con:configuration></con:assertion><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property></con:properties></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value/></con:property><con:property><con:name>OID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LOCALEZE_DB_VALIDATION" searchProperties="true" id="feff00fa-ff3a-4577-869c-70e49ac8f992" disabled="true"><con:settings/><con:testStep type="properties" name="STATUS" id="f7bec49f-ca15-42f3-9507-044fe5a27e27"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source/><con:properties><con:property><con:name>NEWSTATUS</con:name><con:value>new</con:value></con:property><con:property><con:name>ACKSTATUS</con:name><con:value>ack</con:value></con:property><con:property><con:name>NEGACKSTATUS</con:name><con:value>negack</con:value></con:property><con:property><con:name>FOCACCEPTSTATUS</con:name><con:value>focaccept</con:value></con:property><con:property><con:name>FOCREJECTSTATUS</con:name><con:value>focreject</con:value></con:property><con:property><con:name>JEOPARDYSTATUS</con:name><con:value>jeopardy</con:value></con:property><con:property><con:name>SOCSTATUS</con:name><con:value>soc</con:value></con:property><con:property><con:name>BCNSTATUS</con:name><con:value>billing_completion</con:value></con:property><con:property><con:name>DSRCNSTATUS</con:name><con:value>dsrcn</con:value></con:property><con:property><con:name>PIASTATUS</con:name><con:value>provider_initiated_activity</con:value></con:property><con:property><con:name>PICSTATUS</con:name><con:value>provider_initiated_cancel</con:value></con:property><con:property><con:name>INFOSTATUS</con:name><con:value>info</con:value></con:property><con:property><con:name>SUPPSTATUS</con:name><con:value>supplement</con:value></con:property><con:property><con:name>SUPPACCEPTSTATUS</con:name><con:value>suppaccept</con:value></con:property><con:property><con:name>SUPPREJECTSTATUS</con:name><con:value>suppreject</con:value></con:property><con:property><con:name>STASTATUS</con:name><con:value>status</con:value></con:property><con:property><con:name>BHCSTATUS</con:name><con:value>batch_hot_cut</con:value></con:property><con:property><con:name>DSREDSTATUS</con:name><con:value>dsred</con:value></con:property><con:property><con:name>ADDRESSALTERNATIVESTATUS</con:name><con:value>addressAlternative</con:value></con:property><con:property><con:name>MULTIPLERESPONSESTATUS</con:name><con:value>Multiple_response</con:value></con:property><con:property><con:name>ADDRESSERRORSTATUS</con:name><con:value>addressError</con:value></con:property><con:property><con:name>RESPONSESTATUS</con:name><con:value>response</con:value></con:property><con:property><con:name>ERRORSTATUS</con:name><con:value>error_response</con:value></con:property><con:property><con:name>ADDRESSMATCHSTATUS</con:name><con:value>addressMatch</con:value></con:property><con:property><con:name>PARSEDRESPONSESTATUS</con:name><con:value>parsed_response</con:value></con:property><con:property><con:name>UNPARSEDRESPONSESTATUS</con:name><con:value>unparsed_response</con:value></con:property><con:property><con:name>SuccessfulPost</con:name><con:value>SuccessfulPost</con:value></con:property><con:property><con:name>Post_Error</con:name><con:value>Post_Error</con:value></con:property><con:property><con:name>PostWithErrorValidator</con:name><con:value>PostWithErrorValidator</con:value></con:property><con:property><con:name>ErrorResponse</con:name><con:value>ErrorResponse</con:value></con:property><con:property><con:name>Available_Listing</con:name><con:value>Available_Listing</con:value></con:property><con:property><con:name>AvailableAndOwnedByYou</con:name><con:value>AvailableAndOwnedByYou</con:value></con:property><con:property><con:name>Unavailable</con:name><con:value>Unavailable</con:value></con:property><con:property><con:name>SubscriptionsSuccessfull</con:name><con:value>SubscriptionsSuccessfull</con:value></con:property><con:property><con:name>SubscriptionsError</con:name><con:value>SubscriptionsError</con:value></con:property><con:property><con:name>TaxonomySuccessfull</con:name><con:value>TaxonomySuccessfull</con:value></con:property><con:property><con:name>ErrorResponseTQ</con:name><con:value>ErrorResponse</con:value></con:property><con:property><con:name>Check_Availability_Error</con:name><con:value>Check_Availability_Error</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="VALIDATE_LOCALEZE_TABLES" id="926c11fe-90eb-41a7-8ad6-46399d69f2e0"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver
def tc = testRunner.testCase;

boolean fail = true

long timeout= Long.parseLong(tc.getPropertyValue("TIMEOUT"))
String oid = tc.getPropertyValue("OID")
String event = tc.getPropertyValue("STATUS")
String supplier = tc.getPropertyValue("ILEC")
String customer = tc.getPropertyValue("CUSTOMER")
String parent_oid = tc.getPropertyValue("PARENT_OID")

log.info ("OID: " + oid )
log.info ("EXPECTEDSTATUS: " + event )
log.info ("SUPPLIER: " + supplier )
log.info ("TIMEOUT: " + timeout )
log.info ("CUSTOMER: " + customer )
log.info ("PARENT_OID: " + parent_oid )

String statuse = tc.getTestStepByName("STATUS").getPropertyValue(event)

if (!statuse){
	log.error("Remarks code : " + event + " not found in repository!")
	testRunner.fail("Expected Event code not found in repository")
}

com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" )
def dbDriver = context.expand('${#Project#DB_DRIVER}')
def dbString = context.expand('${#Project#CHPEP_DBSTRING}')
def dbArray = dbString.split("@")
def dbUP = dbArray[0].split(":")
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1]
def userPass = dbUP[3].split("/")
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver)

for(long i =0 ; i<timeout;i+=1000){
	try{
		Thread.currentThread().sleep(2000)
	}
	catch(Exception e){}
	def fstatus = sql.firstRow("select status from SEA_LOCALEZE_ORDER where oid=${parent_oid} and cust_name=${customer} and supplier_name=${supplier} order by created_dt desc")
	def fstatuss = sql.firstRow("select event_code from SEA_LOCALEZE_TXEVENT_HISTORY where parent_oid=${parent_oid} and cust_name=${customer} order by created_dt desc")
	def oid_new = sql.firstRow("select oid from SEA_LOCALEZE_TXEVENT_HISTORY where parent_oid=${parent_oid} and cust_name=${customer} order by created_dt desc")
	log.info("Message Type in DB :" + fstatus)
	log.info("Message Type in DB :" + fstatuss)
	log.info("OIDNEW Type in DB :" + oid_new)
	log.info("Selected status Type in Prope :" + statuse)
	String orioid=oid_new[0]
	def message = sql.firstRow("select messagetype from SEA_LOCALEZE_MESSAGE where eventoid=${orioid} and cust_name=${customer} and supplier_name=${supplier} order by created_dt desc")                
	log.info("ORIOID Type in DB :" + orioid)
	log.info("Response Type in DB :" + message)
	if((fstatus == null) && (fstatuss == null) && (message == null)){
		log.info("Waiting of expected status in ALL LOCALEZE TABLES")
	}
	else{
		String oristatus=fstatus[0]
		String oristatuss=fstatuss[0]
		String oristatusss=message[0]
		log.info("Original status Type in Prope :" + oristatus)
		log.info("Original statusnew Type in Prope :" + oristatuss)
		log.info("Original statusnew Type in Prope :" + oristatusss)
		if((oristatus==statuse) && (oristatuss==statuse) && (oristatusss.equals("response"))){
			i = timeout
			fail = false
			log.info ("Final status found in ALL LOCALEZE table: " + fstatus + fstatuss + message )
			tc.setPropertyValue("LOCALEZE_VALIDATION_FLAG" , "Pass" )			
		}
		else{
			log.info("Waiting of expected status in ALL LOCALEZE++++++++++++++++")
			tc.setPropertyValue("LOCALEZE_VALIDATION_FLAG" , "Fail" )
		}
	}	
}
if(fail){	
	testRunner.fail("MESSAGE_TYPE not received 1.")
	log.error("MESSAGE_TYPE not received 2")
	tc.setPropertyValue("LOCALEZE_VALIDATION_FLAG" , "Pass" )
}
sql.close()]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="c6df6d9a-aa4a-4cce-a69a-36b53654ed45" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;
long timeout= Long.parseLong(tc.getPropertyValue("TIMEOUT"))
String customer = tc.getPropertyValue("CUSTOMER");
String event = tc.getPropertyValue("STATUS");
String supplier = tc.getPropertyValue("ILEC");
String oid = tc.getPropertyValue("OID");
String parent_oid = tc.getPropertyValue("PARENT_OID");
log.info ("TIMEOUT: " + timeout );
log.info ("CUSTOMER: " + customer );
log.info ("EXPECTEDSTATUS: " + event );
log.info ("SUPPLIER: " + supplier );
log.info ("OID: " + oid );
log.info ("PARENT_OID: " + parent_oid );

String statuse = tc.getTestStepByName("STATUS").getPropertyValue(event);
log.info ("Status: " + statuse );
if (!statuse) {
	log.error("Remarks code : " + event + " not found in repository!");
	testRunner.fail("Expected Event code not found in repository");
}
//Get the DB string
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand('${#Project#DB_DRIVER}');
def dbString = context.expand('${#Project#CHPEP_DBSTRING}');
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");

def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);

for(long i =0 ; i<timeout;i+=1000){
	  try{
		Thread.currentThread().sleep(2000);
	  }
	           catch(Exception e){}           
                def fstatus = sql.firstRow("select status from SEA_LOCALEZE_ORDER where oid=${parent_oid} and cust_name=${customer} and supplier_name=${supplier} order by created_dt desc");
                def fstatuss = sql.firstRow("select event_code from SEA_LOCALEZE_TXEVENT_HISTORY where parent_oid=${parent_oid} and cust_name=${customer} order by created_dt desc");
                def oid_new = sql.firstRow("select oid from SEA_LOCALEZE_TXEVENT_HISTORY where parent_oid=${parent_oid} and cust_name=${customer} order by created_dt desc");
                log.info("Message Type in DB :" + fstatus);  
                log.info("Message Type in DB :" + fstatuss);  
                log.info("OIDNEW Type in DB :" + oid_new); 
                log.info("Selected status Type in Prope :" + statuse);  
                String orioid=oid_new[0];
                def message = sql.firstRow("select messagetype from SEA_LOCALEZE_MESSAGE where eventoid=${orioid} and cust_name=${customer} and supplier_name=${supplier} order by created_dt desc");                
                log.info("ORIOID Type in DB :" + orioid);
                log.info("Response Type in DB :" + message);           
                if ((fstatus == null) && (fstatuss == null) && (message == null)) { 
       	              log.info("Waiting of expected status in ALL LOCALEZE TABLES");
                   } 
                else {
                         String oristatus=fstatus[0];
                         String oristatuss=fstatuss[0];
                         String oristatusss=message[0];
               	     log.info("Original status Type in Prope :" + oristatus);
               	     log.info("Original statusnew Type in Prope :" + oristatuss);
               	     log.info("Original statusnew Type in Prope :" + oristatusss);
       	               if((oristatus==statuse) && (oristatuss==statuse) && (oristatusss.equals("response"))){       		
	  	                     i = timeout;
	  	                     fail = false;
	  	                     log.info ("Final status found in ALL LOCALEZE table: " + fstatus + fstatuss + message );  
       	                 }
       	               else {
       		                 log.info("Waiting of expected status in ALL LOCALEZE++++++++++++++++");
       	                 }
                     }	  	   
    }
//} 	     
if (fail) {
	testRunner.fail("MESSAGE_TYPE not received 1.");
	log.error("MESSAGE_TYPE not received 2");
	
}
sql.close();]]></script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>STATUS</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>OID</con:name><con:value/></con:property><con:property><con:name>PARENT_OID</con:name><con:value/></con:property><con:property><con:name>LOCALEZE_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="E911_DB_VALIDATION" searchProperties="true" id="31b415f4-109c-46e4-857e-134c45c94f54" disabled="true"><con:settings/><con:testStep type="properties" name="REMARKS" id="516b3a01-94cd-43a5-aa23-703b8763ef5f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cancel</con:name><con:value>info:cancel</con:value></con:property><con:property><con:name>abandon</con:name><con:value>info:abandon</con:value></con:property><con:property><con:name>suspend</con:name><con:value>info:suspend</con:value></con:property><con:property><con:name>resume</con:name><con:value>info:resume</con:value></con:property><con:property><con:name>InsertIntrado</con:name><con:value>request:null:save,InsertRequest:null:submit,ConfirmationResponse:Forwarded:receive,ConfirmationResponse:AssumedConfirmed:receive,ConfirmationResponse:Confirmed:receive,ConfirmationResponse:CorrectedForwarded:receive,ErrorResponse:Error:receive,RejectResponse:DeletedForwarded:receive,RejectResponse:ErrorDeleted:receive,OutstandingErrorsNotification:OutstandingErrorsFile:receive,RejectResponse:Referred:receive</con:value></con:property><con:property><con:name>ChangeIntrado</con:name><con:value>request:null:save,ChangeRequest:null:submit,ConfirmationResponse:Forwarded:receive,ConfirmationResponse:AssumedConfirmed:receive,ConfirmationResponse:Confirmed:receive,ConfirmationResponse:CorrectedForwarded:receive,ErrorResponse:Error:receive,RejectResponse:DeletedForwarded:receive,RejectResponse:ErrorDeleted:receive,OutstandingErrorsNotification:OutstandingErrorsFile:receive,RejectResponse:Referred:receive</con:value></con:property><con:property><con:name>DeleteIntrado</con:name><con:value>request:null:save,DeleteRequest:null:submit,ConfirmationResponse:Forwarded:receive,ConfirmationResponse:AssumedConfirmed:receive,ConfirmationResponse:Confirmed:receive,ConfirmationResponse:CorrectedForwarded:receive,ErrorResponse:Error:receive,RejectResponse:DeletedForwarded:receive,RejectResponse:ErrorDeleted:receive,OutstandingErrorsNotification:OutstandingErrorsFile:receive,RejectResponse:Referred:receive</con:value></con:property><con:property><con:name>MigrateIntrado</con:name><con:value>request:null:save,MigrateRequest:null:submit,ConfirmationResponse:Forwarded:receive,ConfirmationResponse:AssumedConfirmed:receive,ConfirmationResponse:Confirmed:receive,ConfirmationResponse:CorrectedForwarded:receive,ErrorResponse:Error:receive,RejectResponse:DeletedForwarded:receive,RejectResponse:ErrorDeleted:receive,OutstandingErrorsNotification:OutstandingErrorsFile:receive,RejectResponse:Referred:receive</con:value></con:property><con:property><con:name>UnlockIntrado</con:name><con:value>request:null:save,UnlockRequest:null:submit,ConfirmationResponse:Forwarded:receive,ConfirmationResponse:AssumedConfirmed:receive,ConfirmationResponse:Confirmed:receive,ConfirmationResponse:CorrectedForwarded:receive,ErrorResponse:Error:receive,RejectResponse:DeletedForwarded:receive,RejectResponse:ErrorDeleted:receive,OutstandingErrorsNotification:OutstandingErrorsFile:receive,RejectResponse:Referred:receive</con:value></con:property><con:property><con:name>NenaIntradoSOI</con:name><con:value>SOIFile:&lt;FILENAME>,ConfirmationFile:confirmation_fwd.conf,SPConfirmationFile:sp_confirmation_assumed.conf,SPConfirmationFile:sp_confirmation_confirmed.conf,SPConfirmationFile:sp_confirmation_correctfwd.conf,SPConfirmationFile:sp_confirmation_error.txt,DailyErrorCorrectionFile:decc_del_fwd.txt,DailyErrorCorrectionFile:decc_err_del.txt,OustandingErrorsFile:outstanding.txt,ReferredFile:referred_reject.txt</con:value></con:property><con:property><con:name>InsertSchofield</con:name><con:value>request:null:save,InsertRequest:null:submit,ConfirmationResponse:Confirmed:receive,RejectResponse:Reject:receive,StatusResponse:Status:receive,ErrorResponse:Error:receive</con:value></con:property><con:property><con:name>ChangeSchofield</con:name><con:value>request:null:save,ChangeRequest:null:submit,ConfirmationResponse:Confirmed:receive,RejectResponse:Reject:receive,StatusResponse:Status:receive,ErrorResponse:Error:receive</con:value></con:property><con:property><con:name>DeleteSchofield</con:name><con:value>request:null:save,DeleteRequest:null:submit,ConfirmationResponse:Confirmed:receive,RejectResponse:Reject:receive,StatusResponse:Status:receive,ErrorResponse:Error:receive</con:value></con:property><con:property><con:name>MigrateSchofield</con:name><con:value>request:null:save,MigrateRequest:null:submit,ConfirmationResponse:Confirmed:receive,RejectResponse:Reject:receive,StatusResponse:Status:receive,ErrorResponse:Error:receive</con:value></con:property><con:property><con:name>UnlockSchofield</con:name><con:value>request:null:save,UnlockRequest:null:submit,ConfirmationResponse:Confirmed:receive,RejectResponse:Reject:receive,StatusResponse:Status:receive,ErrorResponse:Error:receive</con:value></con:property><con:property><con:name>ValidateSchofield</con:name><con:value>request:null:save,ValidateRequest:null:submit,ConfirmationResponse:Confirmed:receive,RejectResponse:Reject:receive,StatusResponse:Status:receive,ErrorResponse:Error:receive</con:value></con:property><con:property><con:name>NenaSchofieldSOIIVC</con:name><con:value>SOIFile:&lt;FILENAME>,InternalValidationConfirmation:ivc_confirm_Schofield.ivc,InternalValidationConfirmation:ivc_reject_Schofield.ivc,InternalValidationConfirmation:ivc_status_Schofield.ivc,InternalValidationConfirmation:ivc_Error_Schofield.ivc</con:value></con:property><con:property><con:name>NenaSchofieldSOIREC</con:name><con:value>SOIFile:&lt;FILENAME>,ReceivedConfirmation:rec_confirm_Schofield.rec,ReceivedConfirmation:rec_reject_Schofield.rec,ReceivedConfirmation:rec_status_Schofield.rec,ReceivedConfirmation:rec_Error_Schofield.rec</con:value></con:property><con:property><con:name>NenaSchofieldSOIDAT</con:name><con:value>SOIFile:&lt;FILENAME>,DailyErrorCordattion:dat_confirm_Schofield.dat,DailyErrorCordattion:dat_reject_Schofield.dat,DailyErrorCordattion:dat_status_Schofield.dat,DailyErrorCordattion:dat_Error_Schofield.dat</con:value></con:property><con:property><con:name>NenaSchofieldSOIERR</con:name><con:value>SOIFile:&lt;FILENAME>,DailyErrorCorerrtion:err_confirm_Schofield.err,DailyErrorCorerrtion:err_reject_Schofield.err,DailyErrorCorerrtion:err_status_Schofield.err,DailyErrorCorerrtion:err_Error_Schofield.err</con:value></con:property><con:property><con:name>IntradoI2Success</con:name><con:value>aliupdate:submit,aliupdate-success:receive</con:value></con:property><con:property><con:name>IntradoI2Error</con:name><con:value>aliupdate:submit,aliupdate-error:receive</con:value></con:property><con:property><con:name>AliUpdateSuccess</con:name><con:value>aliupdate-success</con:value></con:property><con:property><con:name>AliUpdateError</con:name><con:value>aliupdate-error</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_CALL_VALIDATION" id="13633bf9-e9e8-4bf9-88a3-53ca05bdbb47"><con:settings/><con:config><script>def tc=testRunner.testCase
def run=testRunner

String event = tc.getPropertyValue("STATUS")
String ilec = tc.getPropertyValue("ILEC")

if(event.equals("abandon") || event.equals("suspend") || event.equals("resume") || event.equals("cancel")){
	log.info event
	run.runTestStepByName("E911_MESSAGE_VALIDATION")
}
else{
	log.info event
	if(ilec.equals("IntradoI2")){
		run.runTestStepByName("NENA_MESSAGE_AND_E911_TRANS_VALIDATION")
     	run.runTestStepByName("E911_MESSAGE_AND_E911_TXEVENT_HISTORY_VALIDATION")
     	run.runTestStepByName("CH_ORDER_VALIDATION")
	}
	else{
		run.runTestStepByName("E911_MESSAGE_AND_E911_TXEVENT_HISTORY_VALIDATION")
     	run.runTestStepByName("NENA_MESSAGE_AND_E911_TRANS_VALIDATION")
	}
}
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="groovy" name="E911_MESSAGE_AND_E911_TXEVENT_HISTORY_VALIDATION" id="a38f28bb-fa73-4be2-ae5e-d47c4e400390"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;


//Query Inputs
String ordernumber = tc.getPropertyValue("ORDERNUMBER");
String ver = tc.getPropertyValue("HEADERVER");
String phone = tc.getPropertyValue("PHONE")
String customerid = tc.getPropertyValue("CUSTOMER");
String ilec = tc.getPropertyValue("ILEC");
String sheet = tc.getPropertyValue("TC_TYPE");
String event = tc.getPropertyValue("REMARKS");
String oid = tc.getPropertyValue("OID")
log.info oid
String statuses

log.info("Query Input: ORDERNUMBER=" + ordernumber + ", HEADERVER=" + ver + ", ILEC=" + ilec + ", Customer ID=" + customerid + " ,SHEET =" + sheet + " ,REMARKS =" + event  + " ,PHONE =" + phone);
statuses = tc.getTestStepByName("REMARKS").getPropertyValue(event);
if (!statuses) 
{
	log.error("Remarks code : " + event + " not found in repository!");
	testRunner.fail("Expected Event code not found in repository");
}
statusList = statuses.split(",");
///////////////////////////////////
//Get the DB string
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);
if(ilec.equals("Intrado") || ilec.equals("Schofield"))
{
	if(event.equals("abandon") || event.equals("suspend") || event.equals("resume") || event.equals("cancel")){
		sql.eachRow("select * from e911_message where ordernumber = ${ordernumber} and telephonenumber = ${phone} and customerid = ${customerid} and ilec = ${ilec}  and action=${event} order by created")
             {row ->
    		          dbResults <<  (row.MESSAGETYPE + ":" + row.ACTION);
             }
             if(statusList == dbResults){
	               log.info("Verification passed in e911_message. Found Statuses: " + dbResults.join(","));
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Pass" )
             }
             else{
	               log.error("Verification failed in e911_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));
	               testRunner.fail("Verification failed in e911_message.");
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Fail" )
             }
	}
	else{
		   sql.eachRow("select * from e911_message where ordernumber = ${ordernumber} and telephonenumber = ${phone} and customerid = ${customerid} and ilec = ${ilec}  order by created")
             {row ->
    		          dbResults <<  (row.MESSAGETYPE + ":" + row.RESPONSETYPE + ":" + row.ACTION);
             }
             if(statusList == dbResults){
	               log.info("Verification passed in e911_message. Found Statuses: " + dbResults.join(","));
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Pass" )
             }
             else{
	               log.error("Verification failed in e911_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));
	               testRunner.fail("Verification failed in e911_message.");
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Fail" )
             }
	    }
}
else
{	
		Thread.currentThread().sleep(2000)
		sql.eachRow("select * from e911_txevent_history where trans_parent_oid = ${oid} order by created_dt")
             {row ->
    		          dbResults <<  (row.EVENT_CODE + ":" + row.ACTION);
             }
             if(statusList == dbResults){
	               log.info("Verification passed in e911_txevent_history. Found Statuses: " + dbResults.join(","));
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Pass" )
             }
             else{
	               log.error("Verification failed in e911_txevent_history. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));
	               testRunner.fail("Verification failed in e911_txevent_history.");
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Fail" )
             }
}
sql.close();]]></script></con:config></con:testStep><con:testStep type="groovy" name="NENA_MESSAGE_AND_CH_E911_TRANS_VALIDATION" id="ae90d472-81ca-4a57-9ce0-9c192adf5329"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;


//Query Inputs
String ordernumber = tc.getPropertyValue("ORDERNUMBER");
String ver = tc.getPropertyValue("HEADERVER");
String phone = tc.getPropertyValue("PHONE")
phone="%"+phone+"%"
String customerid = tc.getPropertyValue("CUSTOMER");
String ilec = tc.getPropertyValue("ILEC");
String sheet = tc.getPropertyValue("TC_TYPE");
String event = tc.getPropertyValue("STATUS");
String statuses

log.info("Query Input: ORDERNUMBER=" + ordernumber + ", HEADERVER=" + ver + ", ILEC=" + ilec + ", Customer ID=" + customerid + " ,SHEET =" + sheet + " ,REMARKS =" + event  + " ,PHONE =" + phone);
statuses = tc.getTestStepByName("REMARKS").getPropertyValue(event);
if (!statuses) 
{
	log.error("Remarks code : " + event + " not found in repository!");
	testRunner.fail("Expected Event code not found in repository");
}

///////////////////////////////////
//Get the DB string
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);
if(ilec.equals("Intrado") || ilec.equals("Schofield"))
{ 
	       def newstatus=sql.firstRow("select FILENAME from nena_message where ordernumber = ${ordernumber} and recordtype = 'SOIFile' and customerid = ${customerid} and ilec = ${ilec}  order by created")
            String oristatuses=newstatus[0]
            statuses=statuses.replaceAll("&lt;FILENAME>", oristatuses)
            log.info statuses
	       sql.eachRow("select * from nena_message where ordernumber = ${ordernumber}  and customerid = ${customerid}  and ilec = ${ilec}  order by created")             
             {row ->
    		          dbResults &lt;&lt;  (row.RECORDTYPE + ":" + row.FILENAME)
             }          
             statusList = statuses.split(",")
             if(statusList == dbResults){
	               log.info("Verification passed in nena_message. Found Statuses: " + dbResults.join(","))
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Pass" )
             }
             else{
	               log.error("Verification failed in nena_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","))
	               testRunner.fail("Verification failed in e911_message.")
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Fail" )
             }
}
else
{	
	        Thread.currentThread().sleep(20000)
		   def oid=sql.firstRow("select oid from ch_e911_trans where ordernumber = ${ordernumber}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
		   String orioid=oid[0]
		   log.info orioid
		   tc.setPropertyValue("OID" , orioid )
		   def newstatus=sql.firstRow("select status from ch_e911_trans where ordernumber = ${ordernumber}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
             String oristatuses=newstatus[0]
             log.info oristatuses
             if(statuses == oristatuses){
	               log.info("Verification passed in ch_e911_trans. Found Statuses: " + oristatuses)
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Pass" )
             }
             else{
	               log.error("Verification failed in ch_e911_trans. Expected Status: " + statuses + " Actual status: " + oristatuses)
	               testRunner.fail("Verification failed in ch_e911_trans.")
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Fail" )
             }
}
sql.close()</script></con:config></con:testStep><con:testStep type="groovy" name="CH_ORDER_VALIDATION" id="711798a6-cde2-47c7-8914-77dff9ff94c3"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;


//Query Inputs
String ordernumber = tc.getPropertyValue("ORDERNUMBER");
String ver = tc.getPropertyValue("HEADERVER");
String phone = tc.getPropertyValue("PHONE")
phone="%"+phone+"%"
String customerid = tc.getPropertyValue("CUSTOMER");
String ilec = tc.getPropertyValue("ILEC");
String sheet = tc.getPropertyValue("TC_TYPE");
String event = tc.getPropertyValue("STATUS");
String oid = tc.getPropertyValue("OID")
String statuses
log.info oid

log.info("Query Input: ORDERNUMBER=" + ordernumber + ", HEADERVER=" + ver + ", ILEC=" + ilec + ", Customer ID=" + customerid + " ,SHEET =" + sheet + " ,REMARKS =" + event  + " ,PHONE =" + phone);
statuses = tc.getTestStepByName("REMARKS").getPropertyValue(event);
if (!statuses) 
{
	log.error("Remarks code : " + event + " not found in repository!");
	testRunner.fail("Expected Event code not found in repository");
}

///////////////////////////////////
//Get the DB string
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);
if(ilec=="IntradoI2")
{ 
		   Thread.currentThread().sleep(2000)
	        def newstatus=sql.firstRow("select status from ch_order where last_trans_oid = ${oid}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
             String oristatuses=newstatus[0]
             if(statuses == oristatuses){
	               log.info("Verification passed in ch_order. Found Statuses: " + oristatuses)
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Pass" )
             }
             else{
	               log.error("Verification failed in ch_order. Expected Status: " + statuses + " Actual status: " + oristatuses)
	               testRunner.fail("Verification failed in ch_order.")
	               tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Fail" )
             }
}
sql.close()</script></con:config></con:testStep><con:testStep type="delay" name="END" id="9259fb87-020d-4b0f-8e4e-14ce3e95710a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>OID</con:name><con:value/></con:property><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value/></con:property><con:property><con:name>STATUS</con:name><con:value/></con:property><con:property><con:name>E911_DB_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ASR_ORDER_PREORDER_DB_VALIDATION_ON_CH" searchProperties="true" disabled="true" id="c93c21cf-7479-4db4-8379-244c9fc7e1a6"><con:settings/><con:testStep type="properties" name="REMARKS" id="f43cde56-1b1d-4da8-a77d-9da22f3f9bb3"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>abandon</con:name><con:value>info:abandon</con:value></con:property><con:property><con:name>suspend</con:name><con:value>info:suspend</con:value></con:property><con:property><con:name>resume</con:name><con:value>info:resume</con:value></con:property><con:property><con:name>cancel</con:name><con:value>info:cancel</con:value></con:property><con:property><con:name>addressMatch</con:name><con:value>request:save,request:submit,addressMatch:receive</con:value></con:property><con:property><con:name>addressalternative</con:name><con:value>request:save,request:submit,addressAlternative:receive</con:value></con:property><con:property><con:name>addresserror</con:name><con:value>request:save,request:submit,addressError:receive</con:value></con:property><con:property><con:name>csr</con:name><con:value>request:save,request:submit,parsed_response:receive</con:value></con:property><con:property><con:name>loop</con:name><con:value>request:save,request:submit,response:receive</con:value></con:property><con:property><con:name>errorresponse</con:name><con:value>request:save,request:submit,error_response:receive</con:value></con:property><con:property><con:name>tnresponse</con:name><con:value>request:save,request:submit,response:receive</con:value></con:property><con:property><con:name>default</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>-Ack.xml-</con:name><con:value>new:save,new:submit,ack:receive</con:value></con:property><con:property><con:name>-Nack.xml-</con:name><con:value>new:save,new:submit,negack:receive</con:value></con:property><con:property><con:name>-AckFocSocBcn.xml-</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>-AckFocPiaDsrcn.xml-</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,provider_initiated_activity:receive,dsrcn:receive</con:value></con:property><con:property><con:name>-AckFocnonfatalFocPia.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,provider_initiated_activity:receive</con:value></con:property><con:property><con:name>-AckFocnonfatalFocJeop.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>-FocJeop.xml-</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>-FocSocBcn.xml-</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>-FocPiaSoc.xml-</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,provider_initiated_activity:receive,soc:receive</con:value></con:property><con:property><con:name>-Focsuperfatal.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive</con:value></con:property><con:property><con:name>-FocnonfatalFocJeopSoc.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>-FocnonfatalFocDsrcnPic.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,dsrcn:receive</con:value></con:property><con:property><con:name>-FocnonfatalFocStatusSocBcn.xml-</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>-Supp.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive</con:value></con:property><con:property><con:name>-SuppPiaSoc.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,provider_initiated_activity:receive,soc:receive</con:value></con:property><con:property><con:name>-SuppJeopSoc.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>-SuppDsrcnPic.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,dsrcn:receive</con:value></con:property><con:property><con:name>-SuppJeopDsrcn.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,dsrcn:receive</con:value></con:property><con:property><con:name>-Suppsuperfatal.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>-SuppnonfatalSupp.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive</con:value></con:property><con:property><con:name>-SuppnonfatalSuppJeop.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>-SuppnonfatalSuppfatal.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>-SuppnonfatalSuppPiaSoc.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,provider_initiated_activity:receive,soc:receive</con:value></con:property><con:property><con:name>(Ack.flow)</con:name><con:value>new:save,new:submit,ack:receive</con:value></con:property><con:property><con:name>(Nack.flow)</con:name><con:value>new:save,new:submit,negack:receive</con:value></con:property><con:property><con:name>(AckFocSoc.flow)</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive</con:value></con:property><con:property><con:name>(AckFocSocBcn.flow)</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(AckFocJeopSoc.flow)</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(AckFocnonfatal.flow)</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive</con:value></con:property><con:property><con:name>(AckFocJeopSocBcn.flow)</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(AckFocnonfatalFoc.flow)</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive</con:value></con:property><con:property><con:name>(AckFocnonfatalFocJeop.flow)</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>(AckFocnonfatalFocJeopSocBcn.flow)</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(FocSoc.flow)</con:name><con:value>new:save,new:submit,focaccept:receive,soc:receive</con:value></con:property><con:property><con:name>(FocnonfatalFocJeop.flow)</con:name><con:value>new:save,new:submit,focreject:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>(FocnonfatalFocJeopSoc.flow)</con:name><con:value>new:save,new:submit,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(FocnonfatalFocJeopSocBcn.flow)</con:name><con:value>new:save,new:submit,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(Soc.flow)</con:name><con:value>new:save,new:submit,soc:receive</con:value></con:property><con:property><con:name>(AckSupp.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive</con:value></con:property><con:property><con:name>(AckSuppSoc.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive</con:value></con:property><con:property><con:name>(AckSuppSocBcn.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(AckSuppJeopSoc.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(AckSuppnonfatal.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>(AckSuppJeopSocBcn.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(AckSuppnonfatalSuppJeopSoc.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(AckSuppnonfatalSuppJeopSocBcn.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(SuppSoc.flow)</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,soc:receive</con:value></con:property><con:property><con:name>(Suppfatal.flow)</con:name><con:value>supplement:save,supplement:submit,suppreject:receive</con:value></con:property><con:property><con:name>(SuppSocBcn.flow)</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(SuppJeopSoc.flow)</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(SuppnonfatalSupp.flow)</con:name><con:value>supplement:save,supplement:submit,suppreject:receive</con:value></con:property><con:property><con:name>(SuppnonfatalSuppJeop.flow)</con:name><con:value>supplement:save,supplement:submit,suppreject:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{Ack.flow}</con:name><con:value>new:save,new:submit,ack:receive</con:value></con:property><con:property><con:name>{Nack.flow}</con:name><con:value>new:save,new:submit,negack:receive</con:value></con:property><con:property><con:name>{AckFoc.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive</con:value></con:property><con:property><con:name>{AckFocSoc.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive</con:value></con:property><con:property><con:name>{AckFocJeop.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{AckFocfatal.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive</con:value></con:property><con:property><con:name>{AckFocSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{AckFocJeopSoc.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>{AckFocnonfatalFocJeop.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Dsrcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,dsrcn:receive</con:value></con:property><con:property><con:name>{Dsred.xml}</con:name><con:value>new:save,new:submit,ack:receive,dsred:receive</con:value></con:property><con:property><con:name>{Foc.flow}</con:name><con:value>new:save,new:submit,focaccept:receive</con:value></con:property><con:property><con:name>{FocSoc.flow}</con:name><con:value>new:save,new:submit,focaccept:receive,soc:receive</con:value></con:property><con:property><con:name>{FocJeop.flow}</con:name><con:value>new:save,new:submit,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{Focfatal.flow}</con:name><con:value>new:save,new:submit,focreject:receive</con:value></con:property><con:property><con:name>{FocSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{FocJeopSoc.flow}</con:name><con:value>new:save,new:submit,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>{Focsuperfatal.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive</con:value></con:property><con:property><con:name>{FocPsonSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocJeop.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocDsrcnPic.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,dsrcn:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocJeopSoc.xml}</con:name><con:value>new:save,new:submit,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocJeopSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocPsonSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocStatusSocBcn.flow}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Soc.flow}</con:name><con:value>new:save,new:submit,soc:receive</con:value></con:property><con:property><con:name>{AckSupp.flow}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive</con:value></con:property><con:property><con:name>{AckSuppSoc.flow}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive</con:value></con:property><con:property><con:name>{AckSuppJeop.flow}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{AckSuppfatal.flow}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>{Supp.flow}</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive</con:value></con:property><con:property><con:name>{SuppSoc.flow}</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,soc:receive</con:value></con:property><con:property><con:name>{SuppJeop.flow}</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{SuppJeopSoc.flow}</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSupp.flow}</con:name><con:value>supplement:save,supplement:submit,suppreject:receive</con:value></con:property><con:property><con:name>{Suppfatal.flow}</con:name><con:value>supplement:save,supplement:submit,suppreject:receive</con:value></con:property><con:property><con:name>{FocPic.xml}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{Focsuperfatal.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive</con:value></con:property><con:property><con:name>{FocStatusSocBcn.xml}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocPic.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocStatusSoc.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,status:receive,soc:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocJeop.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocSocBcnPic.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Status.xml}</con:name><con:value>new:save,new:submit,ack:receive,status:receive</con:value></con:property><con:property><con:name>{SuppSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive</con:value></con:property><con:property><con:name>{SuppPic.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{SuppSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppSocPic.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{SuppPiaSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,provider_initiated_activity:receive,soc:receive</con:value></con:property><con:property><con:name>{SuppJeopSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>{Suppnonfatal.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>{Suppsuperfatal.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>{SuppJeopSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppStatusSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppJeop.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppfatal.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppSocPic.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,soc:receive,provider_initiated_cancel:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppJeopSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppStatusSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,status:receive,soc:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocPsonSocBcn.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Dsrcn.xml}</con:name><con:value>new:save,new:submit,ack:receive,dsrcn:receive</con:value></con:property><con:property><con:name>{FocJeopSocBcn.xml}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,jeopardy:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Bhc_Status.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,batch_hot_cut:receive</con:value></con:property><con:property><con:name>{FocBhc_StatusSoc.xml}</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive,batch_hot_cut:receive,soc:receive</con:value></con:property><con:property><con:name>{FocnonfatalFocStatusSocBcn.xml}</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{Supp.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive</con:value></con:property><con:property><con:name>{SuppJeop.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>{SuppPsonSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,status:receive,soc:receive</con:value></con:property><con:property><con:name>{SuppPsonSocBcn.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,status:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSuppPia.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive,provider_initiated_activity:receive</con:value></con:property><con:property><con:name>{SuppnonfatalSupp.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive</con:value></con:property><con:property><con:name>{Bhc_StatusSuppJeopSoc.xml}</con:name><con:value>supplement:save,supplement:submit,ack:receive,batch_hot_cut:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(AckFocnonfatalFocJeopSoc.flow)</con:name><con:value>new:save,new:submit,ack:receive,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(Focnonfatal.flow)</con:name><con:value>new:save,new:submit,focreject:receive</con:value></con:property><con:property><con:name>(Supp.flow)</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive</con:value></con:property><con:property><con:name>(AckSuppJeop.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>(SuppnonfatalSuppJeopSoc.flow)</con:name><con:value>supplement:save,supplement:submit,suppreject:receive,suppaccept:receive,jeopardy:receive,soc:receive</con:value></con:property><con:property><con:name>(Suppnonfatal.flow)</con:name><con:value>supplement:save,supplement:submit,suppreject:receive</con:value></con:property><con:property><con:name>(SuppJeop.flow)</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive,jeopardy:receive</con:value></con:property><con:property><con:name>(AckSuppnonfatalSupp.flow)</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppreject:receive,suppaccept:receive</con:value></con:property><con:property><con:name>defaultsup</con:name><con:value>supplement:save,supplement:submit,ack:receive,suppaccept:receive,soc:receive,billing_completion:receive</con:value></con:property><con:property><con:name>(Foc.flow)</con:name><con:value>new:save,new:submit,focaccept:receive</con:value></con:property><con:property><con:name>(FocnonfatalFoc)</con:name><con:value>new:save,new:submit,focreject:receive,focaccept:receive</con:value></con:property><con:property><con:name>-SAck.xml-</con:name><con:value>supplement:save,supplement:submit,ack:receive</con:value></con:property><con:property><con:name>-SNack.xml-</con:name><con:value>supplement:save,supplement:submit,negack:receive</con:value></con:property><con:property><con:name>NEW_REQUEST_REMARKS_A_G</con:name><con:value>SAVED:save,SERVICE_REQUEST:submit,SENT:submit,FIRM_ORDER:submit,SENT INQ:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive</con:value></con:property><con:property><con:name>NEW_REQUEST_REMARKS_C_D_J</con:name><con:value>SAVED:save,SERVICE_REQUEST:submit,SENT:submit,FIRM_ORDER:submit,SENT INQ:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive</con:value></con:property><con:property><con:name>SUPP4_REMARKS</con:name><con:value>SAVED:save,SUPP_4:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,CONFIRMED:receive</con:value></con:property><con:property><con:name>SUPP1_REMARKS</con:name><con:value>SAVED:save,SUPP_1:submit,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,CONFIRMED:receive</con:value></con:property><con:property><con:name>SUPP2_REMARKS</con:name><con:value>SAVED:save,SUPP_2:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,CONFIRMED:receive</con:value></con:property><con:property><con:name>SUPP3_REMARKS</con:name><con:value>SAVED:save,SUPP_3:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,COMPLETE:receive,PROVIDER_CANCELLED:receive,CONFIRMED:receive</con:value></con:property><con:property><con:name>SUPP4_SEC_REMARKS</con:name><con:value>SAVED:save,SUPP_4:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,CONFIRMED:receive,Sec Confirmation:receive</con:value></con:property><con:property><con:name>SUPP1_SEC_REMARKS</con:name><con:value>SAVED:save,SUPP_1:submit,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,CONFIRMED:receive,Sec Confirmation:receive</con:value></con:property><con:property><con:name>SUPP2_SEC_REMARKS</con:name><con:value>SAVED:save,SUPP_2:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,CONFIRMED:receive,Sec Confirmation:receive</con:value></con:property><con:property><con:name>SUPP3_SEC_REMARKS</con:name><con:value>SAVED:save,SUPP_3:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,COMPLETE:receive,PROVIDER_CANCELLED:receive,CONFIRMED:receive,Sec Confirmation:receive</con:value></con:property><con:property><con:name>CFAInquiry</con:name><con:value>CFAInquiry:save,CFAInquiry:submit,CFAResults:receive</con:value></con:property><con:property><con:name>LocationInquiry</con:name><con:value>LocationInquiry:save,LocationInquiry:submit,LocationResults:receive</con:value></con:property><con:property><con:name>SVC_AVAILInquiry</con:name><con:value>SvcAvailInquiry:save,SvcAvailInquiry:submit,SvcAvailResults:receive</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="VALIDATE_ASR_ORDER_PREORDER_TABLES" id="9fe656df-7e37-431b-afd5-adf4a9410173"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver
def tc = testRunner.testCase

boolean fail = true
boolean dbresult = true
String statuses

int verreq = Integer.parseInt(tc.getPropertyValue("VER"))
String pon = tc.getPropertyValue("PON")
String ilec = tc.getPropertyValue("ILEC")
String ver = tc.getPropertyValue("HEADERVER")
String sheet = tc.getPropertyValue("TC_TYPE")
String event = tc.getPropertyValue("REMARKS")
String customerid = tc.getPropertyValue("CUSTOMER")

log.info("Query Input: PON=" + pon)
log.info("Query Input: HEADERVER=" + ver)
log.info("Query Input: ILEC=" + ilec)
log.info("Query Input: Customer ID=" + customerid)
log.info("Query Input: TYPE =" + sheet)
log.info("Query Input: REMARKS =" + event)
log.info("Query Input: VER =" + verreq)
 
statuses = tc.getTestStepByName("REMARKS").getPropertyValue(event)
if (!statuses) 
{
	log.error("Remarks code : " + event + " not found in repository!")
	testRunner.fail("Expected Event code not found in repository")
}
statusList = statuses.split(",")


com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" )
def dbDriver = context.expand( '${#Project#DB_DRIVER}' )
def dbString = context.expand( '${#Project#CH_DBSTRING}' )
def dbArray = dbString.split("@")
def dbUP = dbArray[0].split(":")
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1]
def userPass = dbUP[3].split("/")
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver)
if(sheet.equals("AsrOrder")){
	if(event.equals("abandon") || event.equals("suspend") || event.equals("resume") || event.equals("cancel")){
		sql.eachRow("select * from send_asr_message where pon = ${pon} and customerid = ${customerid} and SUPPLIER = ${ilec} and ver=${verreq} and action=${event} order by created")
		{row -> dbResults <<  (row.MESSAGETYPE + ":" + row.ACTION)}
		if(statusList == dbResults){
			log.info("Verification passed in send_asr_message. Found Statuses: " + dbResults.join(","))
			tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Pass" )
		}
		else{
			log.error("Verification failed in send_asr_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","))
			testRunner.fail("Verification failed in send_asr_message.")
			tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Fail" )
		}
	}
	else{
		sql.eachRow("select * from send_asr_message where pon = ${pon} and customerid = ${customerid} and SUPPLIER = ${ilec} and ver=${verreq} order by created")
		{row -> dbResults <<  (row.status + ":" + row.ACTION)}
		log.info dbResults
		log.info statuses
		for(int j=0;j<dbResults.size();j++){
			if(statuses.contains(dbResults[j])){
				dbresult=true	
			}
			else{
				dbresult=false
			}			
		}
		//if((statuses.contains(dbResults[0])) && (statuses.contains(dbResults[1])) && statuses.contains(dbResults[2]) && (statuses.contains(dbResults[3])) && (statuses.contains(dbResults[4])) && (statuses.contains(dbResults[5])) && (statuses.contains(dbResults[6])) && (statuses.contains(dbResults[7])) && (statuses.contains(dbResults[8])) && (statuses.contains(dbResults[9])) && (statuses.contains(dbResults[10])) && (statuses.contains(dbResults[11])) && (statuses.contains(dbResults[12])) && (statuses.contains(dbResults[13]))){
		if(dbresult){
			log.info("Verification passed in send_asr_message. Found Statuses: " + dbResults.join(","))
			tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Pass" )
		}
		else{
			log.error("Verification failed in send_asr_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","))
			testRunner.fail("Verification failed in send_asr_message.")
			tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Fail" )
		}
	}
}
else{
	sql.eachRow("select * from send_asr_preorder_message where messageid = ${pon} and customerid = ${customerid} and SUPPLIER = ${ilec}")
	{row -> dbResults <<  (row.messagetype + ":" + row.ACTION)}
	if(statusList == dbResults){
		log.info("Verification passed in send_asr_preorder_message. Found Statuses: " + dbResults.join(","))
		tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Pass" )
	}
	else{
		log.error("Verification failed in send_asr_preorder_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","))
		testRunner.fail("Verification failed in send_asr_preorder_message.")
		tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Fail" )
	}
}	
sql.close()]]></script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET_TXID_VALUE_FROM_RECEIVE_LSR_MESSAGE" searchProperties="true" id="4ce54f68-3bec-4c31-8640-f3e72eee0c92" disabled="true"><con:settings/><con:testStep type="groovy" name="QUERY_RECEIVE_LSR_MESSAGE" id="19090b06-4857-4385-baad-b6a3024108c0"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;

String sheet = tc.getPropertyValue("TC_TYPE");
String remarks = tc.getPropertyValue("REMARKS");
String pon = tc.getPropertyValue("PON");
String ver = tc.getPropertyValue("HEADERVER");
String customerid = tc.getPropertyValue("CUSTOMER");
String ilec = tc.getPropertyValue("ILEC");
int verreq = Integer.parseInt(tc.getPropertyValue("VER"))

log.info("Query Input: PON OR TN=" + pon)
log.info("Query Input: VER=" + verreq)
log.info("Query Input: TC_TYPE=" + sheet)
log.info("Query Input: SUPPLIER =" + ilec)
log.info("Query Input: REMARKS =" + remarks)
log.info("Query Input: CUSTOMER ID =" + customerid)
log.info("Query Input: HEADERVER =" + ver)


com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);

if(sheet.equals("Order")){
	def txid = sql.firstRow("select TXID from RECEIVE_LSR_MESSAGE where pon = ${pon} order by datetime desc ");	
 	String oristatuses=txid[0]
 	log.info ("TXID for Receive LSR Request is:= " + oristatuses)
 	testRunner.testCase.setPropertyValue( "TXID" , oristatuses)
}
else{
	if(remarks.equals("addressMatch:RecaddressMatch")){		
		def txid = sql.firstRow("select TXID from RECEIVE_SUPPLIER_AVQ_MESSAGE where pon = ${pon} order by datetime desc ");		
		String oristatuses=txid[0]
		log.info ("TXID for Receive AV Request is:=" + oristatuses)
		testRunner.testCase.setPropertyValue( "TXID" , oristatuses )
	}
	else{
		if(remarks.equals("csr:Reccsr")){
			def txid = sql.firstRow("select TXID from RECEIVE_CSR_MESSAGE where inqnum = ${pon} order by datetime desc ");               
			String oristatuses=txid[0]
	        	log.info ("TXID for Receive CSR request:=" + oristatuses)
	        	testRunner.testCase.setPropertyValue( "TXID" , oristatuses )
		}
		else{
			if(remarks.equals("loop:Recloop")){
				def txid = sql.firstRow("select TXID from RECEIVE_LOOPQUAL_MESSAGE where txnum = ${pon} order by datetime desc ");
				String oristatuses=txid[0]
				log.info ("TXID for Receive Loop request:=" + oristatuses)
				testRunner.testCase.setPropertyValue( "TXID" , oristatuses) 
			}
			else{
				def txid = sql.firstRow("select TXID from RECEIVE_LSR_PO_NF_MESSAGE where txnum = ${pon} order by datetime desc ");
				String oristatuses=txid[0]
				log.info ("TXID for Receive TAF request:=" + oristatuses)
				testRunner.testCase.setPropertyValue( "TXID" , oristatuses)
			}
		}
	}
}
sql.close();</script></con:config></con:testStep><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>TXID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LSR_RECEIVE_ORDER_PREORDER_DB_VALIDATION_ON_SEA" searchProperties="true" id="8eca4b1c-01f5-45b4-8a42-9c7e49a17a23" disabled="true"><con:settings/><con:testStep type="properties" name="STATUS" id="30c60398-3b02-4969-8910-841a8d64a4f8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source/><con:properties><con:property><con:name>NEWSTATUS</con:name><con:value>new</con:value></con:property><con:property><con:name>ACKSTATUS</con:name><con:value>ack</con:value></con:property><con:property><con:name>NEGACKSTATUS</con:name><con:value>negack</con:value></con:property><con:property><con:name>FOCACCEPTSTATUS</con:name><con:value>focaccept</con:value></con:property><con:property><con:name>FOCREJECTSTATUS</con:name><con:value>focreject</con:value></con:property><con:property><con:name>JEOPARDYSTATUS</con:name><con:value>jeopardy</con:value></con:property><con:property><con:name>SOCSTATUS</con:name><con:value>soc</con:value></con:property><con:property><con:name>BCNSTATUS</con:name><con:value>billing_completion</con:value></con:property><con:property><con:name>DSRCNSTATUS</con:name><con:value>dsrcn</con:value></con:property><con:property><con:name>PIASTATUS</con:name><con:value>provider_initiated_activity</con:value></con:property><con:property><con:name>PICSTATUS</con:name><con:value>provider_initiated_cancel</con:value></con:property><con:property><con:name>INFOSTATUS</con:name><con:value>info</con:value></con:property><con:property><con:name>SUPPSTATUS</con:name><con:value>supplement</con:value></con:property><con:property><con:name>SUPPACCEPTSTATUS</con:name><con:value>suppaccept</con:value></con:property><con:property><con:name>SUPPREJECTSTATUS</con:name><con:value>suppreject</con:value></con:property><con:property><con:name>STASTATUS</con:name><con:value>status</con:value></con:property><con:property><con:name>BATCHHOTCUT</con:name><con:value>batch_hot_cut</con:value></con:property><con:property><con:name>DSREDSTATUS</con:name><con:value>dsred</con:value></con:property><con:property><con:name>ADDRESSALTERNATIVESTATUS</con:name><con:value>addressAlternative</con:value></con:property><con:property><con:name>MULTIPLERESPONSESTATUS</con:name><con:value>Multiple_response</con:value></con:property><con:property><con:name>ADDRESSERRORSTATUS</con:name><con:value>addressError</con:value></con:property><con:property><con:name>RESPONSESTATUS</con:name><con:value>response</con:value></con:property><con:property><con:name>ERRORSTATUS</con:name><con:value>error_response</con:value></con:property><con:property><con:name>ADDRESSMATCHSTATUS</con:name><con:value>addressMatch</con:value></con:property><con:property><con:name>PARSEDRESPONSESTATUS</con:name><con:value>parsed_response</con:value></con:property><con:property><con:name>UNPARSEDRESPONSESTATUS</con:name><con:value>unparsed_response</con:value></con:property><con:property><con:name>SuccessfulPost</con:name><con:value>SuccessfulPost</con:value></con:property><con:property><con:name>Post_Error</con:name><con:value>Post_Error</con:value></con:property><con:property><con:name>PostWithErrorValidator</con:name><con:value>PostWithErrorValidator</con:value></con:property><con:property><con:name>ErrorResponse</con:name><con:value>ErrorResponse</con:value></con:property><con:property><con:name>Available_Listing</con:name><con:value>Available_Listing</con:value></con:property><con:property><con:name>AvailableAndOwnedByYou</con:name><con:value>AvailableAndOwnedByYou</con:value></con:property><con:property><con:name>Unavailable</con:name><con:value>Unavailable</con:value></con:property><con:property><con:name>SubscriptionsSuccessfull</con:name><con:value>SubscriptionsSuccessfull</con:value></con:property><con:property><con:name>SubscriptionsError</con:name><con:value>SubscriptionsError</con:value></con:property><con:property><con:name>TaxonomySuccessfull</con:name><con:value>TaxonomySuccessfull</con:value></con:property><con:property><con:name>ErrorResponseTQ</con:name><con:value>ErrorResponse</con:value></con:property><con:property><con:name>abandon</con:name><con:value>abandon</con:value></con:property><con:property><con:name>suspend</con:name><con:value>suspend</con:value></con:property><con:property><con:name>resume</con:name><con:value>resume</con:value></con:property><con:property><con:name>cancel</con:name><con:value>cancel</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="VALIDATE_LSR_RECEIVE_ORDER_PREORDER_DB_VALIDATION" id="b666c53a-8b59-4ab1-b8bb-7ce9078906ec"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

def tc = testRunner.testCase
def oristatusori,orioidori,oriparentoidori
boolean fail = true

String type = tc.getPropertyValue("TC_TYPE")
long timeout = Long.parseLong(tc.getPropertyValue("TIMEOUT"))
int ver = Integer.parseInt(tc.getPropertyValue("VER"))
String pon = tc.getPropertyValue("PON")
String customer = tc.getPropertyValue("CUSTOMER")
String event = tc.getPropertyValue("STATUS")
String remarks = tc.getPropertyValue("REMARKS")
String supplier = tc.getPropertyValue("ILEC")
String statuse = tc.getTestStepByName("STATUS").getPropertyValue(event);

log.info("Query Input: PON OR TN=" + pon)
log.info("Query Input: VER=" + ver)
log.info("Query Input: TC_TYPE=" + type)
log.info("Query Input: LAST STATUS TO BE MATCHED=" + event)
log.info("Query Input: SUPPLIER =" + supplier)
log.info("Query Input: REMARKS =" + remarks)
log.info("Query Input: CUSTOMER ID =" + customer)
log.info("Query Input: STATUS ID =" + statuse)


log.info ("Status found in repository : " + statuse )

if (!statuse) {
	log.error("Status code : " + event + " not found in repository!");
	testRunner.fail("Expected Status code not found in repository");
}


com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand('${#Project#DB_DRIVER}');
def dbString = context.expand('${#Project#CHPEP_DBSTRING}');
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);

//for(long i =0 ; i&lt;timeout;i+=25){
//	log.info("loop value = " + i) 
//	  try{
//		Thread.currentThread().sleep(2000);
//	  }
//	  catch(Exception e){}
//        if(type=="Order")
//          {
//          	if(event.equals("abandon") || event.equals("suspend") || event.equals("resume") || event.equals("cancel")){
//          		def fstatus = sql.firstRow("select last_action from SEA_LSR_TRANS where pon=${pon} and customerid=${customer} and supplier_name=${supplier} and ver=${ver} order by created_dt desc");
//                    log.info("Message Type in DB :" + fstatus);  
//                    log.info("Selected status Type in Repository :" + statuse);  
//                    if (fstatus == null) { 
//       	              log.info(" 1 Waiting of expected status in SEA_LSR_TRANS");
//                    } 
//                    else {
//                           String oristatus=fstatus[0];
//               	       log.info("Original status Type in DB :" + oristatus);
//       	                 if(oristatus==statuse){       		
//	  	                     i = timeout;
//	  	                     fail = false;
//	  	                     log.info ("Final status found in SEA_LSR_TRANS table: " + fstatus );  
//	  	                     tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" )               		       	
//       	                 }
//       	                 else {
//       		                 log.info(" 2 Waiting of expected status in SEA_LSR_TRANS++++++++++++++++");
//       	                 }
//                     }
//          	}
//          	else{
//          		def fstatus = sql.firstRow("select status from SEA_LSR_TRANS where pon=${pon} and customerid=${customer} and supplier_name=${supplier} and ver=${ver} order by created_dt desc");
//                    log.info("Message Type in DB :" + fstatus);  
//                    log.info("Selected status Type in Repository :" + statuse);  
//                    if (fstatus == null) { 
//       	              log.info("faraz Waiting of expected status in SEA_LSR_TRANS");
//                    } 
//                    else {
//                           String oristatus=fstatus[0];
//               	       log.info("Original status Type in DB :" + oristatus);
//       	                 if(oristatus==statuse){       		
//	  	                     i = timeout;
//	  	                     fail = false;
//	  	                     log.info ("Final status found in SEA_LSR_TRANS table: " + fstatus );  
//	  	                     tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" )               		       	
//       	                 }
//       	                 else {
//       		                 log.info("3 Waiting of expected status in SEA_LSR_TRANS++++++++++++++++");
//       	                 }
//                     }
//          	}                
//	      }
//	   else
//          {
//                     def fstatus = sql.firstRow("select status from SEA_LSR_PO_TRANS where txnum=${pon} and cust_name=${customer} and supplier_name=${supplier} order by created_dt desc ");
//                     log.info("Message Type in DB :" + fstatus);        
//                     log.info("Selected status Type in Repository :" + statuse);  
//                     if (fstatus == null) { 
//       	              log.info("Waiting of expected status in SEA_LSR_PO_TRANS");
//                      }
//                     else {
//               	   String oristatus=fstatus[0];
//               	   log.info("Original status Type in DB :" + oristatus);
//       	              if(oristatus==statuse){       		
//	  	                   i = timeout;
//	  	                   fail = false;
//	  	                   log.info ("Final status found in SEA_LSR_PO_TRANS table: " + fstatus );
//	  	                   tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" )               		       	  
//       	                 }
//       	              else {
//       		               log.info("Waiting of expected status in SEA_LSR_PO_TRANS++++++++++++++++");
//       	                 }
//                    }                            
//           }
// 	     } 	     
//if (fail) {
//	testRunner.fail("MESSAGE_TYPE not received 1.");
//	log.error("MESSAGE_TYPE not received 2");
//	tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Fail" )               		       		
//}
sql.close();</script></con:config></con:testStep><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>STATUS</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET_ORDER_TELEPHONE_E911_BWC_DB_VALIDATION" searchProperties="true" disabled="true" id="27e07061-15c9-4c59-bd8d-5fe92afab3e2"><con:settings/><con:testStep type="properties" name="REMARKS" id="d3d3c6d6-930d-4f7b-bb9f-fa5146a1cc16"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cancel</con:name><con:value>info:cancel</con:value></con:property><con:property><con:name>abandon</con:name><con:value>info:abandon</con:value></con:property><con:property><con:name>suspend</con:name><con:value>info:suspend</con:value></con:property><con:property><con:name>resume</con:name><con:value>info:resume</con:value></con:property><con:property><con:name>ValidateStatusValid</con:name><con:value>validateLocationSuccess</con:value></con:property><con:property><con:name>ValidateLocationValid</con:name><con:value>validateLocationSuccess:receive,validateLocation:submit</con:value></con:property><con:property><con:name>ValidateStatusInvalid</con:name><con:value>validateLocationFailure</con:value></con:property><con:property><con:name>ValidateLocationInvalid</con:name><con:value>validateLocationFailure:receive,validateLocation:submit</con:value></con:property><con:property><con:name>AddStatusValid</con:name><con:value>addLocationSuccess:added</con:value></con:property><con:property><con:name>AddLocationValid</con:name><con:value>addLocationSuccess:receive,addLocation:submit</con:value></con:property><con:property><con:name>AddStatusFailure</con:name><con:value>addLocationFailure:added</con:value></con:property><con:property><con:name>AddLocationFailure</con:name><con:value>addLocationFailure:receive,addLocation:submit</con:value></con:property><con:property><con:name>AddStatusProvisioned</con:name><con:value>addLocationSuccess:provisioned</con:value></con:property><con:property><con:name>AddLocationProvisioned</con:name><con:value>addLocationSuccess:receive,addLocation:submit</con:value></con:property><con:property><con:name>ProvisionStatusValid</con:name><con:value>provisionLocationSuccess:provisioned</con:value></con:property><con:property><con:name>ProvisionLocationValid</con:name><con:value>provisionLocationSuccess:receive,provisionLocation:submit</con:value></con:property><con:property><con:name>ProvisionStatusInValid</con:name><con:value>provisionLocationFailure:added</con:value></con:property><con:property><con:name>ProvisionLocationInValid</con:name><con:value>provisionLocationFailure:receive,provisionLocation:submit</con:value></con:property><con:property><con:name>RemoveStatusValid</con:name><con:value>removeLocationSuccess:added</con:value></con:property><con:property><con:name>RemoveLocationValid</con:name><con:value>removeLocationSuccess:receive,removeLocation:submit</con:value></con:property><con:property><con:name>RemoveStatusInValid</con:name><con:value>removeLocationFailure:added</con:value></con:property><con:property><con:name>RemoveLocationInValid</con:name><con:value>removeLocationFailure:receive,removeLocation:submit</con:value></con:property><con:property><con:name>RemoveUriStatusValid</con:name><con:value>removeURISuccess:added</con:value></con:property><con:property><con:name>RemoveUriValid</con:name><con:value>removeURISuccess:receive,removeURI:submit</con:value></con:property><con:property><con:name>RemoveUriStatusInValid</con:name><con:value>removeURIFailure:added</con:value></con:property><con:property><con:name>RemoveUriInValid</con:name><con:value>removeURIFailure:receive,removeURI:submit</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="GET_PHONE_TELEPHONE" id="06a54696-af78-4e6d-8ea6-fcc06029eae8"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;

String subrequest = tc.getPropertyValue("SUBREQUEST")
log.info 'Query Input: SUB REQUEST=' + subrequest

///////////////////////////////////
//Get the DB string
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);
if(subrequest.equals("removeLocation")){
	Thread.currentThread().sleep(3000)	
	def locationid=sql.firstRow("select locationid from CH_E911_TRANS where rownum < 2 and status='addLocationSuccess' order by oid desc")
	String orilocationid=locationid[0]
	log.info 'LOCATIONID value : =' + orilocationid
	tc.setPropertyValue("LOCATIONID" , orilocationid )
	def ordernumber=sql.firstRow("select ordernumber from CH_E911_TRANS where rownum < 2 and status='addLocationSuccess'  order by oid desc")
	String oriordernumber=ordernumber[0]
	log.info 'ORDERNUMBER value : =' + oriordernumber
	tc.setPropertyValue("ORDERNUMBER" , oriordernumber )
	def phone=sql.firstRow("select telephonenumber from CH_E911_TRANS where rownum < 2 and status='addLocationSuccess' order by oid desc")
	String oriphone=phone[0]	
	log.info 'PHONE value : =' + oriphone
	String tn1=oriphone.substring(0,3)
	String tn2=oriphone.substring(3,6)
	String tn3=oriphone.substring(6,10)
	String tn=tn1 +"-"+tn2+"-"+tn3
	tc.setPropertyValue("PHONE" , tn )	
}
else{
	Thread.currentThread().sleep(3000)	
	def locationid=sql.firstRow("select locationid from CH_E911_TRANS where rownum < 2 and status='removeLocationSuccess' order by oid desc")
	String orilocationid=locationid[0]
	log.info 'LOCATIONID value : =' + orilocationid
	tc.setPropertyValue("LOCATIONID" , orilocationid )
	def ordernumber=sql.firstRow("select ordernumber from CH_E911_TRANS where rownum < 2 and status='removeLocationSuccess'  order by oid desc")
	String oriordernumber=ordernumber[0]
	log.info 'ORDERNUMBER value : =' + oriordernumber
	tc.setPropertyValue("ORDERNUMBER" , oriordernumber )
	def phone=sql.firstRow("select telephonenumber from CH_E911_TRANS where rownum < 2 and status='removeLocationSuccess' order by oid desc")
	String oriphone=phone[0]	
	log.info 'PHONE value : =' + oriphone
	String tn1=oriphone.substring(0,3)
	String tn2=oriphone.substring(3,6)
	String tn3=oriphone.substring(6,10)
	String tn=tn1 +"-"+tn2+"-"+tn3
	tc.setPropertyValue("PHONE" , tn )
}
sql.close()]]></script></con:config></con:testStep><con:testStep type="delay" name="END" id="7e6d0ab1-835b-4822-8084-1c738d7259b4"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value/></con:property><con:property><con:name>LOCATIONID</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LSR_RECEIVE_ORDER_PREORDER_DB_VALIDATION_ON_CH" searchProperties="true" id="c396fcfa-0000-40a3-bc54-d58c95b41521" disabled="true"><con:settings/><con:testStep type="properties" name="REMARKS" id="88b9d6bd-6069-44c5-8d59-b53ef1dd2b2f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>AckNegackRejectAcceptJeoSocPiaDsrcnDsredBcn</con:name><con:value>new:save,new:submit,ack:receive,negack:receive,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive,provider_initiated_activity:receive,billing_completion:receive,dsrcn:receive,dsred:receive</con:value></con:property><con:property><con:name>RecAckNegackRejectAcceptJeoSocPiaDsrcnDsredBcn</con:name><con:value>new:receive,ack:save,ack:submit,negack:save,negack:submit,focreject:save,focreject:submit,focaccept:save,focaccept:submit,jeopardy:save,jeopardy:submit,soc:save,soc:submit,provider_initiated_activity:save,provider_initiated_activity:submit,billing_completion:save,billing_completion:submit,dsrcn:save,dsrcn:submit,dsred:save,dsred:submit</con:value></con:property><con:property><con:name>SupprejectSuppAccept</con:name><con:value>supplement:save,supplement:submit,suppreject:receive,suppaccept:receive</con:value></con:property><con:property><con:name>RecSupprejectSuppAccept</con:name><con:value>supplement:receive,suppreject:save,suppreject:submit,suppaccept:save,suppaccept:submit</con:value></con:property><con:property><con:name>cancel</con:name><con:value>info:cancel</con:value></con:property><con:property><con:name>abandon</con:name><con:value>info:abandon</con:value></con:property><con:property><con:name>suspend</con:name><con:value>info:suspend</con:value></con:property><con:property><con:name>resume</con:name><con:value>info:resume</con:value></con:property><con:property><con:name>addressMatch</con:name><con:value>request:save,request:submit,addressMatch:receive,addressAlternative:receive,addressError:receive</con:value></con:property><con:property><con:name>RecaddressMatch</con:name><con:value>request:submit,addressMatch:save,addressMatch:submit,addressAlternative:save,addressAlternative:submit,addressError:save,addressError:submit</con:value></con:property><con:property><con:name>csr</con:name><con:value>request:save,request:submit,parsed_response:receive,unparsed_response:receive,error_response:receive</con:value></con:property><con:property><con:name>Reccsr</con:name><con:value>request:submit,parsed_response:save,parsed_response:submit,unparsed_response:save,unparsed_response:submit,response:save,error_response:submit</con:value></con:property><con:property><con:name>loop</con:name><con:value>request:save,request:submit,response:receive</con:value></con:property><con:property><con:name>Recloop</con:name><con:value>request:submit,response:save,response:submit</con:value></con:property><con:property><con:name>taf</con:name><con:value>request:save,request:submit,response:receive</con:value></con:property><con:property><con:name>Rectaf</con:name><con:value>request:submit,response:save,response:submit</con:value></con:property><con:property><con:name>AckAccept</con:name><con:value>new:save,new:submit,ack:receive,focaccept:receive</con:value></con:property><con:property><con:name>RecAckAccept</con:name><con:value>new:receive,ack:save,ack:submit,focaccept:save,focaccept:submit</con:value></con:property><con:property><con:name>SuppAccept</con:name><con:value>supplement:save,supplement:submit,suppaccept:receive</con:value></con:property><con:property><con:name>RecSuppAccept</con:name><con:value>supplement:receive,suppaccept:save,suppaccept:submit</con:value></con:property><con:property><con:name>AckNegackReject</con:name><con:value>new:save,new:submit,ack:receive,negack:receive,focreject:receive</con:value></con:property><con:property><con:name>RecAckNegackReject</con:name><con:value>new:receive,ack:save,ack:submit,negack:save,negack:submit,focreject:save,focreject:submit</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="VALIDATE_RECEIVE_LSR_MESSAGE" id="7fd02842-78a6-4fac-a3f4-55f87bec005b"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
String[] event
String eventnew
def tc = testRunner.testCase;
def statusList,statusListReceive

String sheet = tc.getPropertyValue("TC_TYPE");
String pon = tc.getPropertyValue("PON");
String ver = tc.getPropertyValue("HEADERVER");
String customerid = tc.getPropertyValue("CUSTOMER");
String ilec = tc.getPropertyValue("ILEC");
int verreq = Integer.parseInt(tc.getPropertyValue("VER"))
String action = tc.getPropertyValue("ACTION");

log.info("Query Input: PON=" + pon)
log.info("Query Input: HEADERVER=" + ver)
log.info("Query Input: TC_TYPE=" + sheet)
log.info("Query Input: ILEC =" + ilec)
log.info("Query Input: ACTION =" + action)
log.info("Query Input: CUSTOMER ID =" + customerid)
log.info("Query Input: VER =" + verreq)

if(action.equals("abandon") || action.equals("suspend") || action.equals("resume") || action.equals("cancel")){
	eventnew = tc.getPropertyValue("REMARKS");
	log.info("Query Input: LSR STATUS=" + eventnew)
	def statuses = tc.getTestStepByName("REMARKS").getPropertyValue(eventnew)
	if(!statuses){
		log.error("Remarks code : " + eventnew + " not found in repository!")
		testRunner.fail("Expected Event code not found in repository")
	}
	statusList = statuses.split(",")
}
else{
	String status = tc.getPropertyValue("REMARKS");
	String delimeter="[:]"
	event = status.split(delimeter)
	log.info("Query Input: LSR STATUS=" + event[0])
	log.info("Query Input: RECEIVE STATUS=" + event[1])
	def statuses = tc.getTestStepByName("REMARKS").getPropertyValue(event[0])
	def statusesReceive = tc.getTestStepByName("REMARKS").getPropertyValue(event[1])
	if (!statuses && !statusesReceive){
		log.error("Remarks code : " + event[0],event[1] + " not found in repository!")
		testRunner.fail("Expected Event code not found in repository")
	}
	statusList = statuses.split(",")
	statusListReceive = statusesReceive.split(",")
}

com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def dbResultsReceive = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);
def sqlreceive = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);

if(sheet.equals("Order")){
	if(action.equals("abandon") || action.equals("suspend") || action.equals("resume") || action.equals("cancel")){
		sql.eachRow("select * from lsr_message where pon = ${pon} and ilec = ${customerid}  and ver=${verreq} and action=${action} order by datetime")
		{row -> dbResults <<  (row.TYPE + ":" + row.ACTION);}		
          log.info(dbResults)         
          if(statusList == dbResults){
          	log.info("Verification passed in lsr_message. Found Statuses: " + dbResults.join(","));          	
          	tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Pass" )               		       	
          }
          else{
          	log.error("Verification failed in lsr_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));          	
          	testRunner.fail("Verification failed in lsr_message .");
          	tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Fail" )               		       	
          }
	}
	else{
		sql.eachRow("select * from lsr_message where pon = ${pon} and ilec = ${customerid}  and ver=${verreq} order by datetime")
		{row -> dbResults <<  (row.TYPE + ":" + row.ACTION);}
		sqlreceive.eachRow("select * from receive_lsr_message where pon = ${pon} and customerid = ${customerid}  and ver=${verreq} order by datetime")
          {row -> dbResultsReceive <<  (row.TYPE + ":" + row.ACTION);}
          log.info(dbResults)
          log.info(dbResultsReceive)
          if((statusList == dbResults) && (statusListReceive == dbResultsReceive)){
          	log.info("Verification passed in lsr_message. Found Statuses: " + dbResults.join(","));
          	log.info("Verification passed in receive_lsr_message. Found Statuses: " + dbResultsReceive.join(","));
          	tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Pass" )               		       	
          }
          else{
          	log.error("Verification failed in lsr_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));
          	log.error("Verification failed in receive_lsr_message. Expected Status: " + statusListReceive.join(",") + " Actual status: " + dbResultsReceive.join(","));
          	testRunner.fail("Verification failed in receive_lsr_message and lsr_message .");
          	tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Fail" )               		       	
          }
	}	
}
else{
	if(event[0].equals("addressMatch")){
		sql.eachRow("select * from SUPPLIER_AVQ_MESSAGE where pon = ${pon} and ilec = ${customerid}   order by datetime")
		{row -> dbResults <<  (row.TYPE + ":" + row.ACTION);}
		sqlreceive.eachRow("select * from RECEIVE_SUPPLIER_AVQ_MESSAGE where pon = ${pon} and customerid = ${customerid}   order by datetime")
         	{row -> dbResultsReceive <<  (row.TYPE + ":" + row.ACTION);}
         	log.info(dbResults)
         	log.info(dbResultsReceive)
         	if((statusList == dbResults) && (statusListReceive == dbResultsReceive)){
         		log.info("Verification passed in SUPPLIER_AVQ_MESSAGE. Found Statuses: " + dbResults.join(","));
         		log.info("Verification passed in RECEIVE_SUPPLIER_AVQ_MESSAGE. Found Statuses: " + dbResultsReceive.join(","));
          	tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Pass" )               		       	
          }
          else{
          	log.error("Verification failed in SUPPLIER_AVQ_MESSAGE. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));
          	log.error("Verification failed in RECEIVE_SUPPLIER_AVQ_MESSAGE. Expected Status: " + statusListReceive.join(",") + " Actual status: " + dbResultsReceive.join(","));
          	testRunner.fail("Verification failed in SUPPLIER_AVQ_MESSAGE and RECEIVE_SUPPLIER_AVQ_MESSAGE .");
          	tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Fail" )               		       	
          }
	}
	else{
		if(event[0].equals("csr")){
			sql.eachRow("select * from CSR_MESSAGE where inqnum = ${pon} and ilec = ${customerid}   order by datetime")
			{row -> dbResults <<  (row.TYPE + ":" + row.ACTION);}
			sqlreceive.eachRow("select * from RECEIVE_CSR_MESSAGE where inqnum = ${pon} and customerid = ${customerid}   order by datetime")
          	{row -> dbResultsReceive <<  (row.TYPE + ":" + row.ACTION);}
          	log.info(dbResults)
          	log.info(dbResultsReceive)
          	if((statusList == dbResults) && (statusListReceive == dbResultsReceive)){
          		log.info("Verification passed in CSR_MESSAGE. Found Statuses: " + dbResults.join(","));
          		log.info("Verification passed in RECEIVE_CSR_MESSAGE. Found Statuses: " + dbResultsReceive.join(","));
          		tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Pass" )               		       	
          	}
          	else{
          		log.error("Verification failed in CSR_MESSAGE. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));
          		log.error("Verification failed in RECEIVE_CSR_MESSAGE. Expected Status: " + statusListReceive.join(",") + " Actual status: " + dbResultsReceive.join(","));
          		testRunner.fail("Verification failed in CSR_MESSAGE and RECEIVE_CSR_MESSAGE .");
          		tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Fail" )               		       	
          	}
		}
		else{
			if(event[0].equals("loop")){
				sql.eachRow("select * from LOOPQUAL_MESSAGE where txnum = ${pon} and ilec = ${customerid}   order by datetime")
				{row -> dbResults <<  (row.TYPE + ":" + row.ACTION);}
				sqlreceive.eachRow("select * from RECEIVE_LOOPQUAL_MESSAGE where txnum = ${pon} and customerid = ${customerid}   order by datetime")
          		{row -> dbResultsReceive <<  (row.TYPE + ":" + row.ACTION);}
          		log.info(dbResults)
          		log.info(dbResultsReceive)
          		if((statusList == dbResults) && (statusListReceive == dbResultsReceive)){
          			log.info("Verification passed in LOOPQUAL_MESSAGE. Found Statuses: " + dbResults.join(","));
          			log.info("Verification passed in RECEIVE_LOOPQUAL_MESSAGE. Found Statuses: " + dbResultsReceive.join(","));
          			tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Pass" )               		       	
          		}
          		else{
          			log.error("Verification failed in LOOPQUAL_MESSAGE. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));
          			log.error("Verification failed in RECEIVE_LOOPQUAL_MESSAGE. Expected Status: " + statusListReceive.join(",") + " Actual status: " + dbResultsReceive.join(","));
          			testRunner.fail("Verification failed in LOOPQUAL_MESSAGE and RECEIVE_LOOPQUAL_MESSAGE .");
          			tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Fail" )               		       	
          		} 
			}
			else{
				sql.eachRow("select * from LSR_PREORDER_NF_MESSAGE where txnum = ${pon} and ilec = ${customerid}   order by datetime")
				{row -> dbResults <<  (row.TYPE + ":" + row.ACTION);}
				sqlreceive.eachRow("select * from RECEIVE_LSR_PO_NF_MESSAGE where txnum = ${pon} and customerid = ${customerid}   order by datetime")
          		{row -> dbResultsReceive <<  (row.TYPE + ":" + row.ACTION);}
          		log.info(dbResults)
          		log.info(dbResultsReceive)
          		if((statusList == dbResults) && (statusListReceive == dbResultsReceive)){
          			log.info("Verification passed in LSR_PREORDER_NF_MESSAGE. Found Statuses: " + dbResults.join(","));
          			log.info("Verification passed in RECEIVE_LSR_PO_NF_MESSAGE. Found Statuses: " + dbResultsReceive.join(","));
          			tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Pass" )               		       	
          		}
          		else{
          			log.error("Verification failed in LSR_PREORDER_NF_MESSAGE. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));
          			log.error("Verification failed in RECEIVE_LSR_PO_NF_MESSAGE. Expected Status: " + statusListReceive.join(",") + " Actual status: " + dbResultsReceive.join(","));
          			testRunner.fail("Verification failed in LSR_PREORDER_NF_MESSAGE and RECEIVE_LSR_PO_NF_MESSAGE .");
          			tc.setPropertyValue("VALIDATE_LSR_AND_RECEIVE_MESSAGE" , "Fail" )               		       	
          		}
			}
		}
	}
}
sql.close();]]></script></con:config></con:testStep><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>ACTION</con:name><con:value/></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="E911_BWC_DB_VALIDATION" searchProperties="true" disabled="true" id="5d44e3ae-afd2-4aa4-8d6b-6376867520de"><con:settings/><con:testStep type="properties" name="REMARKS" id="32210a24-7394-469e-a309-175917484688"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cancel</con:name><con:value>info:cancel</con:value></con:property><con:property><con:name>abandon</con:name><con:value>info:abandon</con:value></con:property><con:property><con:name>suspend</con:name><con:value>info:suspend</con:value></con:property><con:property><con:name>resume</con:name><con:value>info:resume</con:value></con:property><con:property><con:name>ValidateStatusValid</con:name><con:value>validateLocationSuccess</con:value></con:property><con:property><con:name>ValidateLocationValid</con:name><con:value>validateLocationSuccess:receive,validateLocation:submit</con:value></con:property><con:property><con:name>ValidateStatusInvalid</con:name><con:value>validateLocationFailure</con:value></con:property><con:property><con:name>ValidateLocationInvalid</con:name><con:value>validateLocationFailure:receive,validateLocation:submit</con:value></con:property><con:property><con:name>AddStatusValid</con:name><con:value>addLocationSuccess:added</con:value></con:property><con:property><con:name>AddLocationValid</con:name><con:value>addLocationSuccess:receive,addLocation:submit</con:value></con:property><con:property><con:name>AddStatusFailure</con:name><con:value>addLocationFailure:added</con:value></con:property><con:property><con:name>AddLocationFailure</con:name><con:value>addLocationFailure:receive,addLocation:submit</con:value></con:property><con:property><con:name>AddStatusProvisioned</con:name><con:value>addLocationSuccess:provisioned</con:value></con:property><con:property><con:name>AddLocationProvisioned</con:name><con:value>addLocationSuccess:receive,addLocation:submit</con:value></con:property><con:property><con:name>ProvisionStatusValid</con:name><con:value>provisionLocationSuccess:provisioned</con:value></con:property><con:property><con:name>ProvisionLocationValid</con:name><con:value>provisionLocationSuccess:receive,provisionLocation:submit</con:value></con:property><con:property><con:name>ProvisionStatusInValid</con:name><con:value>provisionLocationFailure:added</con:value></con:property><con:property><con:name>ProvisionLocationInValid</con:name><con:value>provisionLocationFailure:receive,provisionLocation:submit</con:value></con:property><con:property><con:name>RemoveStatusValid</con:name><con:value>removeLocationSuccess:added</con:value></con:property><con:property><con:name>RemoveLocationValid</con:name><con:value>removeLocationSuccess:receive,removeLocation:submit</con:value></con:property><con:property><con:name>RemoveStatusInValid</con:name><con:value>removeLocationFailure:added</con:value></con:property><con:property><con:name>RemoveLocationInValid</con:name><con:value>removeLocationFailure:receive,removeLocation:submit</con:value></con:property><con:property><con:name>RemoveUriStatusValid</con:name><con:value>removeURISuccess:removed</con:value></con:property><con:property><con:name>RemoveUriValid</con:name><con:value>removeURISuccess:receive,removeURI:submit</con:value></con:property><con:property><con:name>RemoveUriStatusInValid</con:name><con:value>removeURIFailure:added</con:value></con:property><con:property><con:name>RemoveUriInValid</con:name><con:value>removeURIFailure:receive,removeURI:submit</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_CALL_VALIDATION" id="dff466c4-9ee7-47fc-8503-f0f5c926e1b3"><con:settings/><con:config><script>def tc=testRunner.testCase
def run=testRunner
run.runTestStepByName("E911_TRANS_VALIDATION")
run.runTestStepByName("CH_ORDER_VALIDATION")     
run.runTestStepByName("E911_TXEVENT_HISTORY_VALIDATION")
run.runTestStepByName("E911_BWC_MESSAGE_VALIDATION")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="groovy" name="E911_TRANS_VALIDATION" id="bb85e063-8470-4ffc-b9f7-1d9eb57c6b0b"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;


String sheet = tc.getPropertyValue("TC_TYPE");
String customerid = tc.getPropertyValue("CUSTOMER");
String ordernumber = tc.getPropertyValue("ORDERNUMBER");
String ver = tc.getPropertyValue("HEADERVER");
String ilec = tc.getPropertyValue("ILEC");
String remarks = tc.getPropertyValue("REMARKS");
String status = tc.getPropertyValue("STATUS");
String phone = tc.getPropertyValue("PHONE")
String subrequest = tc.getPropertyValue("SUBREQUEST")
phone = "%"+phone+"%"
 
log.info 'Query Input: HEADERVER=' + ver 
log.info 'Query Input: ILEC=' + ilec 
log.info 'Query Input: TC_TYPE=' + sheet 
log.info 'Query Input: Customer ID=' + customerid 
log.info 'Query Input: REMARKS=' + remarks 
log.info 'Query Input: PHONE=' + phone 
log.info 'Query Input: STATUS=' + status 
log.info 'Query Input: SUB REQUEST=' + subrequest 

statuses = tc.getTestStepByName("REMARKS").getPropertyValue(status);

if (!statuses) 
{
	log.error("Remarks code : " + event + " not found in repository!");
	testRunner.fail("Expected Event code not found in repository");
}

///////////////////////////////////
//Get the DB string
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);
if(subrequest.equals("provisionLocation")){
	if(status.equals("ProvisionStatusValid")){
		ordernumber="12201320"
	}else{
		ordernumber="90909090"
	}
	Thread.currentThread().sleep(30000)
	log.info 'Query Input: ORDERNUMBER=' + ordernumber
	def oid=sql.firstRow("select oid from ch_e911_trans where ordernumber = ${ordernumber}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
	String newoid=oid[0]
	log.info 'OID value : =' + newoid
	tc.setPropertyValue("OID" , newoid )
	def newstatus=sql.firstRow("select status from ch_e911_trans where ordernumber = ${ordernumber}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
	String oristatuses=newstatus[0]
	if(statuses.contains(oristatuses)){
		log.info("Verification passed in CH_E911_TRANS. Found Statuses: " + oristatuses)
		tc.setPropertyValue("E911_TRANS_VALIDATION_FLAG" , "Pass" )
	}
	else{
		log.error("Verification failed in CH_E911_TRANS. Expected Status: " + statuses + " Actual status: " + oristatuses)
		//testRunner.fail("Verification failed in CH_E911_TRANS.")
		tc.setPropertyValue("E911_TRANS_VALIDATION_FLAG" , "Fail" )
	}
}
else{
	if(subrequest.equals("removeLocation")){
		if(status.equals("RemoveStatusInValid")){
			ordernumber="45645646"
		}
		else{
			ordernumber=ordernumber
		}
		log.info 'Query Input: ORDERNUMBER=' + ordernumber
		Thread.currentThread().sleep(30000)
		def oid=sql.firstRow("select oid from ch_e911_trans where ordernumber = ${ordernumber}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
		String newoid=oid[0]
		log.info 'OID value : =' + newoid
		tc.setPropertyValue("OID" , newoid )
		def newstatus=sql.firstRow("select status from ch_e911_trans where ordernumber = ${ordernumber}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
		String oristatuses=newstatus[0]
		if(statuses.contains(oristatuses)){
			log.info("Verification passed in CH_E911_TRANS. Found Statuses: " + oristatuses)
			tc.setPropertyValue("E911_TRANS_VALIDATION_FLAG" , "Pass" )
		}
		else{
			log.error("Verification failed in CH_E911_TRANS. Expected Status: " + statuses + " Actual status: " + oristatuses)	
			//testRunner.fail("Verification failed in CH_E911_TRANS.")
			tc.setPropertyValue("E911_TRANS_VALIDATION_FLAG" , "Fail" )
		}
	}
	else{
		if(subrequest.equals("removeURI")){
			if(status.equals("RemoveUriStatusInValid")){
				ordernumber="89898989"
			}
			else{
				ordernumber=ordernumber
			}
			log.info 'Query Input: ORDERNUMBER=' + ordernumber
			Thread.currentThread().sleep(30000)
			def oid=sql.firstRow("select oid from ch_e911_trans where ordernumber = ${ordernumber}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
			String newoid=oid[0]
			log.info 'OID value : =' + newoid
			tc.setPropertyValue("OID" , newoid )
			def newstatus=sql.firstRow("select status from ch_e911_trans where ordernumber = ${ordernumber}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
			String oristatuses=newstatus[0]
			if(statuses.contains(oristatuses)){
				log.info("Verification passed in CH_E911_TRANS. Found Statuses: " + oristatuses)
				tc.setPropertyValue("E911_TRANS_VALIDATION_FLAG" , "Pass" )
			}
			else{
				log.error("Verification failed in CH_E911_TRANS. Expected Status: " + statuses + " Actual status: " + oristatuses)	
				//testRunner.fail("Verification failed in CH_E911_TRANS.")
				tc.setPropertyValue("E911_TRANS_VALIDATION_FLAG" , "Fail" )
			}
		}
		else{
			if(status.equals("AddStatusProvisioned")){
				ordernumber="12091309"
			}
			else{
				ordernumber=ordernumber
			}
			log.info 'Query Input: ORDERNUMBER=' + ordernumber
			Thread.currentThread().sleep(30000)
			def oid=sql.firstRow("select oid from ch_e911_trans where ordernumber = ${ordernumber}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
			String newoid=oid[0]
			log.info 'OID value : =' + newoid
			tc.setPropertyValue("OID" , newoid )
			def newstatus=sql.firstRow("select status from ch_e911_trans where ordernumber = ${ordernumber}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
			String oristatuses=newstatus[0]
			if(statuses.contains(oristatuses)){
				log.info("Verification passed in CH_E911_TRANS. Found Statuses: " + oristatuses)
				tc.setPropertyValue("E911_TRANS_VALIDATION_FLAG" , "Pass" )
			}
			else{
				log.error("Verification failed in CH_E911_TRANS. Expected Status: " + statuses + " Actual status: " + oristatuses)
				//testRunner.fail("Verification failed in CH_E911_TRANS.")
				tc.setPropertyValue("E911_TRANS_VALIDATION_FLAG" , "Fail" )
			}
		}
	}
}
sql.close()</script></con:config></con:testStep><con:testStep type="groovy" name="CH_ORDER_VALIDATION" id="f49fcf71-c5e0-48bb-b2a3-94485d79baf9"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;

def trans_status = tc.getPropertyValue("E911_TRANS_VALIDATION_FLAG")
log.info 'E911_TRANS_VALIDATION STATUS :=' + trans_status
if(trans_status.equals("Fail") || trans_status.equals("")){
	log.info'Other Db Validation Steps has been skipped due to CH_E911_TRANS DB Result'
	tc.setPropertyValue("CH_ORDER_VALIDATION_FLAG" , "Fail" )
}
else{
String sheet = tc.getPropertyValue("TC_TYPE");
String customerid = tc.getPropertyValue("CUSTOMER");
String ordernumber = tc.getPropertyValue("ORDERNUMBER");
String ver = tc.getPropertyValue("HEADERVER");
String ilec = tc.getPropertyValue("ILEC");
String remarks = tc.getPropertyValue("REMARKS");
String status = tc.getPropertyValue("STATUS");
String phone = tc.getPropertyValue("PHONE");
phone = "%"+phone+"%"
String oid = tc.getPropertyValue("OID");
String subrequest = tc.getPropertyValue("SUBREQUEST")

log.info 'Query Input: HEADERVER=' + ver 
log.info 'Query Input: ILEC=' + ilec 
log.info 'Query Input: TC_TYPE=' + sheet 
log.info 'Query Input: Customer ID=' + customerid 
log.info 'Query Input: REMARKS=' + remarks 
log.info 'Query Input: PHONE=' + phone 
log.info 'Query Input: STATUS=' + status 
log.info 'Query Input: OID=' + oid
log.info 'Query Input: SUB REQUEST=' + subrequest 

statuses = tc.getTestStepByName("REMARKS").getPropertyValue(status);

if (!statuses) 
{
	log.error("Remarks code : " + event + " not found in repository!");
	testRunner.fail("Expected Event code not found in repository");
}

///////////////////////////////////
//Get the DB string
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);

Thread.currentThread().sleep(3000)
def newstatus=sql.firstRow("select status from ch_order where last_trans_oid = ${oid}  and cust_name = ${customerid} and supplier_name = ${ilec}  order by created_dt desc")
String oristatuses=newstatus[0]
if(statuses.contains(oristatuses)){
	log.info("Verification passed in CH_ORDER. Found Statuses: " + oristatuses)
	tc.setPropertyValue("CH_ORDER_VALIDATION_FLAG" , "Pass" )
}
else{
	log.error("Verification failed in CH_ORDER. Expected Status: " + statuses + " Actual status: " + oristatuses)
	//testRunner.fail("Verification failed in CH_ORDER.")
	tc.setPropertyValue("CH_ORDER_VALIDATION_FLAG" , "Fail" )
}
sql.close()
}</script></con:config></con:testStep><con:testStep type="groovy" name="E911_TXEVENT_HISTORY_VALIDATION" id="8c55bba9-9735-44cb-b066-78815986e783"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;

def order_status = tc.getPropertyValue("CH_ORDER_VALIDATION_FLAG")
log.info 'CH_ORDER STATUS :=' + order_status
if(order_status.equals("Fail") || order_status.equals("")){
	log.info'Other Db Validation Steps has been skipped due to CH_ORDER DB Result'
	tc.setPropertyValue("TXEVENT_DB_VALIDATION_FLAG" , "Fail" )
}
else{
String sheet = tc.getPropertyValue("TC_TYPE");
String customerid = tc.getPropertyValue("CUSTOMER");
String ordernumber = tc.getPropertyValue("ORDERNUMBER");
String ver = tc.getPropertyValue("HEADERVER");
String ilec = tc.getPropertyValue("ILEC");
String remarks = tc.getPropertyValue("REMARKS");
String status = tc.getPropertyValue("STATUS");
String subrequest = tc.getPropertyValue("SUBREQUEST");
String phone = tc.getPropertyValue("PHONE")
phone = "%"+phone+"%"
String oid = tc.getPropertyValue("OID")

log.info 'Query Input: HEADERVER=' + ver 
log.info 'Query Input: ILEC=' + ilec 
log.info 'Query Input: TC_TYPE=' + sheet 
log.info 'Query Input: Customer ID=' + customerid 
log.info 'Query Input: REMARKS=' + remarks 
log.info 'Query Input: PHONE=' + phone 
log.info 'Query Input: STATUS=' + status 
log.info 'Query Input: OID=' + oid
log.info 'Query Input: SUB REQUEST=' + subrequest 

statuses = tc.getTestStepByName("REMARKS").getPropertyValue(remarks);

if (!statuses) 
{
	log.error("Remarks code : " + event + " not found in repository!");
	testRunner.fail("Expected Event code not found in repository");
}
statusList = statuses.split(",");
///////////////////////////////////
//Get the DB string
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);

Thread.currentThread().sleep(3000)
def eventoid = sql.firstRow("select oid from e911_txevent_history where trans_parent_oid = ${oid} order by created_dt desc")
String eventoid1=eventoid[0]
String eventoid2=(eventoid1.toInteger()-1).toString()
log.info 'EVENTOID1 value : =' + eventoid1
log.info 'EVENTOID2 value : =' + eventoid2
tc.setPropertyValue("EVENTOID1" , eventoid1 )
tc.setPropertyValue("EVENTOID2" , eventoid2 )
sql.eachRow("select * from e911_txevent_history where trans_parent_oid = ${oid} and rownum &lt; 3 order by oid desc")
{row ->dbResults &lt;&lt;  (row.EVENT_CODE + ":" + row.ACTION);}
if(statusList == dbResults){
	log.info("Verification passed in E911_TXEVENT_HISTORY. Found Statuses: " + dbResults.join(","));
	tc.setPropertyValue("TXEVENT_DB_VALIDATION_FLAG" , "Pass" )
}
else{
	log.error("Verification failed in E911_TXEVENT_HISTORY. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));
	//testRunner.fail("Verification failed in E911_TXEVENT_HISTORY.");
	tc.setPropertyValue("TXEVENT_DB_VALIDATION_FLAG" , "Fail" )
}
sql.close()
}</script></con:config></con:testStep><con:testStep type="groovy" name="E911_BWC_MESSAGE_VALIDATION" id="8523420a-0c82-489d-86f0-34e34864665a"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;

def txevent_status = tc.getPropertyValue("TXEVENT_DB_VALIDATION_FLAG")
log.info 'E911_TXEVENT_HISTORY STATUS :=' + txevent_status
if(txevent_status.equals("Fail") || txevent_status.equals("")){
	log.info'Other Db Validation Steps has been skipped due to E911_TXEVENT_HISTORY DB Result'
	tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Fail" )
}
else{
String sheet = tc.getPropertyValue("TC_TYPE");
String customerid = tc.getPropertyValue("CUSTOMER");
String ordernumber = tc.getPropertyValue("ORDERNUMBER");
String ver = tc.getPropertyValue("HEADERVER");
String ilec = tc.getPropertyValue("ILEC");
String remarks = tc.getPropertyValue("REMARKS");
String status = tc.getPropertyValue("STATUS");
String phone = tc.getPropertyValue("PHONE")
String subrequest = tc.getPropertyValue("SUBREQUEST")
phone = "%"+phone+"%"
String eventoid1 = tc.getPropertyValue("EVENTOID1")
String eventoid2 = tc.getPropertyValue("EVENTOID2")

log.info 'Query Input: HEADERVER=' + ver 
log.info 'Query Input: ILEC=' + ilec 
log.info 'Query Input: TC_TYPE=' + sheet 
log.info 'Query Input: Customer ID=' + customerid 
log.info 'Query Input: REMARKS=' + remarks 
log.info 'Query Input: PHONE=' + phone 
log.info 'Query Input: STATUS=' + status 
log.info 'Query Input: SUB REQUEST=' + subrequest 
log.info 'Query Input: EVENT_OID1=' + eventoid1
log.info 'Query Input: EVENT_OID2=' + eventoid2

statuses = tc.getTestStepByName("REMARKS").getPropertyValue(remarks);

if (!statuses) 
{
	log.error("Remarks code : " + event + " not found in repository!");
	testRunner.fail("Expected Event code not found in repository");
}

///////////////////////////////////
//Get the DB string
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);

Thread.currentThread().sleep(3000)
def count=sql.firstRow("select count(*) from e911_bwc_message where eventoid = ${eventoid1} or eventoid = ${eventoid2} order by created_dt")
String oricount=count[0]
if(oricount.equals("2")){
	log.info("Verification passed in E911_BWC_MESSAGE. Found Count: " + oricount);
	tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Pass" )
}
else{
	log.error("Verification failed in E911_BWC_MESSAGE. Expected Status: " + "2" + " Actual status: " + oricount);
	//testRunner.fail("Verification failed in E911_BWC_MESSAGE.");
	tc.setPropertyValue("E911_DB_VALIDATION_FLAG" , "Fail" )
}
sql.close()
}</script></con:config></con:testStep><con:testStep type="delay" name="END" id="8c6fc45f-0abe-43d7-b969-2f3cf5661a7c"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>STATUS</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value/></con:property><con:property><con:name>OID</con:name><con:value/></con:property><con:property><con:name>EVENTOID1</con:name><con:value/></con:property><con:property><con:name>EVENTOID2</con:name><con:value/></con:property><con:property><con:name>E911_TRANS_VALIDATION_FLAG</con:name><con:value/></con:property><con:property><con:name>CH_ORDER_VALIDATION_FLAG</con:name><con:value/></con:property><con:property><con:name>TXEVENT_DB_VALIDATION_FLAG</con:name><con:value/></con:property><con:property><con:name>E911_DB_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ASR_ORDER_PREORDER_DB_VALIDATION_ON_SEA" searchProperties="true" disabled="true" id="9ee60441-90e1-47e8-97c3-545134dfba20"><con:settings/><con:testStep type="properties" name="STATUS" id="d42e4932-c726-4648-a3ce-825576a2dac5" disabled="true"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source/><con:properties><con:property><con:name>NEWSTATUS</con:name><con:value>new</con:value></con:property><con:property><con:name>ACKSTATUS</con:name><con:value>ack</con:value></con:property><con:property><con:name>NEGACKSTATUS</con:name><con:value>negack</con:value></con:property><con:property><con:name>FOCACCEPTSTATUS</con:name><con:value>focaccept</con:value></con:property><con:property><con:name>FOCREJECTSTATUS</con:name><con:value>focreject</con:value></con:property><con:property><con:name>JEOPARDYSTATUS</con:name><con:value>jeopardy</con:value></con:property><con:property><con:name>SOCSTATUS</con:name><con:value>soc</con:value></con:property><con:property><con:name>BCNSTATUS</con:name><con:value>billing_completion</con:value></con:property><con:property><con:name>DSRCNSTATUS</con:name><con:value>dsrcn</con:value></con:property><con:property><con:name>PIASTATUS</con:name><con:value>provider_initiated_activity</con:value></con:property><con:property><con:name>PICSTATUS</con:name><con:value>provider_initiated_cancel</con:value></con:property><con:property><con:name>INFOSTATUS</con:name><con:value>info</con:value></con:property><con:property><con:name>SUPPSTATUS</con:name><con:value>supplement</con:value></con:property><con:property><con:name>SUPPACCEPTSTATUS</con:name><con:value>suppaccept</con:value></con:property><con:property><con:name>SUPPREJECTSTATUS</con:name><con:value>suppreject</con:value></con:property><con:property><con:name>STASTATUS</con:name><con:value>status</con:value></con:property><con:property><con:name>BATCHHOTCUT</con:name><con:value>batch_hot_cut</con:value></con:property><con:property><con:name>DSREDSTATUS</con:name><con:value>dsred</con:value></con:property><con:property><con:name>ADDRESSALTERNATIVESTATUS</con:name><con:value>addressAlternative</con:value></con:property><con:property><con:name>MULTIPLERESPONSESTATUS</con:name><con:value>Multiple_response</con:value></con:property><con:property><con:name>ADDRESSERRORSTATUS</con:name><con:value>addressError</con:value></con:property><con:property><con:name>RESPONSESTATUS</con:name><con:value>response</con:value></con:property><con:property><con:name>ERRORSTATUS</con:name><con:value>error_response</con:value></con:property><con:property><con:name>ADDRESSMATCHSTATUS</con:name><con:value>addressMatch</con:value></con:property><con:property><con:name>PARSEDRESPONSESTATUS</con:name><con:value>parsed_response</con:value></con:property><con:property><con:name>UNPARSEDRESPONSESTATUS</con:name><con:value>unparsed_response</con:value></con:property><con:property><con:name>SuccessfulPost</con:name><con:value>SuccessfulPost</con:value></con:property><con:property><con:name>Post_Error</con:name><con:value>Post_Error</con:value></con:property><con:property><con:name>PostWithErrorValidator</con:name><con:value>PostWithErrorValidator</con:value></con:property><con:property><con:name>ErrorResponse</con:name><con:value>ErrorResponse</con:value></con:property><con:property><con:name>Available_Listing</con:name><con:value>Available_Listing</con:value></con:property><con:property><con:name>AvailableAndOwnedByYou</con:name><con:value>AvailableAndOwnedByYou</con:value></con:property><con:property><con:name>Unavailable</con:name><con:value>Unavailable</con:value></con:property><con:property><con:name>SubscriptionsSuccessfull</con:name><con:value>SubscriptionsSuccessfull</con:value></con:property><con:property><con:name>SubscriptionsError</con:name><con:value>SubscriptionsError</con:value></con:property><con:property><con:name>TaxonomySuccessfull</con:name><con:value>TaxonomySuccessfull</con:value></con:property><con:property><con:name>ErrorResponseTQ</con:name><con:value>ErrorResponse</con:value></con:property><con:property><con:name>abandon</con:name><con:value>abandon</con:value></con:property><con:property><con:name>suspend</con:name><con:value>suspend</con:value></con:property><con:property><con:name>resume</con:name><con:value>resume</con:value></con:property><con:property><con:name>cancel</con:name><con:value>cancel</con:value></con:property><con:property><con:name>CLARIFICATION-ERROR</con:name><con:value>CLARIFICATION-ERROR</con:value></con:property><con:property><con:name>CONFIRMATION</con:name><con:value>CONFIRMED</con:value></con:property><con:property><con:name>COMPLETE</con:name><con:value>COMPLETE</con:value></con:property><con:property><con:name>SEC_CONFIRMATION</con:name><con:value>Sec Confirmation</con:value></con:property><con:property><con:name>ACK</con:name><con:value>ACK</con:value></con:property><con:property><con:name>DLR</con:name><con:value>DLR</con:value></con:property><con:property><con:name>NACK</con:name><con:value>NACK</con:value></con:property><con:property><con:name>ERROR</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>JEOPARDY</con:name><con:value>JEOPARDY</con:value></con:property><con:property><con:name>CLEAR</con:name><con:value>CLEAR</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>REMARKS</con:value></con:property><con:property><con:name>PROVIDER_CANCELLED</con:name><con:value>PROVIDER_CANCELLED</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="VALIDATE_ASR_ORDER_PREORDER_DB_VALIDATION" id="98a73de3-48a0-475b-8e40-8be181eccf85" disabled="true"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver
def tc = testRunner.testCase
def oristatusori,orioidori,oriparentoidori

boolean fail = true

int ver = Integer.parseInt(tc.getPropertyValue("VER"))
long timeout = Long.parseLong(tc.getPropertyValue("TIMEOUT"))
String type = tc.getPropertyValue("TC_TYPE")
String event = tc.getPropertyValue("STATUS")
String supplier = tc.getPropertyValue("ILEC")
String remarks = tc.getPropertyValue("REMARKS")
String customer = tc.getPropertyValue("CUSTOMER")
String pon = tc.getPropertyValue("PON")


log.info("Query Input: PON OR TN=" + pon)
log.info("Query Input: VER=" + ver)
log.info("Query Input: TC_TYPE=" + type)
log.info("Query Input: LAST STATUS TO BE MATCHED=" + event)
log.info("Query Input: SUPPLIER =" + supplier)
log.info("Query Input: REMARKS =" + remarks)
log.info("Query Input: CUSTOMER ID =" + customer)

String statuse = tc.getTestStepByName("STATUS").getPropertyValue(event)
if (!statuse) {
	log.error("Status code : " + event + " not found in repository!")
	testRunner.fail("Expected Status code not found in repository")
}


com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" )
def dbDriver = context.expand('${#Project#DB_DRIVER}')
def dbString = context.expand('${#Project#CHPEP_DBSTRING}')
def dbArray = dbString.split("@")
def dbUP = dbArray[0].split(":")
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1]
def userPass = dbUP[3].split("/")
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver)


for(long i =0 ; i&lt;timeout;i+=25){
	log.info("loop value = " + i)
	try{
		Thread.currentThread().sleep(2000)
	}
	catch(Exception e){}
	if(type.equals("AsrOrder")){
		if(event.equals("abandon") || event.equals("suspend") || event.equals("resume") || event.equals("cancel")){
			def fstatus = sql.firstRow("select last_action from SEA_ASR_TRANS where pon=${pon} and customerid=${customer} and supplier_name=${supplier} and ver=${ver} order by last_status_dt desc")
			log.info("Message Type in DB :" + fstatus) 
               log.info("Selected status Type in Repository :" + statuse)
               if (fstatus == null){
               	log.info("Waiting of expected status in SEA_ASR_TRANS")               	
               }
               else{
               	String oristatus=fstatus[0]
               	log.info("Original status Type in DB :" + oristatus)
               	if(oristatus==statuse){
               		i = timeout
               		fail = false
	  	               log.info ("Final status found in SEA_ASR_TRANS table: " + fstatus )
	  	               tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" )               		       	
               	}
               	else{
               		log.info("Waiting of expected status in SEA_ASR_TRANS++++++++++++++++");
               	}
               }
		}
		else{
			def fstatus = sql.firstRow("select status from SEA_ASR_TRANS where pon=${pon} and customerid=${customer} and supplier_name=${supplier} and ver=${ver} order by updated_dt desc")
			log.info("Message Type in DB :" + fstatus)
               log.info("Selected status Type in Repository :" + statuse)
               if(fstatus == null){ 
               	log.info("Waiting of expected status in SEA_ASR_TRANS")
               }
               else{
               	String oristatus=fstatus[0]
               	log.info("Original status Type in DB :" + oristatus)
               	if(oristatus==statuse){
               		i = timeout
               		fail = false
               		log.info ("Final status found in SEA_ASR_TRANS table: " + fstatus )
	  	               tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" )
               	}
               	else{
               		log.info("Waiting of expected status in SEA_ASR_TRANS++++++++++++++++")
               	}
               }
		}
		
	}
	else{
			def fstatus = sql.firstRow("select status from SEA_ASR_PO_TRANS where txnum=${pon} and cust_name=${customer} and supplier_name=${supplier} order by updated_dt desc ")
			log.info("Message Type in DB :" + fstatus)
			log.info("Selected status Type in Repository :" + statuse)
			if(fstatus == null){
				log.info("Waiting of expected status in SEA_ASR_PO_TRANS")
			}
			else{
				String oristatus=fstatus[0]
				log.info("Original status Type in DB :" + oristatus)
				if(oristatus==statuse){
					i = timeout
	  	               fail = false
	  	               log.info ("Final status found in SEA_ASR_PO_TRANS table: " + fstatus )  
	  	               tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Pass" )
				}
				else{
					log.info("Waiting of expected status in SEA_ASR_PO_TRANS++++++++++++++++")
				}
			}
	}		
}
if (fail){
	testRunner.fail("MESSAGE_TYPE not received 1.")
	log.error("MESSAGE_TYPE not received 2")
	tc.setPropertyValue("PEP_DB_VALIDATION_FLAG" , "Fail" ) 	
}
sql.close()</script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>STATUS</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET_TXID_VALUE_FROM_RECEIVE_ASR__MESSAGE" searchProperties="true" disabled="true" id="39b09e8a-ec71-4464-9a04-9be0db3e7efb"><con:settings/><con:testStep type="groovy" name="QUERY_RECEIVE_ASR_MESSAGE" id="719e7ba6-6b0f-4f0d-8561-b19fc418f0c7"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;

String sheet = tc.getPropertyValue("TC_TYPE");
String remarks = tc.getPropertyValue("REMARKS");
String pon = tc.getPropertyValue("PON");
String ver = tc.getPropertyValue("HEADERVER");
String customerid = tc.getPropertyValue("CUSTOMER");
String ilec = tc.getPropertyValue("ILEC");
int verreq = Integer.parseInt(tc.getPropertyValue("VER"))

log.info("Query Input: PON OR TN=" + pon)
log.info("Query Input: VER=" + verreq)
log.info("Query Input: TC_TYPE=" + sheet)
log.info("Query Input: SUPPLIER =" + ilec)
log.info("Query Input: REMARKS =" + remarks)
log.info("Query Input: CUSTOMER ID =" + customerid)
log.info("Query Input: HEADERVER =" + ver)


com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);

if(sheet.equals("AsrReceiveOrder")){
	def txid = sql.firstRow("select TXID from RECEIVE_ASR_MESSAGE where pon = ${pon} ORDER BY CREATED DESC");	
 	String oristatuses=txid[0]
 	log.info ("TXID for Receive ASR Request is:= " + oristatuses)
 	testRunner.testCase.setPropertyValue( "TXID" , oristatuses)
}
else{
	def txid = sql.firstRow("select TXID from RECEIVE_ASR_PREORDER_MESSAGE where messageid = ${pon} ORDER BY CREATED DESC");		
	String oristatuses=txid[0]
	log.info ("TXID for Receive CFA/Location Request is:=" + oristatuses)
	testRunner.testCase.setPropertyValue( "TXID" , oristatuses )
	
}
sql.close();</script></con:config></con:testStep><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>TXID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ASR_RECEIVE_ORDER_PREORDER_DB_VALIDATION_ON_CH" searchProperties="true" disabled="true" id="9afcbacd-ff32-4d56-b2bb-f995268a66bb"><con:settings/><con:testStep type="properties" name="REMARKS" id="8ab52da6-d7d1-4e4c-9f2b-1a7391844a34"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>AckNegackRejectAcceptJeoSocPiaDsrcnDsredBcn</con:name><con:value>new:save,new:submit,ack:receive,negack:receive,focreject:receive,focaccept:receive,jeopardy:receive,soc:receive,provider_initiated_activity:receive,billing_completion:receive,dsrcn:receive,dsred:receive</con:value></con:property><con:property><con:name>RecAckNegackRejectAcceptJeoSocPiaDsrcnDsredBcn</con:name><con:value>new:receive,ack:save,ack:submit,negack:save,negack:submit,focreject:save,focreject:submit,focaccept:save,focaccept:submit,jeopardy:save,jeopardy:submit,soc:save,soc:submit,provider_initiated_activity:save,provider_initiated_activity:submit,billing_completion:save,billing_completion:submit,dsrcn:save,dsrcn:submit,dsred:save,dsred:submit</con:value></con:property><con:property><con:name>SupprejectSuppAccept</con:name><con:value>supplement:save,supplement:submit,suppreject:receive,suppaccept:receive</con:value></con:property><con:property><con:name>RecSupprejectSuppAccept</con:name><con:value>supplement:receive,suppreject:save,suppreject:submit,suppaccept:save,suppaccept:submit</con:value></con:property><con:property><con:name>cancel</con:name><con:value>info:cancel</con:value></con:property><con:property><con:name>abandon</con:name><con:value>info:abandon</con:value></con:property><con:property><con:name>suspend</con:name><con:value>info:suspend</con:value></con:property><con:property><con:name>resume</con:name><con:value>info:resume</con:value></con:property><con:property><con:name>addressMatch</con:name><con:value>request:save,request:submit,addressMatch:receive,addressAlternative:receive,addressError:receive</con:value></con:property><con:property><con:name>RecaddressMatch</con:name><con:value>request:submit,addressMatch:save,addressMatch:submit,addressAlternative:save,addressAlternative:submit,addressError:save,addressError:submit</con:value></con:property><con:property><con:name>csr</con:name><con:value>request:save,request:submit,parsed_response:receive,unparsed_response:receive,error_response:receive</con:value></con:property><con:property><con:name>Reccsr</con:name><con:value>request:submit,parsed_response:save,parsed_response:submit,unparsed_response:save,unparsed_response:submit,response:save,error_response:submit</con:value></con:property><con:property><con:name>loop</con:name><con:value>request:save,request:submit,response:receive</con:value></con:property><con:property><con:name>Recloop</con:name><con:value>request:submit,response:save,response:submit</con:value></con:property><con:property><con:name>taf</con:name><con:value>request:save,request:submit,response:receive</con:value></con:property><con:property><con:name>Rectaf</con:name><con:value>request:submit,response:save,response:submit</con:value></con:property><con:property><con:name>CFAInquirySend</con:name><con:value>CFAInquiry:save,CFAInquiry:submit,CFAResults:receive</con:value></con:property><con:property><con:name>CFAInquiryReceive</con:name><con:value>CFAInquiry:receive,CFAResults:save,CFAResults:submit</con:value></con:property><con:property><con:name>LocationInquirySend</con:name><con:value>LocationInquiry:save,LocationInquiry:submit,LocationResults:receive</con:value></con:property><con:property><con:name>LocationInquiryReceive</con:name><con:value>LocationInquiry:receive,LocationResults:save,LocationResults:submit</con:value></con:property><con:property><con:name>NEWSEND</con:name><con:value>SAVED:save,SERVICE_REQUEST:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive</con:value></con:property><con:property><con:name>NEWRECEIVE</con:name><con:value>SERVICE_REQUEST:receive,SAVED:save,ACK:submit,SAVED:save,DLR:submit,SAVED:save,NACK:submit,SAVED:save,ERROR:submit,SAVED:save,JEOPARDY:submit,SAVED:save,CLEAR:submit,SAVED:save,REMARKS:submit,SAVED:save,CLARIFICATION-ERROR:submit,SAVED:save,CLARIFICATION-ERROR:submit</con:value></con:property><con:property><con:name>SUPP4SEND</con:name><con:value>SAVED:save,SUPP_4:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,CONFIRMED:receive</con:value></con:property><con:property><con:name>SUPP4RECEIVE</con:name><con:value>SUPP_4:receive,SAVED:save,ACK:submit,SAVED:save,DLR:submit,SAVED:save,NACK:submit,SAVED:save,ERROR:submit,SAVED:save,JEOPARDY:submit,SAVED:save,CLEAR:submit,SAVED:save,REMARKS:submit,SAVED:save,CLARIFICATION-ERROR:submit,SAVED:save,CLARIFICATION-ERROR:submit,SAVED:save,CONFIRMED:submit</con:value></con:property><con:property><con:name>SUPP1SEND</con:name><con:value>SAVED:save,SUPP_1:submit,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,CONFIRMED:receive</con:value></con:property><con:property><con:name>SUPP1RECEIVE</con:name><con:value>SUPP_1:receive,SAVED:save,DLR:submit,SAVED:save,NACK:submit,SAVED:save,ERROR:submit,SAVED:save,JEOPARDY:submit,SAVED:save,CLEAR:submit,SAVED:save,REMARKS:submit,SAVED:save,CLARIFICATION-ERROR:submit,SAVED:save,CLARIFICATION-ERROR:submit,SAVED:save,CONFIRMED:submit</con:value></con:property><con:property><con:name>SUPP2SEND</con:name><con:value>SAVED:save,SUPP_2:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,CONFIRMED:receive</con:value></con:property><con:property><con:name>SUPP2RECEIVE</con:name><con:value>SUPP_2:receive,SAVED:save,ACK:submit,SAVED:save,DLR:submit,SAVED:save,NACK:submit,SAVED:save,ERROR:submit,SAVED:save,JEOPARDY:submit,SAVED:save,CLEAR:submit,SAVED:save,REMARKS:submit,SAVED:save,CLARIFICATION-ERROR:submit,SAVED:save,CLARIFICATION-ERROR:submit,SAVED:save,CONFIRMED:submit</con:value></con:property><con:property><con:name>SUPP3SEND</con:name><con:value>SAVED:save,SUPP_3:submit,ACK:receive,DLR:receive,NACK:receive,ERROR:receive,JEOPARDY:receive,CLEAR:receive,REMARKS:receive,CLARIFICATION-ERROR:receive,CLARIFICATION-ERROR:receive,COMPLETE:receive,PROVIDER_CANCELLED:receive,CONFIRMED:receive</con:value></con:property><con:property><con:name>SUPP3RECEIVE</con:name><con:value>SUPP_3:receive,SAVED:save,ACK:submit,SAVED:save,DLR:submit,SAVED:save,NACK:submit,SAVED:save,ERROR:submit,SAVED:save,JEOPARDY:submit,SAVED:save,CLEAR:submit,SAVED:save,REMARKS:submit,SAVED:save,CLARIFICATION-ERROR:submit,SAVED:save,CLARIFICATION-ERROR:submit,SAVED:save,COMPLETE:submit,SAVED:save,PROVIDER_CANCELLED:submit,SAVED:save,CONFIRMED:submit</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="VALIDATE_RECEIVE_ASR_MESSAGE" id="d664edd0-5335-4f88-bf56-bf2218349387"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
String[] event
String eventnew
def tc = testRunner.testCase;
def statusList,statusListReceive

String sheet = tc.getPropertyValue("TC_TYPE");
String pon = tc.getPropertyValue("PON");
String ver = tc.getPropertyValue("HEADERVER");
String customerid = tc.getPropertyValue("CUSTOMER");
String ilec = tc.getPropertyValue("ILEC");
int verreq = Integer.parseInt(tc.getPropertyValue("VER"))
String action = tc.getPropertyValue("ACTION");

log.info("Query Input: PON=" + pon)
log.info("Query Input: HEADERVER=" + ver)
log.info("Query Input: TC_TYPE=" + sheet)
log.info("Query Input: ILEC =" + ilec)
log.info("Query Input: ACTION =" + action)
log.info("Query Input: CUSTOMER ID =" + customerid)
log.info("Query Input: VER =" + verreq)

if(action.equals("abandon") || action.equals("suspend") || action.equals("resume") || action.equals("cancel")){
	eventnew = tc.getPropertyValue("REMARKS");
	log.info("Query Input: ASR STATUS=" + eventnew)
	def statuses = tc.getTestStepByName("REMARKS").getPropertyValue(eventnew)
	if(!statuses){
		log.error("Remarks code : " + eventnew + " not found in repository!")
		testRunner.fail("Expected Event code not found in repository")
	}
	statusList = statuses.split(",")
}
else{
	String status = tc.getPropertyValue("REMARKS");
	String delimeter="[:]"
	event = status.split(delimeter)
	log.info("Query Input: ASR SEND STATUS=" + event[0])
	log.info("Query Input: RECEIVE STATUS=" + event[1])
	def statuses = tc.getTestStepByName("REMARKS").getPropertyValue(event[0])
	def statusesReceive = tc.getTestStepByName("REMARKS").getPropertyValue(event[1])
	if (!statuses && !statusesReceive){
		log.error("Remarks code : " + event[0],event[1] + " not found in repository!")
		testRunner.fail("Expected Event code not found in repository")
	}
	statusList = statuses.split(",")
	statusListReceive = statusesReceive.split(",")
}

com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def dbResults = []
def dbResultsReceive = []
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);
def sqlreceive = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);

if(sheet.equals("AsrReceiveOrder")){
	if(action.equals("abandon") || action.equals("suspend") || action.equals("resume") || action.equals("cancel")){
		sql.eachRow("select * from send_asr_message where pon = ${pon}  and ver=${verreq} and action=${action} order by created")
		{row -> dbResults <<  (row.messagetype + ":" + row.ACTION);}		
          log.info(dbResults)         
          if(statusList == dbResults){
          	log.info("Verification passed in send_asr_message. Found Statuses: " + dbResults.join(","));          	
          	tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Pass" )               		       	
          }
          else{
          	log.error("Verification failed in send_asr_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));          	
          	testRunner.fail("Verification failed in send_asr_message .");
          	tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Fail" )               		       	
          }
	}
	else{
		sql.eachRow("select * from send_asr_message where pon = ${pon} and ver=${verreq} order by created")
		{row -> dbResults <<  (row.status + ":" + row.ACTION);}
		sqlreceive.eachRow("select * from receive_asr_message where pon = ${pon} and  ver=${verreq} order by created")
          {row -> dbResultsReceive <<  (row.status + ":" + row.ACTION);}
          log.info(dbResults)
          log.info(dbResultsReceive)
          if((statusList == dbResults) && (statusListReceive == dbResultsReceive)){
          	log.info("Verification passed in send_asr_message. Found Statuses: " + dbResults.join(","));
          	log.info("Verification passed in receive_asr_message. Found Statuses: " + dbResultsReceive.join(","));
          	tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Pass" )               		       	
          }
          else{
          	log.error("Verification failed in send_asr_message. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));
          	log.error("Verification failed in receive_asr_message. Expected Status: " + statusListReceive.join(",") + " Actual status: " + dbResultsReceive.join(","));
          	testRunner.fail("Verification failed in receive_asr_message and send_asr_message .");
          	tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Fail" )               		       	
          }
	}	
}
else{
		sql.eachRow("select * from SEND_ASR_PREORDER_MESSAGE where messageid = ${pon}  order by created ")
		{row -> dbResults <<  (row.messagetype + ":" + row.ACTION);}
		sqlreceive.eachRow("select * from RECEIVE_ASR_PREORDER_MESSAGE where messageid = ${pon}    order by created ")
         	{row -> dbResultsReceive <<  (row.messagetype + ":" + row.ACTION);}
         	log.info(dbResults)
         	log.info(dbResultsReceive)
         	if((statusList == dbResults) && (statusListReceive == dbResultsReceive)){
         		log.info("Verification passed in SEND_ASR_PREORDER_MESSAGE. Found Statuses: " + dbResults.join(","));
         		log.info("Verification passed in RECEIVE_ASR_PREORDER_MESSAGE. Found Statuses: " + dbResultsReceive.join(","));
          	tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Pass" )               		       	
          }
          else{
          	log.error("Verification failed in SEND_ASR_PREORDER_MESSAGE. Expected Status: " + statusList.join(",") + " Actual status: " + dbResults.join(","));
          	log.error("Verification failed in RECEIVE_ASR_PREORDER_MESSAGE. Expected Status: " + statusListReceive.join(",") + " Actual status: " + dbResultsReceive.join(","));
          	testRunner.fail("Verification failed in SEND_ASR_PREORDER_MESSAGE and RECEIVE_ASR_PREORDER_MESSAGE .");
          	tc.setPropertyValue("ASR_QA_VALIDATION_FLAG" , "Fail" )               		       	
          }
}
sql.close();]]></script></con:config></con:testStep><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>ACTION</con:name><con:value/></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LSR_RECIEVE_ESR_DB_VALIDATION" searchProperties="true" disabled="true" id="4bcb0357-d987-411c-9fa8-738738076ebd"><con:settings/><con:testStep type="groovy" name="DRIVER_TO_CALL_VALIDATION" id="47a02058-1166-4576-81e0-ca2c63171b0c"><con:settings/><con:config><script>def tc=testRunner.testCase
def run=testRunner
String maxver=tc.getPropertyValue("MAXVER")
String flowvalue=tc.getPropertyValue("FLOW")
String supremarkflow=tc.getPropertyValue("SUPP_REMARKS_FLOW")
log.info ("--Test 1 MAXVER " + maxver + " flow " +flowvalue + " supremarkflow " +supremarkflow)
tc.setPropertyValue( "ORDER_CONFIRMED" , "Fail" );
tc.setPropertyValue( "REJECT_ORDER_STATUS" , "Fail" );
int maxverint=0;
int verint=0;
String esrgenflag=tc.getPropertyValue("ESR_GENERATION_VALIDATION");

if(maxver.equals("")){
    log.info (" Error: max version not found ");
    testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables.  No Records found in ESR_ORDER_STATUS table.");
	tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )     
}
else{
		maxverint=Integer.parseInt(maxver);
		if (verint&lt;10){
			tc.setPropertyValue( "VER", "0"+verint);
		}
		else{
			tc.setPropertyValue( "VER", verint);
		}
		log.info ("--Test Main order status ver="+tc.getPropertyValue( "VER" ) +  " and pon "+tc.getPropertyValue("PON")  + " and Remarks "+tc.getPropertyValue("REMARKS"));
		run.runTestStepByName("ESR_XML_MESSAGE_VALIDATION");
		esrgenflag=tc.getPropertyValue("ESR_GENERATION_VALIDATION");
		 if(esrgenflag.equals("Fail")){
		 	log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + tc.getPropertyValue("PON") +  " and ver " + tc.getPropertyValue("VER") + " and customerid "+  tc.getPropertyValue("CUSTOMER") + " Error: Focaccept case failed");
			testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: Focaccept case failed");
			tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" );
		 }
		 else{
			if(flowvalue.equals("NOFLOW") || flowvalue.equals("")){
				log.info("--Test 2 NOFLOW for further Execution Found");
			}
			else{
				String delimeter="[|]"
				String[] flowExe = flowvalue.split(delimeter)
				String[] remarksflowExe = supremarkflow.split(delimeter)
				for(int j=0;j&lt;flowExe.size();j++){  	  	
					if(flowExe[j].contains("SUPP")){   		  		
						if (j&lt;remarksflowExe.size()	){	 
							tc.setPropertyValue( "REMARKS" , remarksflowExe[j] )
							log.info ("--Test 3 SELECTED SUPP REMARKS:="+remarksflowExe[j])
						}
							verint=verint+1;
							if (verint&lt;10){
								tc.setPropertyValue( "VER", "0"+verint);
							}
							else{
								tc.setPropertyValue( "VER", verint);
							}
						tc.setPropertyValue( "SUPP_FLOW_SINGLE" , flowExe[j] )
						log.info ("--Test 4 SELECTED SUPP FLOW:="+flowExe[j])		  		  		
						String fisrtvalue=Integer.toString(j);
						tc.setPropertyValue( "FIRSTFLOW" , fisrtvalue );
						String ponvalue = tc.getPropertyValue("PON");
						String flow = tc.getPropertyValue( "FLOW" );
						log.info ("--Test 5 Supp status last MAXVER="+tc.getPropertyValue( "MAXVER" ) + " j value " +j+  " fisrtvalue " +fisrtvalue + " and flow "+tc.getPropertyValue("FLOW")  + " and Remarks "+tc.getPropertyValue("REMARKS"));
						log.info ("--Test Supp order status ver="+tc.getPropertyValue( "VER" ) +  " and pon "+tc.getPropertyValue("PON")  + " and Remarks "+tc.getPropertyValue("REMARKS") + " and SUPP_FLOW_SINGLE "+tc.getPropertyValue("SUPP_FLOW_SINGLE"));
						run.runTestStepByName("ESR_XML_MESSAGE_VALIDATION");
						esrgenflag=tc.getPropertyValue("ESR_GENERATION_VALIDATION");
						if(esrgenflag.equals("Fail")){
						 	log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + tc.getPropertyValue("PON") +  " and ver " + tc.getPropertyValue("VER") + " and customerid "+  tc.getPropertyValue("CUSTOMER") + " Error: Suppaccept case failed");
							testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: Suppaccept case failed");
							tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" );
							break;  
						 }
					}	
					else{
						log.info ("SELECTED SUPP FLOW:="+flowExe[j])		  		  		
					}
				}   	
			}
		 }
}
run.gotoStepByName("END")

</script></con:config></con:testStep><con:testStep type="groovy" name="ESR_XML_MESSAGE_VALIDATION" id="c13c5e4a-1f16-4989-9b59-1eebbf8d5492"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql 
import java.sql.Clob 
import org.apache.log4j.Logger
import oracle.jdbc.driver.OracleDriver
import java.io.StringReader
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.xpath.XPath
import javax.xml.xpath.XPathFactory
import org.w3c.dom.Document
import org.xml.sax.InputSource

boolean fail = true;
def tc = testRunner.testCase;
def responseType;
def supp_flow_selected = "";
int esrverint=0;
def order_confirmed_status = tc.getPropertyValue("ORDER_CONFIRMED");
def  reject_order_status = tc.getPropertyValue("REJECT_ORDER_STATUS");
log.info("ORDER_CONFIRMED=" + order_confirmed_status);
log.info("REJECT_ORDER_STATUS=" + reject_order_status);
String[] event
String eventnew
def statusList,statusListReceive
String sheet = tc.getPropertyValue("TC_TYPE");
log.info("Query Input: TC_TYPE=" + sheet)
String pon = tc.getPropertyValue("PON");
log.info("Query Input: PON=" + pon)
String ver = tc.getPropertyValue("HEADERVER");
log.info("Query Input: HEADERVER=" + ver)
String customerid = tc.getPropertyValue("CUSTOMER");
log.info("Query Input: CUSTOMER ID =" + customerid)
String ilec = tc.getPropertyValue("ILEC");
log.info("Query Input: ILEC =" + ilec)
//int verreq = Integer.parseInt(tc.getPropertyValue("VER"))
String verreq = tc.getPropertyValue("VER");
log.info("Query Input: VER =" + verreq)
String action = tc.getPropertyValue("ACTION");
log.info("Query Input: ACTION =" + action)

responseType ="reject";
tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Pass" );
tc.setPropertyValue("ESR_REQUEST_GENERATE" , "Fail" );  

if(action.equals("abandon") || action.equals("suspend") || action.equals("resume") || action.equals("cancel")){
	
}
else{
	String status = tc.getPropertyValue("REMARKS");
	String delimeter="[:]"
	event = status.split(delimeter)
	log.info("Query Input: LSR STATUS=" + event[0]);
	log.info("Query Input: RECEIVE STATUS=" + event[1]);
		 if (event[0].contains("SuppAccept")){
			responseType ="suppaccept";
			supp_flow_selected = tc.getPropertyValue("SUPP_FLOW_SINGLE");
		}
		else if (event[0].contains("Accept")){
			responseType ="focaccept";
		} 
		else{
		 	responseType ="reject";
		}
		log.info(" Response type to be checked =" + responseType)
}
if (responseType.equals("focaccept") || responseType.equals("suppaccept")){
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);
def sqlxmlmess = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);
def sqlreceive = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);

if(sheet.equals("Order")){
if(action.equals("abandon") || action.equals("suspend") || action.equals("resume") || action.equals("cancel")){

}
else{
		log.info("Validation -----")
		log.info("ESR_ORDER_STATUS Query:: select * from ESR_ORDER_STATUS where pon = ${pon} and customerid = ${customerid}  and ver=${verreq}  order by CREATED_DT desc")
		log.info("ESR_XML_MESSAGE Query:: select * from ESR_XML_MESSAGE where pon =${pon} and customerid = ${customerid}  and ver=${verreq} order by CREATED_DT desc")
		log.info("RECEIVE_LSR_MESSAGE Query:: select * from RECEIVE_LSR_MESSAGE where pon=${pon} and action='receive' and action!='save' and customerid = ${customerid}  and ver=${verreq}  order by DATETIME desc")
		
		def row= sql.firstRow("select * from ESR_ORDER_STATUS where pon =${pon} and customerid = ${customerid}  and ver=${verreq}  order by CREATED_DT desc")
		def rowxmlmess= sqlxmlmess.firstRow("select * from ESR_XML_MESSAGE where pon =${pon} and customerid = ${customerid}  and ver=${verreq}  order by CREATED_DT desc ")
		def rowreceive= sqlreceive.firstRow("select * from RECEIVE_LSR_MESSAGE where pon=${pon} and action='receive' and action!='save' and customerid = ${customerid}  and ver=${verreq}  order by DATETIME desc")

		if (row == null){
	          	log.info("ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " No Records found in ESR_ORDER_STATUS table." );
	          	testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables.  No Records found in ESR_ORDER_STATUS table.");
	          	tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )               		       	
          }
 		else{
			if (rowreceive == null){
 					log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid +" Error: No record found for request in RECEIVE_LSR_MESSAGE");
					testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: No record found for request in RECEIVE_LSR_MESSAGE");
					tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )
 			}
 			else {
					if( reject_order_status.equals("Pass") ||  reject_order_status.equals("")){
						log.info (" This order was Rejected")
						  if(rowxmlmess){
							log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid + " Error: Order was rejected but record found in ESR_XML_MESSAGE");
							testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: Order was rejected but record found in ESR_XML_MESSAGE");
							tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
						   }
						  else{
						 	log.info("ESR_ORDER_STATUS and  ESR_XML_MESSAGE verification passed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid +" Order was rejected ");
							tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Pass" );
							tc.setPropertyValue("ESR_REQUEST_GENERATE" , "Fail" );  
						  }
					}
					else if ((order_confirmed_status.equals("Fail") || order_confirmed_status.equals("")) && supp_flow_selected.equals("SUPP1")){
						  log.info (" This order is  Rejected")
						  if(rowxmlmess){
							log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid + " Error: Order is rejected but record found in ESR_XML_MESSAGE");
							testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: Order is rejected but record found in ESR_XML_MESSAGE");
							tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
						   }
						  else{
						 	log.info("ESR_ORDER_STATUS and  ESR_XML_MESSAGE verification passed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid +" Order is rejected ");
							 tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Pass" );
							 tc.setPropertyValue("ESR_REQUEST_GENERATE" , "Fail" );  
							 tc.setPropertyValue("REJECT_ORDER_STATUS" , "Pass" );  
						  }
					}
					else{
						String portednbr =  row.PORTEDNBR;
						if (portednbr != null){
								portednbr=portednbr.replace("-", "");
						}
						String reqxml=rowreceive.MESSAGE;
						 if (reqxml == null) {	
						 	log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid +  " Error: Value of request MESSAGE is null in receive_lsr_message table");
							testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: Value of request MESSAGE is null in receive_lsr_message table ");
							tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
						 }
						else{ 	
							InputSource sourcelsr = new InputSource(new StringReader(reqxml));
							DocumentBuilderFactory dbflsr = DocumentBuilderFactory.newInstance();
							DocumentBuilder dblsr = dbflsr.newDocumentBuilder();
							Document documentlsr = dblsr.parse(sourcelsr);
							XPathFactory xpathFactorylsr = XPathFactory.newInstance();
							XPath xpathlsr = xpathFactorylsr.newXPath();
							String firstportnbrxml=xpathlsr.evaluate("//Request/lsr_order/np/np_servicedetailscontainer/np_servicedetails[1]/PORTEDNBR/@value", documentlsr);
							log.info(" First PortedNBR value of Request XML in receive_lsr_message table is " + firstportnbrxml + " ESR_ORDER_STATUS value of PortedNBR  is " +  portednbr);

							String  xmlNpCountLsr =  xpathlsr.evaluate("count(//Request/lsr_order/np/np_servicedetailscontainer/np_servicedetails)", documentlsr);
							int xmlNpCountIntLsr=Integer.parseInt(xmlNpCountLsr);
							String[] xmlNpPortedNbrArrLsr=new String[xmlNpCountIntLsr];
							
							for (int x=0; x<xmlNpPortedNbrArrLsr.length; x++  ){
									xmlNpPortedNbrArrLsr[x] =xpathlsr.evaluate("//Request/lsr_order/np/np_servicedetailscontainer/np_servicedetails["+(x+1)+"]/PORTEDNBR/@value", documentlsr);
							}

							if (firstportnbrxml != null){
								firstportnbrxml=firstportnbrxml.replace("-", "");
							}
							
							if (!(firstportnbrxml=="" && portednbr==null) && (firstportnbrxml != portednbr)){
								log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid +  " Error: Value of first request request do not match with value of PortedNBR in ESR_ORDER_STATUS.");
								testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: Value of first request request do not match with value of PortedNBR in ESR_ORDER_STATUS.");
								tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
							}
							else if(firstportnbrxml=="" && portednbr==null){
								log.info("ESR_ORDER_STATUS and  ESR_XML_MESSAGE verification passed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid +" PortedNBR value is null in receive_lsr_message and ESR_ORDER_STATUS ");
							     tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Pass" );
							     tc.setPropertyValue("ESR_REQUEST_GENERATE" , "Fail" );              
							}
							else{			
								def dbWTNString = context.expand( '${#Project#WTN_DBSTRING}' );
								def dbWTNTable = context.expand( '${#Project#WTN_TABLE_NAME}' );
								def dbWTNArray = dbWTNString.split("@");
								def dbWTNUP = dbWTNArray[0].split(":");
								def dbWTNInstance = dbWTNUP[0] + ":" + dbWTNUP[1] + ":" + dbWTNUP[2] + ":" + "@" + dbWTNArray[1];
								def userWTNPass = dbWTNUP[3].split("/");
								log.info(" Creating instancing::  ${dbWTNInstance}, ${userWTNPass[0]}, ${userWTNPass[1]}, ${dbDriver}  ")
								def sqlWTN = Sql.newInstance(dbWTNInstance,userWTNPass[0],userWTNPass[1],dbDriver);
								String queryWTN = "select * from ${dbWTNTable}  where TN = ${portednbr}" ;
								log.info(" ${dbWTNTable}  Query:: " + queryWTN);
								def rowWTN= sqlWTN.firstRow(queryWTN);
					 			
					 		     if (rowWTN==null){
									  if(rowxmlmess){
									   	log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid + " Error: No record found in  ${dbWTNTable} for  " + portednbr + " but record found in ESR_XML_MESSAGE");
										testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: No record found in  ${dbWTNTable} for  " + portednbr + " but record found in ESR_XML_MESSAGE");
										tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
									  }
									  else{
						 				log.info("ESR_ORDER_STATUS and  ESR_XML_MESSAGE verification passed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid +" No record found in  ${dbWTNTable} for  "  + portednbr);
							          	tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Pass" );
							          	tc.setPropertyValue("ESR_REQUEST_GENERATE" , "Fail" );  
									  }
					 			}
					 			else{
					 					
					 				String tos = rowWTN.ACCOUNT_TYPE;
						 			if ( !tos.equals("R")) {
						 				tc.setPropertyValue("REJECT_ORDER_STATUS" , "Pass" )
						          		log.info("ESR_ORDER_STATUS and  ESR_XML_MESSAGE verification passed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid +  " TOS is other than residential ");
						          		tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Pass" );
						          		tc.setPropertyValue("ESR_REQUEST_GENERATE" , "Fail" );  
						          	}
							          else {
							          	 	if(rowxmlmess == null) {
											          log.info("ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " No Records found in ESR_XML_MESSAGE table." );
											          testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables.  No Records found in ESR_XML_MESSAGE table.");
											          tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )               		       	
										         	}
									           else{
									          	tc.setPropertyValue("ESR_REQUEST_GENERATE" , "Pass" );  
									          	String esrpon = rowxmlmess.ESR_PON;
									          	String esrver = rowxmlmess.ESR_VER;
									          	
									          	log.info("ESR_ORDER_STATUS and  ESR_XML_MESSAGE validation start for  " + pon + " and ver " +verreq + " and customerid "+ customerid );
									          	 if (esrpon==null) {
													log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: Value of ESR PON is null or ESR PON is not generated");
													testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: Value of ESR PON is null or ESR PON is not generated");
									          		tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
												}
												else if (esrpon.length()!=16){
													log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq+  " and customerid "+ customerid + " and ESR PON " + esrpon + " Error: The total length of ESR PON is not 16");
													testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: The total length of ESR PON is not 16");
									          		tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
												}
												else if (!esrpon.substring(0, 3).equals("POA")) {
													log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq+  " and customerid "+ customerid + " and ESR PON " + esrpon + " Error: ESR PON not have the prefix 'POA'");
													testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: ESR PON not have the prefix 'POA'");
									          		tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
												}
												else {
													String seaxml=rowxmlmess.ESR_MESSAGE;
													 	if (seaxml == null) {
														 	log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid +  " Error: Value of  ESR_MESSAGE  is null or  ESR_MESSAGE is not generated");
															testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: Value of ESR_MESSAGE is null or ESR_MESSAGE is not generated");
										          			tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
														 }	
														 else  {
													 	
															java.sql.Clob seaxmlclob = (java.sql.Clob) rowxmlmess["ESR_MESSAGE"];
										  					seaxmlmessage = seaxmlclob.getAsciiStream().getText();
															InputSource source = new InputSource(new StringReader(seaxmlmessage));
															
															DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
															DocumentBuilder db = dbf.newDocumentBuilder();
															Document document = db.parse(source);
															XPathFactory xpathFactory = XPathFactory.newInstance();
															XPath xpath = xpathFactory.newXPath();
					
															String[] nameArr;
															if (rowWTN.BILL_NAME != null){
																nameArr=rowWTN.BILL_NAME.split(",");
															}	
															String tempLNLN=null;
															String tempLNFN=null;
						
															if (nameArr.length>0){
															tempLNLN=nameArr[0];
																if (nameArr.length>1){
																	tempLNFN=nameArr[1].trim();
																}
															}
															log.info("Evalute xpath" );
								
															if (order_confirmed_status.equals("Fail")){
																esrverint=0;
															}else{
																esrverint=Integer.parseInt(tc.getPropertyValue("ESRVERGEN"));
																esrverint=esrverint+1;
															}

															if (esrverint<10){
																tc.setPropertyValue( "ESRVERGEN", "0"+esrverint);
															}
															else{
																tc.setPropertyValue( "ESRVERGEN", esrverint);
															}

															String esrvergen = tc.getPropertyValue("ESRVERGEN");
															
															String  xmlNpCount =  xpath.evaluate("count(//SEA_Request/SEARequest/RequestBody/lsr_section/np_form/np_servicedetailscontainer/np_servicedetails)", document);
															int xmlNpCountInt=Integer.parseInt(xmlNpCount);
															String [] xmlNpPortedNbrArr = new String[xmlNpCountInt];
															
															for (int x=0; x<xmlNpPortedNbrArr.length; x++  ){
																	xmlNpPortedNbrArr[x] =xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/np_form/np_servicedetailscontainer/np_servicedetails["+(x+1)+"]/PORTEDNBR", document);
															}

															boolean  npPortedNbrFlag = true;

															if(xmlNpCountIntLsr != xmlNpCountInt){
																npPortedNbrFlag = false;
																log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: number of PORTEDNBR in request xml and sea xml are different. Number of PORTEDNBR in request xml: " + xmlNpCountIntLsr  + " Number of PORTEDNBR in ESR xml: "+ xmlNpCountInt);
																testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: number of PORTEDNBR in request xml and sea xml are different.");
												           	 	tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
															}
															else {
																	for (int x=0; x<xmlNpPortedNbrArr.length; x++  ){
																			if(xmlNpPortedNbrArrLsr[x] != xmlNpPortedNbrArr[x]){
																				npPortedNbrFlag = false;
																				log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: PORTEDNBR in request xml and sea xml are different. PORTEDNBR in request xml: " + xmlNpPortedNbrArrLsr[x]  + " PORTEDNBR in ESR xml: "+ xmlNpPortedNbrArr[x] + " at position " + (x+1) );
																				testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: PORTEDNBR in request xml and sea xml are different.");
																           	 	tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																			}
																	}
															}	

															String remarkscomp = "[RCV PON: "+ pon +"]";
															//String remarkscomp = "[RCV PON: AMITTEST08]";

															String xmlESRVER=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/lsr_form/lsr_adminsection/VER", document);
															String xmlREMARKS=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/lsr_form/REMARKS", document);
															String xmlLTN=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LTN", document);
															String xmlLNPL=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LNPL", document);
															String xmlLNLN=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LNLN", document);
															String xmlLNFN=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LNFN", document);
															String xmlLANO=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LANO", document);
															String xmlLASD=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LASD", document);
															String xmlLASN=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LASN", document);
															String xmlLATH=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LATH", document);
															String xmlLASS=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LASS", document);
															String xmlLALOC=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LALOC", document);
															String xmlLAST=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LAST", document);
															String xmlLAZC=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/dl_form/listinginstructionsection/LAZC", document);
					
															log.info("ESR_MESSAGE value of ESR VER is " + xmlESRVER + " value of ESR VER should be " + esrvergen );
															log.info("ESR_MESSAGE value of REMARKS is " + xmlREMARKS + " value of  REMARKS should be " + remarkscomp );
															log.info("ESR_MESSAGE value of ESR VER is " + xmlESRVER + " DB value of ESR VER is " + esrver );
															log.info("ESR_MESSAGE value of LTN is " + xmlLTN + "  value of LTN  in request xml is " + firstportnbrxml );
															log.info("ESR_MESSAGE value of LNLN is " + xmlLNLN + " DB value of LNLN is " + tempLNLN );
															log.info("ESR_MESSAGE value of LNFN is " + xmlLNFN + " DB value of LNFN is " + tempLNFN );
															log.info("ESR_MESSAGE value of LANO is " + xmlLANO + " DB value of LANO is " + rowWTN.SANO );
															log.info("ESR_MESSAGE value of LASD is " + xmlLASD + " DB value of LASD is " + rowWTN.SASD );
															log.info("ESR_MESSAGE value of LASN is " + xmlLASN + " DB value of LASN is " + rowWTN.SASN );
															log.info("ESR_MESSAGE value of LATH is " + xmlLATH + " DB value of LATH is " + rowWTN.SATH );
															log.info("ESR_MESSAGE value of LASS is " + xmlLASS + " DB value of LASS is " + rowWTN.SASS );
															log.info("ESR_MESSAGE value of LALOC is " + xmlLALOC + " DB value of LALOC is " + rowWTN.CITY );
															log.info("ESR_MESSAGE value of LAST is " + xmlLAST + " DB value of LAST is " + rowWTN.STATE );
															log.info("ESR_MESSAGE value of LAZC is " + xmlLAZC + " DB value of LAZC is " + rowWTN.ZIP );

															if (xmlLTN != null){
																xmlLTN=xmlLTN.replace("-", "");
															}
												
														if (npPortedNbrFlag == false){
															tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" ) 
												           }
												           else if (!(xmlESRVER=="" && esrvergen==null)&&(xmlESRVER != esrvergen)){
															log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: ESR VER not generated incrementally. ESR VER value in xml: " + xmlESRVER  + "  value of ESR VER should be: "+ esrvergen);
															testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: ESR VER not generated incrementally.");
												           	tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
												           }
														else if (!(xmlESRVER=="" && esrver==null)&&(xmlESRVER != esrver)){
															log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: ESR VER value does not match with its value present in database. ESR VER value in xml: " + xmlESRVER  + "  ESR VER value in db: "+ esrver);
															testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: ESR VER value does not match with its value present in database.");
												           	tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
												           }
														else if (!(xmlREMARKS=="" && remarkscomp==null)&&(xmlREMARKS != remarkscomp)){
															log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: REMARKS value does not match with its value present in database. REMARKS value in xml: " + xmlREMARKS  + "  REMARKS value in db: "+ remarkscomp);
															testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: REMARKS value does not match with its value present in database.");
												           	tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
												           }
												           else if (!(xmlLTN=="" && firstportnbrxml==null)&&(xmlLTN != firstportnbrxml)){
															log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LTN value in esr xml does not match with its value present in request xml. LTN value in esr xml: " + xmlLTN  + "  LTN value in request xml: "+ firstportnbrxml);
															testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LTN value in esr xml does not match with its value present in request xml");
												           	 tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
												           }
														else if (!(xmlLNLN=="" && tempLNLN==null)&&(xmlLNLN != tempLNLN)){
															log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LNLN value does not match with its value present in database. LNLN value in xml: " + xmlLNLN  + "  LNLN value in db: "+ tempLNLN);
															testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LNLN value does not match with its value present in database.");
												           	 tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
												           }
														else if (!(xmlLNFN=="" && tempLNFN==null)&&(xmlLNFN != tempLNFN)){
															log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LNFN value does not match with its value present in database. LNFN value in xml: " + xmlLNFN  + "  LNFN value in db: "+ tempLNFN);
															testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LNFN value does not match with its value present in database.");
												           	 tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
												           }																			
														else if (!(xmlLANO=="" && rowWTN.SANO==null)&&(xmlLANO != rowWTN.SANO)){
																log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LANO value does not match with its value present in database. LANO value in xml: " + xmlLANO  + "  LANO value in db: "+ rowWTN.SANO);
														           testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LANO value does not match with its value present in database.");
														            tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
														           }
														else if (!(xmlLASD=="" && rowWTN.SASD==null)&&(xmlLASD != rowWTN.SASD)){
																log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LASD value does not match with its value present in database. LASD value in xml: " + xmlLASD  + "  LASD value in db: "+ rowWTN.SASD);
														           testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LASD value does not match with its value present in database.");
														           tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
														           } 
														else if(!(xmlLASN=="" && rowWTN.SASN==null)&& (xmlLASN != rowWTN.SASN)){
																log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LASN value does not match with its value present in database. LASN value in xml: " + xmlLASN  + "  LASN value in db: "+ rowWTN.SASN);
														           testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LASN value does not match with its value present in database.");
														            tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
														           }
														else if(!(xmlLATH=="" && rowWTN.SATH==null)&& (xmlLATH != rowWTN.SATH)){
																log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LATH value does not match with its value present in database. LATH value in xml: " + xmlLATH  + "  LATH value in db: "+ rowWTN.SATH);
														           testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LATH value does not match with its value present in database.");
														            tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
														           }
														else if(!(xmlLASS=="" && rowWTN.SASS==null)&& (xmlLASS != rowWTN.SASS)){
																log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LASS value does not match with its value present in database. LASS value in xml: " + xmlLASS  + "  LASS value in db: "+ rowWTN.SASS);
														           testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LASS value does not match with its value present in database.");
														           tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
														           }
														else if(!(xmlLALOC=="" && rowWTN.CITY==null)&& (xmlLALOC != rowWTN.CITY)){
																log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LALOC value does not match with its value present in database. LALOC value in xml: " + xmlLALOC  + "  LALOC value in db: "+ rowWTN.CITY);
														           testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LALOC value does not match with its value present in database.");
														           tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
														           }
														else if(!(xmlLAST=="" && rowWTN.STATE==null)&& (xmlLAST != rowWTN.STATE)){
																log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LAST value does not match with its value present in database. LAST value in xml: " + xmlLAST  + "  LAST value in db: "+ rowWTN.STATE);
														           testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LAST value does not match with its value present in database.");
														           tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
														           }
														else if(!(xmlLAZC=="" && rowWTN.ZIP==null)&& (xmlLAZC != rowWTN.ZIP)){
																log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LAZC value does not match with its value present in database. LAZC value in xml: " + xmlLAZC  + "  LAZC value in db: "+ rowWTN.ZIP);
														           testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LAZC value does not match with its value present in database.");
														           tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
														           }
														else {
												
																String xmlNAME=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/NAME", document);
																String xmlSANO=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/SANO", document);
																String xmlSASD=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/SASD", document);
																String xmlSASN=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/SASN", document);
																String xmlSATH=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/SATH", document);
																String xmlSASS=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/SASS", document);
																String xmlLD1=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/LD1", document);
																String xmlLV1=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/LV1", document);
																String xmlCITY=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/CITY", document);
																String xmlSTATE=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/STATE", document);
																String xmlZIP=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/ZIP", document);
																String xmlEUMI=xpath.evaluate("//SEA_Request/SEARequest/RequestBody/lsr_section/eu_form/locationaccess/EUMI", document);
															
																log.info("ESR_MESSAGE NAME " + xmlNAME + " DB value of NAME is " + rowWTN.BILL_NAME );
																log.info("ESR_MESSAGE SANO " + xmlSANO + " DB value of SANO is " + rowWTN.SANO );
																log.info("ESR_MESSAGE SASD " + xmlSASD + " DB value of SASD is " + rowWTN.SASD );
																log.info("ESR_MESSAGE SASN " + xmlSASN + " DB value of SASN is " + rowWTN.SASN );
																log.info("ESR_MESSAGE SATH " + xmlSATH + " DB value of SATH is " + rowWTN.SATH );
																log.info("ESR_MESSAGE SASS " + xmlSASS + " DB value of SASS is " + rowWTN.SASS );
																log.info("ESR_MESSAGE LD1 " + xmlLD1 + " DB value of LD1 is " + rowWTN.LD1 );
																log.info("ESR_MESSAGE LV1 " + xmlLV1 + " DB value of LV1 is " + rowWTN.LV1 );
																log.info("ESR_MESSAGE CITY " + xmlCITY + " DB value of CITY is " + rowWTN.CITY );
																log.info("ESR_MESSAGE STATE " + xmlSTATE + " DB value of STATE is " + rowWTN.STATE );
																log.info("ESR_MESSAGE ZIP " + xmlZIP + " DB value of ZIP is " + rowWTN.ZIP );
																log.info("ESR_MESSAGE EUMI " + xmlEUMI + " Constant value of EUMI is N " );
						
																 if (!(xmlNAME=="" && rowWTN.BILL_NAME==null)&&(xmlNAME != rowWTN.BILL_NAME)){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: NAME value does not match with its value present in database. NAME value in xml: " + xmlNAME  + "  NAME value in db: "+ rowWTN.BILL_NAME);
																        	testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: NAME value does not match with its value present in database.");
																          tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																else if (!(xmlSANO=="" && rowWTN.SANO==null)&&(xmlSANO != rowWTN.SANO)){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: SANO value does not match with its value present in database. SANO value in xml: " + xmlSANO  + "  SANO value in db: "+ rowWTN.SANO);
																          testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: SANO value does not match with its value present in database.");
																          tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																
																else if (!(xmlSASD=="" && rowWTN.SASD==null)&&(xmlSASD != rowWTN.SASD)){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: SASD value does not match with its value present in database. SASD value in xml: " + xmlSASD  + "  SASD value in db: "+ rowWTN.SASD);
																          testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: SASD value does not match with its value present in database.");
																           tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																else if (!(xmlSASN=="" && rowWTN.SASN==null)&&(xmlSASN != rowWTN.SASN)){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: SASN value does not match with its value present in database. SASN value in xml: " + xmlSASN  + "  SASN value in db: "+ rowWTN.SASN);
																		testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: SASN value does not match with its value present in database.");
																           tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																else if (!(xmlSATH=="" && rowWTN.SATH==null)&&(xmlSATH != rowWTN.SATH)){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: SATH value does not match with its value present in database. SATH value in xml: " + xmlSATH  + "  SATH value in db: "+ rowWTN.SATH);
																		testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: SATH value does not match with its value present in database.");
																           tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																else if (!(xmlSASS=="" && rowWTN.SASS==null)&&(xmlSASS != rowWTN.SASS)){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: SASS value does not match with its value present in database. SASS value in xml: " + xmlSASS  + "  SASS value in db: "+ rowWTN.SASS);
																		testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: SASS value does not match with its value present in database.");
																           tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																else if (!(xmlLD1=="" && rowWTN.LD1==null)&&(xmlLD1 != rowWTN.LD1)){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LD1 value does not match with its value present in database. LD1 value in xml: " + xmlLD1  + "  LD1 value in db: "+ rowWTN.LD1);
																		testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LD1 value does not match with its value present in database.");
																           tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																else if (!(xmlLV1=="" && rowWTN.LV1==null)&&(xmlLV1 != rowWTN.LV1)){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: LV1 value does not match with its value present in database. LV1 value in xml: " + xmlLV1  + "  LV1 value in db: "+ rowWTN.LV1);
																		testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: LV1 value does not match with its value present in database.");
																           tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																else if (!(xmlCITY=="" && rowWTN.CITY==null)&&(xmlCITY != rowWTN.CITY)){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: CITY value does not match with its value present in database. CITY value in xml: " + xmlCITY  + "  CITY value in db: "+ rowWTN.CITY);
																		testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: CITY value does not match with its value present in database.");
																          tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																else if (!(xmlSTATE=="" && rowWTN.STATE==null)&&(xmlSTATE != rowWTN.STATE)){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: STATE value does not match with its value present in database. STATE value in xml: " + xmlSTATE  + "  STATE value in db: "+ rowWTN.STATE);
																		testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: STATE value does not match with its value present in database.");
																          tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																else if (!(xmlZIP=="" && rowWTN.ZIP==null)&&(xmlZIP != rowWTN.ZIP)){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid +  " Error: ZIP value does not match with its value present in database. ZIP value in xml: " + xmlZIP  + "  ZIP value in db: "+ rowWTN.ZIP);
																		testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: ZIP value does not match with its value present in database.");
																          tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																else if (!xmlEUMI.equals("N")){
																		log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: EUMI value does not match with its constant value. EUMI value in xml: " + xmlEUMI  + "  EUMI value should be N");
																		testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: EUMI value does not match with its constant value.");
																          tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																           }
																else{
																			if (order_confirmed_status.equals("Fail")){
																				if (xmlESRVER == "" || !xmlESRVER.equals("00")){
																					log.info("ESR_ORDER_STATUS and ESR_XML_MESSAGE tables verification failed for pon " + pon +  " and ver " +verreq +  " and customerid "+ customerid + " Error: ESR XML request is not a new order");
																					testRunner.fail("Verification failed in ESR_ORDER_STATUS and  ESR_XML_MESSAGE tables. Error: ESR XML request is not a new order.");
												           							 tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Fail" )  
																				}else {
																					if (supp_flow_selected.equals("SUPP1")){
																						tc.setPropertyValue("REJECT_ORDER_STATUS" , "Pass" )
																					}
																					log.info("ESR_ORDER_STATUS and  ESR_XML_MESSAGE verification passed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid  );
																          			tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Pass")
																					tc.setPropertyValue("ORDER_CONFIRMED" , "Pass")
																				}
																			}
																			else{
																				if (supp_flow_selected.equals("SUPP1")){
																					tc.setPropertyValue("REJECT_ORDER_STATUS" , "Pass" )
																				}
																				log.info("ESR_ORDER_STATUS and  ESR_XML_MESSAGE verification passed for pon " + pon +  " and ver " +verreq + " and customerid "+ customerid  );
														          				tc.setPropertyValue("ESR_GENERATION_VALIDATION" , "Pass")
																				tc.setPropertyValue("ORDER_CONFIRMED" , "Pass")
																			}
																	}
																}
												 			}	
											}               		       	
								          }
								    }
					 			}
				 			}
						}
		 			}
 			}
 		}
	}
}
sql.close();
}
]]></script></con:config></con:testStep><con:testStep type="delay" name="END" id="637996e5-cb5e-4cf1-ae1d-474102f4fadd"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>FLOW</con:name><con:value/></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>SUPP_REMARKS_FLOW</con:name><con:value/></con:property><con:property><con:name>MAXVER</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>ACTION</con:name><con:value/></con:property><con:property><con:name>ESR_GENERATION_VALIDATION</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LSR_RECIEVE_ESR_ORDER_STATUS_DB_VALIDATION" searchProperties="true" id="631f4099-ba1d-44c7-b4e1-1da85cc20027"><con:settings/><con:testStep type="groovy" name="DRIVER_TO_CALL_VALIDATION" id="8925b28d-bf67-4abc-a314-1827fe11ee40"><con:settings/><con:config><script>def tc=testRunner.testCase
def run=testRunner
run.runTestStepByName("ESR_ORDER_STATUS_VALIDATION")
run.gotoStepByName("END")
</script></con:config></con:testStep><con:testStep type="groovy" name="ESR_ORDER_STATUS_VALIDATION" id="a586731a-8eec-4ff8-9635-f60f38a88fd2"><con:settings/><con:config><script>import groovy.sql.Sql
import oracle.jdbc.driver.OracleDriver

boolean fail = true;
def tc = testRunner.testCase;
def responseType;

def order_validation_status = tc.getPropertyValue("ESR_GENERATION_ORDER_STATUS_VALIDATION")
def esrGenerationFlag=testRunner.testCase.getPropertyValue("ESR_GENERATION_FLAG")
log.info ('ESR_GENERATION_ORDER_STATUS_VALIDATION :=' + order_validation_status)
log.info("ESR GENERATION Flag Value is "+ esrGenerationFlag)
String[] event
String eventnew
def statusList,statusListReceive
String sheet = tc.getPropertyValue("TC_TYPE");
log.info("Query Input: TC_TYPE=" + sheet)
String pon = tc.getPropertyValue("PON");
log.info("Query Input: PON=" + pon)
String ver = tc.getPropertyValue("HEADERVER");
log.info("Query Input: HEADERVER=" + ver)
String customerid = tc.getPropertyValue("CUSTOMER");
log.info("Anoop Query Input: CUSTOMER ID =" + customerid)
String ilec = tc.getPropertyValue("ILEC");
log.info("Query Input: ILEC =" + ilec)
//int verreq = Integer.parseInt(tc.getPropertyValue("VER"))
String verreq = tc.getPropertyValue("VER");
log.info("Query Input: VER =" + verreq)
String action = tc.getPropertyValue("ACTION");
log.info("Query Input: ACTION =" + action)
responseType ="reject";

if(action.equals("abandon") || action.equals("suspend") || action.equals("resume") || action.equals("cancel")){
	
}
else{
	String status = tc.getPropertyValue("REMARKS");
	String delimeter="[:]"
	event = status.split(delimeter)
	log.info("Query Input: LSR STATUS=" + event[0])
	log.info("Query Input: RECEIVE STATUS=" + event[1])
	 responseType ="focaccept";
		 if (event[0].contains("SuppAccept")){
			responseType ="suppaccept";
		}
		else if (event[0].contains("Accept")){
			responseType ="focaccept";
		} 
		else{
		 	responseType ="reject";
		}
		log.info(" Response type to be checked =" + responseType)
}
if (responseType.equals("focaccept") || responseType.equals("suppaccept")){
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
def dbDriver = context.expand( '${#Project#DB_DRIVER}' );
def dbString = context.expand( '${#Project#CH_DBSTRING}' );
def dbArray = dbString.split("@");
def dbUP = dbArray[0].split(":");
def dbInstance = dbUP[0] + ":" + dbUP[1] + ":" + dbUP[2] + ":" + "@" + dbArray[1];
def userPass = dbUP[3].split("/");
def sql = Sql.newInstance(dbInstance,userPass[0],userPass[1],dbDriver);

if(sheet.equals("Order")){
	if(action.equals("abandon") || action.equals("suspend") || action.equals("resume") || action.equals("cancel")){
	
	}
	else{
		log.info("ESR_ORDER_STATUS Validation -----");
		log.info("ESR_ORDER_STATUS Query:: select pon, ver from ESR_ORDER_STATUS where pon = ${pon} and customerid = ${customerid}  and ver=${verreq}  order by CREATED_DT desc");
		//def row= sql.firstRow("select pon, ver from ESR_ORDER_STATUS where pon =${pon} and customerid = ${customerid}  and ver=${verreq}  order by CREATED_DT desc");
          def row= sql.firstRow("select pon, ver from ESR_ORDER_STATUS where pon =${pon} and ver=${verreq}  order by CREATED_DT desc");
          if(row){
          		log.info("Record found in ESR_ORDER_STATUS table -----");
          		if(esrGenerationFlag.equals("TRUE")){
		          	log.info("ESR_ORDER_STATUS TABLE verification passed for pon " + pon +  " and ver " + verreq + " and customerid "+ customerid );
		          	tc.setPropertyValue("ESR_GENERATION_ORDER_STATUS_VALIDATION" , "Pass" ) ;
          		}
          		else{
          			log.info("ESR_ORDER_STATUS TABLE verification failed for pon " + pon + " and ver " + verreq+  " and customerid "+ customerid  );
          			testRunner.fail("Verification failed in ESR_STATUS_TABLE.");
          			tc.setPropertyValue("ESR_GENERATION_ORDER_STATUS_VALIDATION" , "Fail" );
          		}
          }
          else{
	          	if(esrGenerationFlag.equals("TRUE")){
		          	log.info("ESR_ORDER_STATUS TABLE verification failed for pon faraz " + pon + " and ver " + verreq+  " and customerid "+ customerid  );
		          	testRunner.fail("Verification failed in ESR_STATUS_TABLE.");
		          	tc.setPropertyValue("ESR_GENERATION_ORDER_STATUS_VALIDATION" , "Fail" );             		       	
	          	}
	          	else{
		          	log.info("ESR_ORDER_STATUS TABLE verification passed for pon " + pon +  " and ver " + verreq + " and customerid "+ customerid  );
		          	tc.setPropertyValue("ESR_GENERATION_ORDER_STATUS_VALIDATION" , "Pass" ); 
	          	}
          }
	}	
}
sql.close();
}
</script></con:config></con:testStep><con:testStep type="delay" name="END" id="dfba5264-a476-49c1-85b4-b82e8d32de5c"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>ACTION</con:name><con:value/></con:property><con:property><con:name>ESR_GENERATION_FLAG</con:name><con:value/></con:property><con:property><con:name>ESR_GENERATION_ORDER_STATUS_VALIDATION</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="SuppAndASRCSubmission" id="83e936a4-45eb-473d-8c24-6ccafa2a225d" disabled="true"><con:description>Test Suite for submitting the Supplement,Abandon,Cancel,Resume and Suspend request</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LSR_RECEIVE_SUPPLEMENT_SUBMIT" searchProperties="true" id="c9cf9006-3369-48b5-80ed-a8d4ef1ad9f9" disabled="true"><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="7803070a-b229-46a9-bc12-212b69187afc"><con:settings/><con:config><script>def run=testRunner
String test_name = testRunner.testCase.getPropertyValue( "TEST_NAME" )
def esrGenerationFlag=testRunner.testCase.getPropertyValue("ESRGENERATION")
log.info(" Supp ESR GENERATION Flag Value is "+ esrGenerationFlag)
String singleflow = testRunner.testCase.getPropertyValue( "FIRSTFLOW" )
int first =Integer.parseInt(singleflow)
String ver=testRunner.testCase.getPropertyValue( "VER" )

String flow = testRunner.testCase.getPropertyValue( "FLOW" )
String delimeter="[|]"
String[] flowArray = flow.split(delimeter);
for(int j=first;j&lt;flowArray.size();j++){	
	String array=flowArray[j]
	String supp= array.substring(array.length() - 1); 	
     testRunner.testCase.setPropertyValue( "SUPP", supp )
     if(ver.equals("")){
     	testRunner.testCase.setPropertyValue( "VER", "0"+(j+1))
     	testRunner.testCase.setPropertyValue( "VERNEW", "0"+(j+1) )
     }
     else{
     	int newver=Integer.parseInt(testRunner.testCase.getPropertyValue( "VER" ))
     	newver=newver+1
     	String vernew=Integer.toString(newver)
     	testRunner.testCase.setPropertyValue( "VER", "0"+vernew )
     	testRunner.testCase.setPropertyValue( "VERNEW", "0"+vernew )
     }
	log.info testRunner.testCase.getPropertyValue( "VER" )	
	log.info testRunner.testCase.getPropertyValue( "VERNEW" )
	run.runTestStepByName("VALIDATE_REQUEST")
	run.runTestStepByName("SAVE_REQUEST")
	run.runTestStepByName("SUBMIT_REQUEST")
	run.runTestStepByName("RESPONSE_TRANSFER")
	run.runTestStepByName("VALIDATION_ERROR_CHECK")
	run.runTestStepByName("GET_TXID")
	run.runTestStepByName("TRANSFER_TXID")
	run.runTestStepByName("SUBMIT_API_RESPONSE")
	run.runTestStepByName("VALIDATE_ESR_ORDER_STATUS_SUPP")
	run.runTestStepByName("VALIDATE_SEA_LSR_RECEIVE_TRANS")
	run.runTestStepByName("VALIDATE_LSR_AND_RECEIVE_MESSAGE")
	run.runTestStepByName("TRANSFER_FLAG")
	break ;
}
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="4fb11213-ce7a-4309-b857-86c56bb44d96"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="7ba0744a-c4cb-4834-85da-ed56512a6600"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="cbc5e6e6-295f-47ec-a408-3ea4a1be32bc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="db566633-0230-4ce8-a08e-2491b61112d1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="a693695a-e536-401e-b16e-85461a17f7d4"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_SUPP","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_SUPP","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_SUPP","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_TXID" id="cecf31e8-264a-4569-b49f-38d6913632ed"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4ce54f68-3bec-4c31-8640-f3e72eee0c92</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>35468</con:value></con:property></con:properties><con:returnProperties><con:entry>TXID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_TXID" id="736cb967-1921-4f5f-8572-2eadc5bae53b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>TXID</con:name><con:sourceType>TXID</con:sourceType><con:sourceStep>GET_TXID</con:sourceStep><con:targetType>TXID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_API_RESPONSE" id="5ca72fd3-c5ad-42e0-94f5-3c805a1dcd66"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2d8f942e-ade9-4249-8d74-6f56236ee662</con:targetTestCase><con:properties><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSE_VALIDATION_ERROR_CHECK_FLAG</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VERNEW}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property></con:properties><con:returnProperties><con:entry>RESPONSE_VALIDATION_ERROR_CHECK_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_ESR_ORDER_STATUS_SUPP" id="b7611483-1daf-48c9-a677-bd5b5142b922"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>631f4099-ba1d-44c7-b4e1-1da85cc20027</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VERNEW}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>ACTION</con:name></con:property><con:property><con:name>ESR_GENERATION_FLAG</con:name><con:value>${#TestCase#ESRGENERATION}</con:value></con:property><con:property><con:name>ESR_GENERATION_ORDER_STATUS_VALIDATION</con:name><con:value/></con:property></con:properties><con:returnProperties><con:entry>ESR_GENERATION_ORDER_STATUS_VALIDATION</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEA_LSR_RECEIVE_TRANS" id="d886bbaa-2055-4e52-8e58-e3d5e8bffdc8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>8eca4b1c-01f5-45b4-8a42-9c7e49a17a23</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#SUPP_STATUS}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VERNEW}</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:returnProperties><con:entry>PEP_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_LSR_AND_RECEIVE_MESSAGE" id="b8015735-26b1-47ce-bdf8-92b7b513bb61"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c396fcfa-0000-40a3-bc54-d58c95b41521</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VERNEW}</con:value></con:property><con:property><con:name>ACTION</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:returnProperties><con:entry>VALIDATE_LSR_AND_RECEIVE_MESSAGE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_FLAG" id="979902da-8612-4290-aae4-2db715d5a550"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>PEP</con:name><con:sourceType>PEP_DB_VALIDATION_FLAG</con:sourceType><con:sourceStep>VALIDATE_SEA_LSR_RECEIVE_TRANS</con:sourceStep><con:targetType>PEP_DB_VALIDATION_FLAG_SUPP</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>LSR</con:name><con:sourceType>LSR_QA_VALIDATION_FLAG</con:sourceType><con:sourceStep>VALIDATE_LSR_AND_RECEIVE_MESSAGE</con:sourceStep><con:targetType>LSR_QA_VALIDATION_FLAG_SUPP</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="END" id="347bfd6c-3217-4f75-a01e-7b45cb18f803"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TXID</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value/></con:property><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value/></con:property><con:property><con:name>SUPP_STATUS</con:name><con:value/></con:property><con:property><con:name>SUPP_REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value/></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>FLOW</con:name><con:value/></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value/></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value/></con:property><con:property><con:name>VERNEW</con:name><con:value/></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG_SUPP</con:name><con:value/></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG_SUPP</con:name><con:value/></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG_SUPP</con:name><con:value/></con:property><con:property><con:name>ESRGENERATION</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LSR_RECEIVE_ARSC_SUBMIT" searchProperties="true" id="00ef6a3b-c8e2-4ac7-97bc-66bf9a2ef869" disabled="true"><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="285f1b47-5b0c-4e86-bc9f-aad565ebefa4"><con:settings/><con:config><script>def run=testRunner
String singleflow = testRunner.testCase.getPropertyValue( "FIRSTFLOW" )
String tctype = testRunner.testCase.getPropertyValue( "TC_TYPE" )
int first =Integer.parseInt(singleflow)
String flow = testRunner.testCase.getPropertyValue( "FLOW" )
String delimeter="[|]"
String[] flowArray = flow.split(delimeter);
for(int j=first;j&lt;flowArray.size();j++){	
     if(flowArray[j].equals("Abandon")){
     	run.runTestStepByName("ABANDON_REQUEST")
     	testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "abandon" )
     	def response = context.expand( '${#ABANDON_REQUEST#RESPONSE}' )
     	testRunner.testCase.setPropertyValue( "RESPONSE" , response )
     }
     else{
     	if(flowArray[j].equals("Resume")){
     		run.runTestStepByName("RESUME_REQUEST")
     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "resume" )
     		def response = context.expand( '${#RESUME_REQUEST#RESPONSE}' )
     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     }
	     else{
	     	if(flowArray[j].equals("Cancel")){
	     		run.runTestStepByName("CANCEL_REQUEST")
	     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "cancel" )
	     		def response = context.expand( '${#CANCEL_REQUEST#RESPONSE}' )
	     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     	}
	     	else{
	     		run.runTestStepByName("SUSPEND_REQUEST")
	     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "suspend" )
	     		def response = context.expand( '${#SUSPEND_REQUEST#RESPONSE}' )
	     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     	}	     	
	     }
     }
	break ;
}
run.runTestStepByName("VALIDATION_ERROR_CHECK")
run.runTestStepByName("VALIDATE_SEA_LSR_RECEIVE_TRANS")
run.runTestStepByName("VALIDATE_LSR_AND_RECEIVE_MESSAGE")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="calltestcase" name="CANCEL_REQUEST" id="089fb5a6-3133-4087-a659-9b775d629179"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>cancel</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ABANDON_REQUEST" id="560891a8-b246-4f13-aa09-0a684efda78f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>abandon</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="RESUME_REQUEST" id="fc0615c1-a639-49db-97ee-a935fb148be2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>resume</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUSPEND_REQUEST" id="ce144e4e-b1ec-4805-9b42-46e6151a2db2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>suspend</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="8389d625-feb9-4e53-aced-25cc5f773a5c"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_ASRC","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_ASRC","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_ASRC","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEA_LSR_RECEIVE_TRANS" id="251cead9-28ec-4ded-b638-31abffa3ca5a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>8eca4b1c-01f5-45b4-8a42-9c7e49a17a23</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property></con:properties><con:returnProperties><con:entry>PEP_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_LSR_AND_RECEIVE_MESSAGE" id="3bfd13db-d339-461c-bbb2-d30b3565625e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c396fcfa-0000-40a3-bc54-d58c95b41521</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ACTION</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:returnProperties><con:entry>VALIDATE_LSR_AND_RECEIVE_MESSAGE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="END" id="1750231f-b265-4713-b54d-0cad67aa1400"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value/></con:property><con:property><con:name>FLOW</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>ACTION_TYPE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LSR_SEND_SUPPLEMENT_SUBMIT" searchProperties="true" id="61a814b3-c261-4342-80bd-3a9b0105a5ec" disabled="true"><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="151445ad-67da-45e0-8329-2adb3dead685"><con:settings/><con:config><script>def run=testRunner
String test_name = testRunner.testCase.getPropertyValue( "TEST_NAME" )

String singleflow = testRunner.testCase.getPropertyValue( "FIRSTFLOW" )
int first =Integer.parseInt(singleflow)
String ver=testRunner.testCase.getPropertyValue( "VER" )

String flow = testRunner.testCase.getPropertyValue( "FLOW" )
String delimeter="[|]"
String[] flowArray = flow.split(delimeter);
for(int j=first;j&lt;flowArray.size();j++){	
	String array=flowArray[j]
	String supp= array.substring(array.length() - 1); 	
     testRunner.testCase.setPropertyValue( "SUPP", supp )
     if(ver.equals("")){
     	testRunner.testCase.setPropertyValue( "VER", "0"+(j+1))
     	testRunner.testCase.setPropertyValue( "VERNEW", "0"+(j+1) )
     }
     else{
     	int newver=Integer.parseInt(testRunner.testCase.getPropertyValue( "VER" ))
     	newver=newver+1
     	String vernew=Integer.toString(newver)
     	testRunner.testCase.setPropertyValue( "VER", "0"+vernew )
     	testRunner.testCase.setPropertyValue( "VERNEW", "0"+vernew )
     }
	log.info testRunner.testCase.getPropertyValue( "VER" )	
	log.info testRunner.testCase.getPropertyValue( "VERNEW" )
	String ilec=testRunner.testCase.getPropertyValue( "ILEC" )
	if(ilec.equals("NIS")){
		run.runTestStepByName("SAVE_REQUEST")
		run.runTestStepByName("SUBMIT_REQUEST")
		run.runTestStepByName("RESPONSE_TRANSFER")
		run.runTestStepByName("SUBMIT_API_RESPONSE")
		run.runTestStepByName("VALIDATION_ERROR_CHECK")
		run.runTestStepByName("VALIDATE_SEA_LSR_TRANS")
		run.runTestStepByName("VALIDATE_LSR_MESSAGE")
	}
	else{
		run.runTestStepByName("VALIDATE_REQUEST")
		run.runTestStepByName("SAVE_REQUEST")
		run.runTestStepByName("SUBMIT_REQUEST")
		run.runTestStepByName("RESPONSE_TRANSFER")
		run.runTestStepByName("VALIDATION_ERROR_CHECK")
		run.runTestStepByName("VALIDATE_SEA_LSR_TRANS")
		run.runTestStepByName("VALIDATE_LSR_MESSAGE")
	}
	break ;
}
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="767a62fb-be1c-4995-87e2-d9984a65fcfc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="2fc31be6-8859-4999-a7c7-302476d21380"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="56497d1f-a9c8-447d-8a82-ba7f90fe58bb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_API_RESPONSE" id="8f47d9f2-f496-40a8-9172-f15dada478c0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2d8f942e-ade9-4249-8d74-6f56236ee662</con:targetTestCase><con:properties><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSE_VALIDATION_ERROR_CHECK_FLAG</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VERNEW}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>lsr_order_response</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property></con:properties><con:returnProperties><con:entry>RESPONSE_VALIDATION_ERROR_CHECK_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="da57b57d-356b-482c-9f32-1b6db3447065"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="4fc0d9b4-67c6-4905-880d-51ff27c572c2"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TEST_NAME")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEA_LSR_TRANS" id="a98ebb1d-6072-4174-8378-8e88af9d6421"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>29ce6024-7c19-4a9b-93af-b160fc46b8d4</con:targetTestCase><con:properties><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#SUPP_STATUS}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>LOCAL_NUMBER</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>OID</con:name><con:value/></con:property><con:property><con:name>PARENT_OID</con:name><con:value/></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties><con:entry>OID</con:entry><con:entry>PARENT_OID</con:entry><con:entry>PEP_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_LSR_MESSAGE" id="83ccb71b-1dce-4694-916c-b14840ef01ae"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>a2ba0aad-5f07-490c-bb13-8cd0af012d7a</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties><con:entry>LSR_QA_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="END" id="bf94e71b-9c9e-4e4f-ba43-f9875a07ef8f"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value/></con:property><con:property><con:name>SUPP_STATUS</con:name><con:value/></con:property><con:property><con:name>SUPP_REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>FLOW</con:name><con:value/></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value/></con:property><con:property><con:name>VERNEW</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LSR_SEND_ARSC_SUBMIT" searchProperties="true" id="f38b5ed5-286b-4e28-97f6-7349768d9fd3" disabled="true"><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="b80166bc-ef31-4351-9d30-ed6dd6e7e313"><con:settings/><con:config><script>def run=testRunner
String singleflow = testRunner.testCase.getPropertyValue( "FIRSTFLOW" )
String tctype = testRunner.testCase.getPropertyValue( "TC_TYPE" )
int first =Integer.parseInt(singleflow)
String flow = testRunner.testCase.getPropertyValue( "FLOW" )
String delimeter="[|]"
String[] flowArray = flow.split(delimeter);
for(int j=first;j&lt;flowArray.size();j++){	
     if(flowArray[j].equals("Abandon")){
     	run.runTestStepByName("ABANDON_REQUEST")
     	testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "abandon" )
     	def response = context.expand( '${#ABANDON_REQUEST#RESPONSE}' )
     	testRunner.testCase.setPropertyValue( "RESPONSE" , response )
     }
     else{
     	if(flowArray[j].equals("Resume")){
     		run.runTestStepByName("RESUME_REQUEST")
     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "resume" )
     		def response = context.expand( '${#RESUME_REQUEST#RESPONSE}' )
     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     }
	     else{
	     	if(flowArray[j].equals("Cancel")){
	     		run.runTestStepByName("CANCEL_REQUEST")
	     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "cancel" )
	     		def response = context.expand( '${#CANCEL_REQUEST#RESPONSE}' )
	     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     	}
	     	else{
	     		run.runTestStepByName("SUSPEND_REQUEST")
	     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "suspend" )
	     		def response = context.expand( '${#SUSPEND_REQUEST#RESPONSE}' )
	     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     	}	     	
	     }
     }
	break ;
}
run.runTestStepByName("VALIDATION_ERROR_CHECK")
run.runTestStepByName("VALIDATE_SEA_LSR_TRANS")
run.runTestStepByName("VALIDATE_LSR_MESSAGE")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="calltestcase" name="CANCEL_REQUEST" id="e262d458-76e6-4d61-aff6-9b26be9b1e21"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>cancel</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ABANDON_REQUEST" id="60ac1cb3-76e4-4ef5-9353-8d1f7d99f85f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>abandon</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="RESUME_REQUEST" id="01b5f219-50ac-4b4c-9a7a-2bee9a718315"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>resume</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUSPEND_REQUEST" id="e7a79284-81ba-468f-98d2-636dbf167bb3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>suspend</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="e6bb3373-4797-45e8-b2f7-eb3955a6adda"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TEST_NAME")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEA_LSR_TRANS" id="4bbd5f32-33fd-4fda-9bb4-04cc3172d3be"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>29ce6024-7c19-4a9b-93af-b160fc46b8d4</con:targetTestCase><con:properties><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>LOCAL_NUMBER</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>OID</con:name><con:value/></con:property><con:property><con:name>PARENT_OID</con:name><con:value/></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties><con:entry>OID</con:entry><con:entry>PARENT_OID</con:entry><con:entry>PEP_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_LSR_MESSAGE" id="407f42d6-5650-4f9c-bab7-6e62c5437043"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>a2ba0aad-5f07-490c-bb13-8cd0af012d7a</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties><con:entry>LSR_QA_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="END" id="b84c07bb-180f-4215-9467-f686c0cb5d06"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value/></con:property><con:property><con:name>FLOW</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>ACTION_TYPE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="E911_ARSC_SUBMIT" searchProperties="true" id="0f6898f1-34cb-4155-9fd9-493552b3bcfd" disabled="true"><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="ff0991a4-5e58-4468-94f9-8aad3e472555"><con:settings/><con:config><script>def run=testRunner
String singleflow = testRunner.testCase.getPropertyValue( "FIRSTFLOW" )
String tctype = testRunner.testCase.getPropertyValue( "TC_TYPE" )
int first =Integer.parseInt(singleflow)
String flow = testRunner.testCase.getPropertyValue( "FLOW" )
String delimeter="[|]"
String[] flowArray = flow.split(delimeter);
for(int j=first;j&lt;flowArray.size();j++){	
     if(flowArray[j].equals("Abandon")){
     	run.runTestStepByName("ABANDON_REQUEST")
     	testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "abandon" )
     	def response = context.expand( '${#ABANDON_REQUEST#RESPONSE}' )
     	testRunner.testCase.setPropertyValue( "RESPONSE" , response )
     }
     else{
     	if(flowArray[j].equals("Resume")){
     		run.runTestStepByName("RESUME_REQUEST")
     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "resume" )
     		def response = context.expand( '${#RESUME_REQUEST#RESPONSE}' )
     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     }
	     else{
	     	if(flowArray[j].equals("Cancel")){
	     		run.runTestStepByName("CANCEL_REQUEST")
	     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "cancel" )
	     		def response = context.expand( '${#CANCEL_REQUEST#RESPONSE}' )
	     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     	}
	     	else{
	     		run.runTestStepByName("SUSPEND_REQUEST")
	     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "suspend" )
	     		def response = context.expand( '${#SUSPEND_REQUEST#RESPONSE}' )
	     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     	}	     	
	     }
     }
	break ;
}
run.runTestStepByName("VALIDATION_ERROR_CHECK")
run.runTestStepByName("VAILIDATE_E911_NENA_MESSAGE")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="calltestcase" name="CANCEL_REQUEST" id="d3094844-efb5-4ce0-8e01-13ebedc62815"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>cancel</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ABANDON_REQUEST" id="770ad2d9-a963-441d-ac7c-c2688440ede6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>abandon</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="RESUME_REQUEST" id="3cd85f84-5168-4e73-844b-0159fafdfe0d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>resume</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUSPEND_REQUEST" id="16795a59-7932-46ed-81f5-5caa608ac130"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>suspend</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="95d821e4-1c3c-483a-a4a3-fa8d2881fc90"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TEST_NAME")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="VAILIDATE_E911_NENA_MESSAGE" id="54b18500-a135-4f8b-a6f0-b548cb0551b4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>31b415f4-109c-46e4-857e-134c45c94f54</con:targetTestCase><con:properties><con:property><con:name>OID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>E911_DB_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties><con:entry>E911_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="End" id="4a1de1e0-837f-46a4-980e-5e1eaa3f0dfa"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value/></con:property><con:property><con:name>FLOW</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>ACTION_TYPE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ASR_SEND_SUPPLEMENT_SUBMIT" searchProperties="true" id="ac3248c0-205e-45d6-88ae-8f9c568f90f4"><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="4d35f97c-1a44-4b2c-a771-9a2582b4853d"><con:settings/><con:config><script>def run=testRunner
String test_name = testRunner.testCase.getPropertyValue( "TEST_NAME" )

String singleflow = testRunner.testCase.getPropertyValue( "FIRSTFLOW" )
int first =Integer.parseInt(singleflow)
String ver=testRunner.testCase.getPropertyValue( "VER" )

String flow = testRunner.testCase.getPropertyValue( "FLOW" )
String delimeter="[|]"
String[] flowArray = flow.split(delimeter);
for(int j=first;j&lt;flowArray.size();j++){	
	String array=flowArray[j]
	String supp= array.substring(array.length() - 1); 	
     testRunner.testCase.setPropertyValue( "SUPP", supp )
     if(ver.equals("")){
     	testRunner.testCase.setPropertyValue( "VER", "0"+(j+1))
     	testRunner.testCase.setPropertyValue( "VERNEW", "0"+(j+1) )
     }
     else{
     	int newver=Integer.parseInt(testRunner.testCase.getPropertyValue( "VER" ))
     	newver=newver+1
     	String vernew=Integer.toString(newver)
     	testRunner.testCase.setPropertyValue( "VER", "0"+vernew )
     	testRunner.testCase.setPropertyValue( "VERNEW", "0"+vernew )
     }
	log.info testRunner.testCase.getPropertyValue( "VER" )	
	log.info testRunner.testCase.getPropertyValue( "VERNEW" )
	run.runTestStepByName("VALIDATE_REQUEST")
	run.runTestStepByName("SAVE_REQUEST")
	run.runTestStepByName("SUBMIT_REQUEST")
	run.runTestStepByName("RESPONSE_TRANSFER")
	run.runTestStepByName("VALIDATION_ERROR_CHECK")
	run.runTestStepByName("SUBMIT_RESPONSE")
	run.runTestStepByName("DELAY")
	run.runTestStepByName("VALIDATE_SEA_ASR_TRANS")
	run.runTestStepByName("VALIDATE_SEND_ASR_MESSAGE")
	break ;
}
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="a36cacda-bab6-4e8d-9cda-339e8edf3a0d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="3fd8dc5e-3968-4989-b0bd-c63de0fffdc2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="dfc4547b-5bda-4da7-b10d-8936a0680da5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="599064d7-d9ef-4e43-919a-9eb2ddba201d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="7ca5796b-69ae-4f15-9981-279c9ada86bb"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TEST_NAME")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_RESPONSE" id="ea95745e-c0ac-4421-9af1-a414653d3456"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c03f4e9d-d4cb-456e-978d-92dcc807b254</con:targetTestCase><con:properties><con:property><con:name>SINGLERESPONSEFILE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>MECHANISM</con:name><con:value>${#TestCase#RESPONSEMECHANISM}</con:value></con:property><con:property><con:name>ASOG_VER</con:name><con:value>${#TestCase#ASOG_VER}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>SUBREQUESTRESPONSE</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="4d194f62-ad4a-4693-954a-edf9632956ae"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEA_ASR_TRANS" id="5cc61266-1ef7-454f-ad8d-045efb40bda9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>9ee60441-90e1-47e8-97c3-545134dfba20</con:targetTestCase><con:properties><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#SUPP_STATUS}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEND_ASR_MESSAGE" id="86628f9c-8e41-414f-aee8-4ba5a2e402ad"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c93c21cf-7479-4db4-8379-244c9fc7e1a6</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="END" id="049c5d4a-3841-4837-8c00-24119530ca05"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value/></con:property><con:property><con:name>SUPP_STATUS</con:name><con:value/></con:property><con:property><con:name>SUPP_REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>FLOW</con:name><con:value/></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value/></con:property><con:property><con:name>VERNEW</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>ICSC</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value/></con:property><con:property><con:name>RESPONSEMECHANISM</con:name><con:value/></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value/></con:property><con:property><con:name>RESPONSETAG</con:name><con:value/></con:property><con:property><con:name>ASOG_VER</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ASR_SEND_ARSC_SUBMIT" searchProperties="true" id="a3f9d00c-3a1c-443b-9e82-4af044b11ea0" disabled="true"><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="639e3c6f-c019-4752-9482-1f119d11f771"><con:settings/><con:config><script>def run=testRunner
String singleflow = testRunner.testCase.getPropertyValue( "FIRSTFLOW" )
String tctype = testRunner.testCase.getPropertyValue( "TC_TYPE" )
int first =Integer.parseInt(singleflow)
String flow = testRunner.testCase.getPropertyValue( "FLOW" )
String delimeter="[|]"
String[] flowArray = flow.split(delimeter);
for(int j=first;j&lt;flowArray.size();j++){	
     if(flowArray[j].equals("Abandon")){
     	run.runTestStepByName("ABANDON_REQUEST")
     	testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "abandon" )
     	def response = context.expand( '${#ABANDON_REQUEST#RESPONSE}' )
     	testRunner.testCase.setPropertyValue( "RESPONSE" , response )
     }
     else{
     	if(flowArray[j].equals("Resume")){
     		run.runTestStepByName("RESUME_REQUEST")
     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "resume" )
     		def response = context.expand( '${#RESUME_REQUEST#RESPONSE}' )
     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     }
	     else{
	     	if(flowArray[j].equals("Cancel")){
	     		run.runTestStepByName("CANCEL_REQUEST")
	     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "cancel" )
	     		def response = context.expand( '${#CANCEL_REQUEST#RESPONSE}' )
	     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     	}
	     	else{
	     		run.runTestStepByName("SUSPEND_REQUEST")
	     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "suspend" )
	     		def response = context.expand( '${#SUSPEND_REQUEST#RESPONSE}' )
	     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     	}	     	
	     }
     }
	break ;
}
run.runTestStepByName("VALIDATION_ERROR_CHECK")
run.runTestStepByName("DELAY")
run.runTestStepByName("VALIDATE_SEA_ASR_TRANS")
run.runTestStepByName("VALIDATE_SEND_ASR_MESSAGE")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="calltestcase" name="CANCEL_REQUEST" id="726388ea-0445-48c9-b27d-ee79c0e70814"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>cancel</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ABANDON_REQUEST" id="6c94d29d-432c-47e4-ab63-ef14178c4a38"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>abandon</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="RESUME_REQUEST" id="cc379f80-fb0c-4a49-ad5f-d170705f5fe4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>resume</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUSPEND_REQUEST" id="75d746a4-fa8c-436c-adf4-e12e883fea9e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>suspend</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="25ad3eea-61e7-414c-bd49-dc2b51648dec"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TEST_NAME")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
	}
}
}</script></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="579c35b3-2be0-4264-b054-35453b9c30a0"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEA_ASR_TRANS" id="c7cc8682-be4b-457a-900a-9b1b5f4964dd"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>9ee60441-90e1-47e8-97c3-545134dfba20</con:targetTestCase><con:properties><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEND_ASR_MESSAGE" id="f1b72ee4-aba4-40de-8113-de9871886fd6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c93c21cf-7479-4db4-8379-244c9fc7e1a6</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="END" id="d0bbe044-e986-48a7-91fb-e4721d4fa0ef"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value/></con:property><con:property><con:name>FLOW</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>ACTION_TYPE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ASR_RECEIVE_SUPPLEMENT_SUBMIT" searchProperties="true" disabled="true" id="6347556d-36ac-44e3-a7a0-ffa0cac68085"><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="ff157351-add3-4443-8f19-e64126f9e01f"><con:settings/><con:config><script>def run=testRunner
String test_name = testRunner.testCase.getPropertyValue( "TEST_NAME" )

String singleflow = testRunner.testCase.getPropertyValue( "FIRSTFLOW" )
int first =Integer.parseInt(singleflow)
String ver=testRunner.testCase.getPropertyValue( "VER" )

String flow = testRunner.testCase.getPropertyValue( "FLOW" )
String delimeter="[|]"
String[] flowArray = flow.split(delimeter);
for(int j=first;j&lt;flowArray.size();j++){	
	String array=flowArray[j]
	String supp= array.substring(array.length() - 1); 	
     testRunner.testCase.setPropertyValue( "SUPP", supp )
     if(ver.equals("")){
     	testRunner.testCase.setPropertyValue( "VER", "0"+(j+1))
     	testRunner.testCase.setPropertyValue( "VERNEW", "0"+(j+1) )
     }
     else{
     	int newver=Integer.parseInt(testRunner.testCase.getPropertyValue( "VER" ))
     	newver=newver+1
     	String vernew=Integer.toString(newver)
     	testRunner.testCase.setPropertyValue( "VER", "0"+vernew )
     	testRunner.testCase.setPropertyValue( "VERNEW", "0"+vernew )
     }
	log.info testRunner.testCase.getPropertyValue( "VER" )	
	log.info testRunner.testCase.getPropertyValue( "VERNEW" )
	run.runTestStepByName("VALIDATE_REQUEST")
	run.runTestStepByName("SAVE_REQUEST")
	run.runTestStepByName("SUBMIT_REQUEST")
	run.runTestStepByName("RESPONSE_TRANSFER")
	run.runTestStepByName("VALIDATION_ERROR_CHECK")
	run.runTestStepByName("GET_TXID")
	run.runTestStepByName("TRANSFER_TXID")
	run.runTestStepByName("SUBMIT_RESPONSE")
	run.runTestStepByName("VALIDATE_ASR_AND_RECEIVE_MESSAGE")
	run.runTestStepByName("TRANSFER_FLAG")
	break ;
}
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="ab1fed55-222d-4c25-a218-40cab890ba7e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="0da1388e-cce3-4c04-a7b0-d67551a08bff"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="dba474ef-56af-4df3-a814-c458a341f8c9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="b5bc1602-8df9-4946-a918-ddb4612f7653"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="d4477888-c1d2-4fb5-b95b-27033c82b263"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_SUPP","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_SUPP","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_SUPP","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_TXID" id="01fe089e-b9d9-4491-bc5b-139e4d95a237"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>39b09e8a-ec71-4464-9a04-9be0db3e7efb</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>35468</con:value></con:property></con:properties><con:returnProperties><con:entry>TXID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_TXID" id="fe89cc08-2c43-4de6-901e-2c4815b8984d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>TXID</con:name><con:sourceType>TXID</con:sourceType><con:sourceStep>GET_TXID</con:sourceStep><con:targetType>TXID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_RESPONSE" id="01fd7d73-7177-4744-b038-54937e8bf820"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c03f4e9d-d4cb-456e-978d-92dcc807b254</con:targetTestCase><con:properties><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property><con:property><con:name>SINGLERESPONSEFILE</con:name></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>MECHANISM</con:name><con:value>${#TestCase#MECHANISM}</con:value></con:property><con:property><con:name>ASOG_VER</con:name><con:value>${#TestCase#ASOG_VER}</con:value></con:property><con:property><con:name>SUBREQUESTRESPONSE</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_ASR_AND_RECEIVE_MESSAGE" id="b0975977-bf2d-4460-856f-d68ee8999cc2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>9afcbacd-ff32-4d56-b2bb-f995268a66bb</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VERNEW}</con:value></con:property><con:property><con:name>ACTION</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties><con:entry>ASR_QA_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_FLAG" id="ed84ae00-3745-43c3-aa0e-3b18c3febaf2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LSR</con:name><con:sourceType>ASR_QA_VALIDATION_FLAG</con:sourceType><con:sourceStep>VALIDATE_ASR_AND_RECEIVE_MESSAGE</con:sourceStep><con:targetType>ASR_QA_VALIDATION_FLAG_SUPP</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="END" id="eebef93f-7afb-4e05-a369-d57a1d8429f7"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TXID</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value/></con:property><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value/></con:property><con:property><con:name>SUPP_STATUS</con:name><con:value/></con:property><con:property><con:name>SUPP_REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value/></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>FLOW</con:name><con:value/></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value/></con:property><con:property><con:name>ICSC</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value/></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value/></con:property><con:property><con:name>VERNEW</con:name><con:value/></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG_SUPP</con:name><con:value/></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG_SUPP</con:name><con:value/></con:property><con:property><con:name>MECHANISM</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ASR_RECEIVE_ARSC_SUBMIT" searchProperties="true" disabled="true" id="47f3c2f5-3327-40e5-862a-ad0f99c932a9"><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="19129ce3-2626-4480-9f0e-b664b4c618fe"><con:settings/><con:config><script>def run=testRunner
String singleflow = testRunner.testCase.getPropertyValue( "FIRSTFLOW" )
String tctype = testRunner.testCase.getPropertyValue( "TC_TYPE" )
int first =Integer.parseInt(singleflow)
String flow = testRunner.testCase.getPropertyValue( "FLOW" )
String delimeter="[|]"
String[] flowArray = flow.split(delimeter);
for(int j=first;j&lt;flowArray.size();j++){	
     if(flowArray[j].equals("Abandon")){
     	run.runTestStepByName("ABANDON_REQUEST")
     	testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "abandon" )
     	def response = context.expand( '${#ABANDON_REQUEST#RESPONSE}' )
     	testRunner.testCase.setPropertyValue( "RESPONSE" , response )
     }
     else{
     	if(flowArray[j].equals("Resume")){
     		run.runTestStepByName("RESUME_REQUEST")
     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "resume" )
     		def response = context.expand( '${#RESUME_REQUEST#RESPONSE}' )
     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     }
	     else{
	     	if(flowArray[j].equals("Cancel")){
	     		run.runTestStepByName("CANCEL_REQUEST")
	     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "cancel" )
	     		def response = context.expand( '${#CANCEL_REQUEST#RESPONSE}' )
	     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     	}
	     	else{
	     		run.runTestStepByName("SUSPEND_REQUEST")
	     		testRunner.testCase.setPropertyValue( "ACTION_TYPE" , "suspend" )
	     		def response = context.expand( '${#SUSPEND_REQUEST#RESPONSE}' )
	     		testRunner.testCase.setPropertyValue( "RESPONSE" , response )
	     	}	     	
	     }
     }
	break ;
}
run.runTestStepByName("VALIDATION_ERROR_CHECK")
run.runTestStepByName("VALIDATE_ASR_AND_RECEIVE_MESSAGE")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="calltestcase" name="CANCEL_REQUEST" id="ad3a7399-5663-4ce8-918c-661d257d5e11"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>cancel</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ABANDON_REQUEST" id="e8e0fb2e-4433-49ca-afef-c3f0fd50d3cd"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>abandon</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="RESUME_REQUEST" id="77191600-7681-4df5-9a5f-efd6324685dc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>resume</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUSPEND_REQUEST" id="96d277b7-726a-43e4-bf57-9894a3aa253e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>suspend</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="1020339e-0870-47a9-a53b-d29a8d83a678"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_ASRC","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_ASRC","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG_ASRC","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_ASR_AND_RECEIVE_MESSAGE" id="a5000422-ddc2-4226-a384-1b92548fdd88"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>9afcbacd-ff32-4d56-b2bb-f995268a66bb</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ACTION</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties><con:entry>ASR_QA_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="END" id="5ab2157f-463f-42a4-a99e-b3aeef0a6025"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>TC_TYPE</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>TIMEOUT</con:name><con:value/></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value/></con:property><con:property><con:name>FLOW</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value/></con:property><con:property><con:name>PASSWORD</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value/></con:property><con:property><con:name>HEADERVER</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>ACTION_TYPE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="ResponseSubmit" id="0ad22eaa-32ab-48de-abeb-ff666beedc9b" disabled="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FILE_POLLER_ASR" searchProperties="true" id="7bb625e7-c8fd-48da-a25f-48f633973999" disabled="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="RUN_MULTIPLE_FILE_RESPONSE" id="fce3f0b4-eb86-488d-b1a6-30463f6b82d0"><con:settings/><con:config><script>def ilec=testRunner.testCase.getPropertyValue("ILEC")
log.info 'FILE POLLER RESPONSE ILEC=:' + ilec
if(ilec.equals("ALT")){
	testRunner.testCase.setPropertyValue("GATEWAY","alt")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("ATT_LNS")){
	testRunner.testCase.setPropertyValue("GATEWAY","att")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("CinBell")){
	testRunner.testCase.setPropertyValue("GATEWAY","cinbell")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("MCI")){
	testRunner.testCase.setPropertyValue("GATEWAY","mci")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("QWEST")){
	testRunner.testCase.setPropertyValue("GATEWAY","qwest")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("TW Telecom")){
	testRunner.testCase.setPropertyValue("GATEWAY","twtelecom")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("Sprint")){
	testRunner.testCase.setPropertyValue("GATEWAY","sprint")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("XO")){
	testRunner.testCase.setPropertyValue("GATEWAY","xo")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("SWB")){
	testRunner.testCase.setPropertyValue("GATEWAY","swb")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("PAC")){
	testRunner.testCase.setPropertyValue("GATEWAY","pac")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("SNET")){
	testRunner.testCase.setPropertyValue("GATEWAY","snet")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("AMT")){
	testRunner.testCase.setPropertyValue("GATEWAY","amt")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("BS")){
	testRunner.testCase.setPropertyValue("GATEWAY","bellsouth")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
testRunner.runTestStepByName("FILE_POLLER")	
testRunner.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="groovy" name="FILE_POLLER" id="5ebfcb47-9313-4095-96a2-271e39adc4d5"><con:settings/><con:config><script>import java.io.FileInputStream
import java.io.File
import java.io.IOException
import org.apache.commons.net.ftp.FTP
import org.apache.commons.net.ftp.FTPClient
import org.apache.commons.net.ftp.FTPReply
import org.apache.commons.io.FileUtils
import biz.neustar.test.datautils.*;

def fileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlTestFile=testRunner.testCase.getPropertyValue("TEST_NAME")
def asog=testRunner.testCase.getPropertyValue("ASOG_VER")
def ilec=testRunner.testCase.getPropertyValue("ILEC")
def boxip=testRunner.testCase.getPropertyValue("BOXIP")
def customerid=testRunner.testCase.getPropertyValue("CUSTOMER")
def gatewayFolder=testRunner.testCase.getPropertyValue("GATEWAY")
def requestFolder=testRunner.testCase.getPropertyValue("RequestFolder")
def request=testRunner.testCase.getPropertyValue("Request")
def icsc=testRunner.testCase.getPropertyValue("ICSC")
def ccna=testRunner.testCase.getPropertyValue("CCNA")
def pon=testRunner.testCase.getPropertyValue("PON")
def ver=testRunner.testCase.getPropertyValue("VER")
gen=new FormatDates()
String dtval = gen.getDateTime("yyyyMMdd")
log.info(dtval);
log.info request
def finalResponsePath = fileLocation+"/InputResponseXML/"+xmlTestFile+"/"+ilec+"/"
def singlefilename=testRunner.testCase.getPropertyValue("SingleResponseFileName")	 

	// groovy steps to replace the files
	File newFile = new File(finalResponsePath+"/temp/"+singlefilename)
	log.info newFile
     String content = FileUtils.readFileToString(new File(finalResponsePath+"/"+singlefilename))
     FileUtils.writeStringToFile(newFile,content.replaceAll("ICSC", icsc).replaceAll("CCN", ccna).replaceAll(">>", ver).replaceAll("PURCHASEORDERNUM", pon).replaceAll("YYYYMMDD",dtval).replaceAll("%%",asog))
     try {
     	FTPClient ftpClient = new FTPClient()
		//This is the file name to be uploaded
		FileInputStream fis = new FileInputStream(newFile)
		ftpClient.connect(boxip)
		int replyCode = ftpClient.getReplyCode()
		if (!FTPReply.isPositiveCompletion(replyCode)) {
			log.info "FTP Connection UnSuccessfull"
			}
	     boolean login = ftpClient.login("mgrqa", "welcome1")	     
		boolean changeWorkingDirectory = ftpClient.changeWorkingDirectory("/export/home/mgrqa/basicsend/nfi/gateways/asr-send/runtime/"+gatewayFolder+"/inbox/")
		boolean setFileType = ftpClient.setFileType(FTP.BINARY_FILE_TYPE)
		ftpClient.enterLocalPassiveMode()		
          ftpClient.storeFile(singlefilename, fis)
          ftpClient.changeWorkingDirectory("/export/home/mgrqa/basicsend/nfi/gateways/asr-send/runtime/"+gatewayFolder+"/processed");
		boolean fileCheckflag = true;
		for (int j=0;j&lt;15;j++) {
			log.info ("Value fof J"+ j)
			String[] names = ftpClient.listNames();
			for (String name : names) {
					if (name.equals(singlefilename)) {
						Thread.currentThread().sleep(10000)
						ftpClient.deleteFile(singlefilename)
						fileCheckflag = false						
						log.info ("File Deleted Successfully")
					     break
					}
					log.info ("Waiting for File to be in proccessed folder")
				}
				if (fileCheckflag == false) {
				     log.info ("Now Breaking Loop for New File")
				     Thread.currentThread().sleep(20000)
					break
				}
				Thread.currentThread().sleep(5000)
			}
			ftpClient.disconnect()
		} catch (Exception e) {
			e.printStackTrace()
		}</script></con:config></con:testStep><con:testStep type="delay" name="END" id="c7aab0d4-f6bb-4192-98a3-25dbe310fb53"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="OLD_RUN_MULTIPLE_FILE_RESPONSE" disabled="true" id="66b5c085-88f1-4eb2-9404-3949a64477aa"><con:settings/><con:config><script>def ilec=testRunner.testCase.getPropertyValue("ILEC")
log.info 'FILE POLLER RESPONSE ILEC=:' + ilec
if(ilec.equals("ALT")){
	testRunner.testCase.setPropertyValue("GATEWAY","alt")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("ATT_LNS")){
	testRunner.testCase.setPropertyValue("GATEWAY","att")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("CinBell")){
	testRunner.testCase.setPropertyValue("GATEWAY","cinbell")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("MCI")){
	testRunner.testCase.setPropertyValue("GATEWAY","mci")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("QWEST")){
	testRunner.testCase.setPropertyValue("GATEWAY","qwest")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("TW Telecom")){
	testRunner.testCase.setPropertyValue("GATEWAY","twtelecom")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("Sprint")){
	testRunner.testCase.setPropertyValue("GATEWAY","sprint")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("XO")){
	testRunner.testCase.setPropertyValue("GATEWAY","xo")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("SWB")){
	testRunner.testCase.setPropertyValue("GATEWAY","swb")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("PAC")){
	testRunner.testCase.setPropertyValue("GATEWAY","pac")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("SNET")){
	testRunner.testCase.setPropertyValue("GATEWAY","snet")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("AMT")){
	testRunner.testCase.setPropertyValue("GATEWAY","amt")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("BS")){
	testRunner.testCase.setPropertyValue("GATEWAY","bellsouth")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}

def dollarname=testRunner.testCase.getPropertyValue("MultiResponseFileName")
String delimeter1="[:]"
String[] dollarResponseFile = dollarname.split(delimeter1)

def firstflow1=testRunner.testCase.getPropertyValue("SUPP")
if (firstflow1.equals("1")||firstflow1.equals("2")||firstflow1.equals("3")||firstflow1.equals("4"))
{
int firstflow2=Integer.parseInt(firstflow1)
def filename=dollarResponseFile[firstflow2]
log.info firstflow1
log.info firstflow2
String delimeter="[|]"
String[] multiResponseFile = filename.split(delimeter)
for(int i=0;i&lt;multiResponseFile.size();i++){
	log.info multiResponseFile[i]
	testRunner.testCase.setPropertyValue("SingleResponseFileName",multiResponseFile[i])
	testRunner.runTestStepByName("FILE_POLLER")	
}
}
else {
	def filename=dollarResponseFile[0]
	String delimeter="[|]"
	String[] multiResponseFile = filename.split(delimeter)
	for(int i=0;i&lt;multiResponseFile.size();i++){
	log.info multiResponseFile[i]
	testRunner.testCase.setPropertyValue("SingleResponseFileName",multiResponseFile[i])
	testRunner.runTestStepByName("FILE_POLLER")	
}
}
testRunner.gotoStepByName("END")</script></con:config></con:testStep><con:properties><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>SingleResponseFileName</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>MESSAGETYPE</con:name><con:value/></con:property><con:property><con:name>GATEWAY</con:name><con:value/></con:property><con:property><con:name>BOXIP</con:name><con:value/></con:property><con:property><con:name>Request</con:name><con:value/></con:property><con:property><con:name>RequestFolder</con:name><con:value/></con:property><con:property><con:name>ICSC</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>ASOG_VER</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FILE_POLLER_PREORDER_ASR" searchProperties="true" disabled="true" id="0c8744ae-b0a8-42c6-a77b-e01ea48bb139"><con:settings/><con:testStep type="groovy" name="RUN_MULTIPLE_FILE_RESPONSE" id="4de874d9-f762-4db7-a319-ce134efcbdd7"><con:settings/><con:config><script>def ilec=testRunner.testCase.getPropertyValue("ILEC")
log.info 'FILE POLLER RESPONSE ILEC=:' + ilec
if(ilec.equals("ATT")){
	testRunner.testCase.setPropertyValue("GATEWAY","att")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.100.16")
	testRunner.runTestStepByName("FILE_POLLER")
}
if(ilec.equals("QWEST")){
	testRunner.testCase.setPropertyValue("GATEWAY","qwest")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.100.16")
	testRunner.runTestStepByName("FILE_POLLER")
}
if(ilec.equals("BAN")){
	testRunner.testCase.setPropertyValue("GATEWAY","vze")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.100.16")
	testRunner.runTestStepByName("FILE_POLLER")
}
if(ilec.equals("BAS")){
	testRunner.testCase.setPropertyValue("GATEWAY","vze")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.100.16")
	testRunner.runTestStepByName("FILE_POLLER")
}
if(ilec.equals("VZW")){
	testRunner.testCase.setPropertyValue("GATEWAY","vze")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.100.16")
	testRunner.runTestStepByName("FILE_POLLER")
}	
if(ilec.equals("FPC")){
	testRunner.testCase.setPropertyValue("GATEWAY","test")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.100.5")
	testRunner.runTestStepByName("FILE_POLLER_FOR_FPC_FRONTIER")
}
if(ilec.equals("Frontier")){
	testRunner.testCase.setPropertyValue("GATEWAY","test")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.100.5")
	testRunner.runTestStepByName("FILE_POLLER_FOR_FPC_FRONTIER")
}
testRunner.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="groovy" name="FILE_POLLER" id="f1c21480-dc2b-48c5-b2e1-56d920297b1a"><con:settings/><con:config><script>import java.io.FileInputStream
import java.io.File
import java.io.IOException
import org.apache.commons.net.ftp.FTP
import org.apache.commons.net.ftp.FTPClient
import org.apache.commons.net.ftp.FTPReply
import org.apache.commons.io.FileUtils
import biz.neustar.test.datautils.*;

def fileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlTestFile=testRunner.testCase.getPropertyValue("TEST_NAME")
def asog=testRunner.testCase.getPropertyValue("ASOG_VER")
def ilec=testRunner.testCase.getPropertyValue("ILEC")
def boxip=testRunner.testCase.getPropertyValue("BOXIP")
def customerid=testRunner.testCase.getPropertyValue("CUSTOMER")
def gatewayFolder=testRunner.testCase.getPropertyValue("GATEWAY")
def requestFolder=testRunner.testCase.getPropertyValue("RequestFolder")
def request=testRunner.testCase.getPropertyValue("Request")
def icsc=testRunner.testCase.getPropertyValue("ICSC")
def ccna=testRunner.testCase.getPropertyValue("CCNA")
def pon=testRunner.testCase.getPropertyValue("PON")
def ver=testRunner.testCase.getPropertyValue("VER")
def finalResponsePath = fileLocation+"/InputResponseXML/"+xmlTestFile+"/"+ilec+"/"
def singlefilename=testRunner.testCase.getPropertyValue("SingleResponseFileName")	 

	// groovy steps to replace the files
	File newFile = new File(finalResponsePath+"/temp/"+singlefilename)
	log.info newFile
     String content = FileUtils.readFileToString(new File(finalResponsePath+"/"+singlefilename))
     FileUtils.writeStringToFile(newFile,content.replaceAll("MESSAGEPON", pon).replaceAll("CCA", ccna))
     try {
     	FTPClient ftpClient = new FTPClient()
		//This is the file name to be uploaded
		FileInputStream fis = new FileInputStream(newFile)
		ftpClient.connect(boxip)
		int replyCode = ftpClient.getReplyCode()
		if (!FTPReply.isPositiveCompletion(replyCode)) {
			log.info "FTP Connection UnSuccessfull"
			}
	     boolean login = ftpClient.login("mgrqa", "welcome")	     
		boolean changeWorkingDirectory = ftpClient.changeWorkingDirectory("/export/home/mgrqa/basicsendgui/nfi/"+gatewayFolder)
		boolean setFileType = ftpClient.setFileType(FTP.BINARY_FILE_TYPE)
		ftpClient.enterLocalPassiveMode()		
          ftpClient.storeFile(singlefilename, fis)
		ftpClient.disconnect()
		} catch (Exception e) {
			e.printStackTrace()
		}</script></con:config></con:testStep><con:testStep type="groovy" name="FILE_POLLER_FOR_FPC_FRONTIER" id="cfa90af9-f6b4-44d4-9626-9d95d36bc4c8"><con:settings/><con:config><script>import java.io.FileInputStream
import java.io.File
import java.io.IOException
import org.apache.commons.net.ftp.FTP
import org.apache.commons.net.ftp.FTPClient
import org.apache.commons.net.ftp.FTPReply
import org.apache.commons.io.FileUtils
import biz.neustar.test.datautils.*;

def fileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlTestFile=testRunner.testCase.getPropertyValue("TEST_NAME")
def asog=testRunner.testCase.getPropertyValue("ASOG_VER")
def ilec=testRunner.testCase.getPropertyValue("ILEC")
def boxip=testRunner.testCase.getPropertyValue("BOXIP")
def customerid=testRunner.testCase.getPropertyValue("CUSTOMER")
def gatewayFolder=testRunner.testCase.getPropertyValue("GATEWAY")
def requestFolder=testRunner.testCase.getPropertyValue("RequestFolder")
def request=testRunner.testCase.getPropertyValue("Request")
def icsc=testRunner.testCase.getPropertyValue("ICSC")
def ccna=testRunner.testCase.getPropertyValue("CCNA")
def pon=testRunner.testCase.getPropertyValue("PON")
def ver=testRunner.testCase.getPropertyValue("VER")
def finalResponsePath = fileLocation+"/InputResponseXML/"+xmlTestFile+"/"+ilec+"/"
def singlefilename=testRunner.testCase.getPropertyValue("SingleResponseFileName")	 
String propertiesFileName="dummy_web_service_uom.properties"	 

	// groovy steps to replace the files
	File newPropFile = new File(finalResponsePath+"/temp/"+propertiesFileName)
	File newFile = new File(finalResponsePath+"/temp/"+singlefilename)
	log.info newFile
	log.info newPropFile
	String contentPro = FileUtils.readFileToString(new File(finalResponsePath+"/"+propertiesFileName))
     String content = FileUtils.readFileToString(new File(finalResponsePath+"/"+singlefilename))     
     FileUtils.writeStringToFile(newPropFile,contentPro.replaceAll("PREORDERFILE", singlefilename))
     FileUtils.writeStringToFile(newFile,content.replaceAll("MESSAGEPON", pon).replaceAll("CCA", ccna))
     try {
     	FTPClient ftpClient = new FTPClient()
		//This is the file name to be uploaded
		FileInputStream fPro = new FileInputStream(newPropFile)
		FileInputStream fis = new FileInputStream(newFile)
		ftpClient.connect(boxip)
		int replyCode = ftpClient.getReplyCode()
		if (!FTPReply.isPositiveCompletion(replyCode)) {
			log.info "FTP Connection UnSuccessfull"
			}
	     boolean login = ftpClient.login("mgrqa", "welcome")	     
		boolean changeWorkingDirectory = ftpClient.changeWorkingDirectory("/export/home/mgrqa/basicsendsoap/nfi/"+gatewayFolder)
		boolean setFileType = ftpClient.setFileType(FTP.BINARY_FILE_TYPE)
		ftpClient.enterLocalPassiveMode()		
		ftpClient.storeFile(propertiesFileName, fPro)
          ftpClient.storeFile(singlefilename, fis)
		ftpClient.disconnect()
		} catch (Exception e) {
			e.printStackTrace()
		}</script></con:config></con:testStep><con:testStep type="delay" name="END" id="8f324d5e-7c79-4b0d-bec6-c28309a276cd"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="OLD_RUN_MULTIPLE_FILE_RESPONSE" disabled="true" id="59cdccde-e723-4234-b7a6-f1cbdc185fd1"><con:settings/><con:config><script>def ilec=testRunner.testCase.getPropertyValue("ILEC")
log.info 'FILE POLLER RESPONSE ILEC=:' + ilec
if(ilec.equals("ALT")){
	testRunner.testCase.setPropertyValue("GATEWAY","alt")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("ATT_LNS")){
	testRunner.testCase.setPropertyValue("GATEWAY","att")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("CinBell")){
	testRunner.testCase.setPropertyValue("GATEWAY","cinbell")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("MCI")){
	testRunner.testCase.setPropertyValue("GATEWAY","mci")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("QWEST")){
	testRunner.testCase.setPropertyValue("GATEWAY","qwest")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("TW Telecom")){
	testRunner.testCase.setPropertyValue("GATEWAY","twtelecom")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("Sprint")){
	testRunner.testCase.setPropertyValue("GATEWAY","sprint")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("XO")){
	testRunner.testCase.setPropertyValue("GATEWAY","xo")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("SWB")){
	testRunner.testCase.setPropertyValue("GATEWAY","swb")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("PAC")){
	testRunner.testCase.setPropertyValue("GATEWAY","pac")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("SNET")){
	testRunner.testCase.setPropertyValue("GATEWAY","snet")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("AMT")){
	testRunner.testCase.setPropertyValue("GATEWAY","amt")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}
if(ilec.equals("BS")){
	testRunner.testCase.setPropertyValue("GATEWAY","bellsouth")
	testRunner.testCase.setPropertyValue("BOXIP","192.168.73.10")
}

def dollarname=testRunner.testCase.getPropertyValue("MultiResponseFileName")
String delimeter1="[:]"
String[] dollarResponseFile = dollarname.split(delimeter1)

def firstflow1=testRunner.testCase.getPropertyValue("SUPP")
if (firstflow1.equals("1")||firstflow1.equals("2")||firstflow1.equals("3")||firstflow1.equals("4"))
{
int firstflow2=Integer.parseInt(firstflow1)
def filename=dollarResponseFile[firstflow2]
log.info firstflow1
log.info firstflow2
String delimeter="[|]"
String[] multiResponseFile = filename.split(delimeter)
for(int i=0;i&lt;multiResponseFile.size();i++){
	log.info multiResponseFile[i]
	testRunner.testCase.setPropertyValue("SingleResponseFileName",multiResponseFile[i])
	testRunner.runTestStepByName("FILE_POLLER")	
}
}
else {
	def filename=dollarResponseFile[0]
	String delimeter="[|]"
	String[] multiResponseFile = filename.split(delimeter)
	for(int i=0;i&lt;multiResponseFile.size();i++){
	log.info multiResponseFile[i]
	testRunner.testCase.setPropertyValue("SingleResponseFileName",multiResponseFile[i])
	testRunner.runTestStepByName("FILE_POLLER")	
}
}
testRunner.gotoStepByName("END")</script></con:config></con:testStep><con:properties><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>SingleResponseFileName</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>MESSAGETYPE</con:name><con:value/></con:property><con:property><con:name>GATEWAY</con:name><con:value/></con:property><con:property><con:name>BOXIP</con:name><con:value/></con:property><con:property><con:name>Request</con:name><con:value/></con:property><con:property><con:name>RequestFolder</con:name><con:value/></con:property><con:property><con:name>ICSC</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="API_RESPONSE_SUBMISSION_ASR" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0bd1ec63-4c36-4245-bb7b-73e8561c93c3" disabled="true"><con:description>Lsr PreOrder  test case submits the Lsr Send PreOrder Request to CH</con:description><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_RESPONSE" id="7e09e132-ef4a-44aa-95d9-03f534fca8de"><con:settings/><con:config><script>def run=testRunner

String customer=testRunner.testCase.getPropertyValue("CUSTOMER")        
String filename=testRunner.testCase.getPropertyValue("RESPONSEFILE")
String delimeter="[:]"
String[] responseFile = filename.split(delimeter)

for(int i=0;i&lt;responseFile.size();i++){
	log.info ("RESPONSE FILE NAME:="+responseFile[i])
	testRunner.testCase.setPropertyValue("BODY",responseFile[i])
	String ilec=testRunner.testCase.getPropertyValue("ILEC")
	log.info ("RESPONSE ILEC:="+ilec)
	if(ilec.equals("ELI") || ilec.equals("Caviller")){
		log.info ("RESPONSE ILEC:="+ilec)
		run.runTestStepByName("SUBMIT_REQUEST")	
		run.runTestStepByName("RESPONSE_TRANSFER")
     	run.runTestStepByName("VALIDATION_ERROR_CHECK")
	}
	else{	
		run.runTestStepByName("VALIDATE_REQUEST")
		run.runTestStepByName("SAVE_REQUEST")
		run.runTestStepByName("SUBMIT_REQUEST")	
		run.runTestStepByName("RESPONSE_TRANSFER")
     	run.runTestStepByName("VALIDATION_ERROR_CHECK") 		
	}
}
log.info("Execution has completed for Asr")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="717c12a3-67c8-4365-9a48-8ef668e6c55d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUESTRESPONSE}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="7fe7f5c5-1506-4c81-8c04-ea952cf3be92"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUESTRESPONSE}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="eb7b5d13-f702-4320-b4b0-e4a7e86beae8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUESTRESPONSE}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">    &lt;soapenv:Body>       &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>    &lt;/soapenv:Body> &lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="4e538b0c-e85e-43cf-ad58-584efedd76df"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="6b0efbb4-4134-4512-bb79-7ac1a0e38c09"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/ResponseValidation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/VResponsealidation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("RESPONSE_VALIDATION_ERROR_CHECK_FLAG","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/ResponseError.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/ResponseError.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("RESPONSE_VALIDATION_ERROR_CHECK_FLAG","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("RESPONSE_VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="delay" name="END" id="2cb0fee6-8ff8-41c5-8c31-2ab7c9d1fbd1"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:setupScript/><con:tearDownScript/><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CURR_DT</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DUE_DT</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PON</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DDD</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>REMARKS</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ILEC</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>HEADERVER</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>VER</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>USERNAME</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PASSWORD</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SVCTYP</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TEST_NAME</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>ICSC</con:name><con:value/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value/></con:property><con:property><con:name>TXID</con:name><con:value/></con:property><con:property><con:name>SUBREQUESTRESPONSE</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="API_RESPONSE_SUBMISSION" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2d8f942e-ade9-4249-8d74-6f56236ee662" disabled="true"><con:description>Lsr PreOrder  test case submits the Lsr Send PreOrder Request to CH</con:description><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_RESPONSE" id="13c50aee-81cd-48ab-9736-3531fef4abba"><con:settings/><con:config><script>def run=testRunner

String txid=testRunner.testCase.getPropertyValue("TXID")
String customer=testRunner.testCase.getPropertyValue("CUSTOMER")        
String filename=testRunner.testCase.getPropertyValue("RESPONSEFILE")
String delimeter="[:]"
String[] responseFile = filename.split(delimeter)

for(int i=0;i&lt;responseFile.size();i++){
	log.info ("RESPONSE FILE NAME:="+responseFile[i])
	testRunner.testCase.setPropertyValue("BODY",responseFile[i])	
	String ilec=testRunner.testCase.getPropertyValue("CUSTOMER")    
	if(ilec.equals("NIS")){
		run.runTestStepByName("SUBMIT_REQUEST")		
	}
	else{
		run.runTestStepByName("VALIDATE_REQUEST")
		run.runTestStepByName("SAVE_REQUEST")
		run.runTestStepByName("SUBMIT_REQUEST")
	}	
	run.runTestStepByName("RESPONSE_TRANSFER")
     run.runTestStepByName("VALIDATION_ERROR_CHECK") 
}
log.info("Execution has completed for Lsr")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="2fd4982d-8146-40b9-b1f0-2c6ffb7c4968"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="904be30d-8a25-4ebd-b9b6-3469c4e17094"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="19cfdd16-57be-4d7a-a016-265e8335690b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="9ffe38a5-f961-4679-bea5-bd076ecc2c58"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="0a2ff3b5-b587-4873-aa42-e5a3d14b3745"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/ResponseValidation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/VResponsealidation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("RESPONSE_VALIDATION_ERROR_CHECK_FLAG","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/ResponseError.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/ResponseError.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("RESPONSE_VALIDATION_ERROR_CHECK_FLAG","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("RESPONSE_VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="delay" name="END" id="7c238303-4ac5-44b9-8677-2f762431a684"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:setupScript/><con:tearDownScript/><con:properties><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSE_VALIDATION_ERROR_CHECK_FLAG</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DUE_DT</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PON</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DDD</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>REMARKS</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>HEADERVER</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>VER</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>USERNAME</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PASSWORD</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value/></con:property><con:property><con:name>TXID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FILE_POLLER_RESPONSE_PN" searchProperties="true" id="072ec9cf-d3cd-4468-a60d-7e59a6438d16" disabled="true"><con:settings/><con:testStep type="groovy" name="PN_FILE_POLLER" id="e539d299-a6f4-490b-b81c-95e4476c46c2"><con:settings/><con:config><script>import java.io.FileInputStream
import java.io.File
import java.io.IOException
import org.apache.commons.net.ftp.FTP
import org.apache.commons.net.ftp.FTPClient
import org.apache.commons.net.ftp.FTPReply
import org.apache.commons.io.FileUtils

def fileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlTestFile=testRunner.testCase.getPropertyValue("TEST_NAME")
def customerid=testRunner.testCase.getPropertyValue("CUSTOMER")
def ilec=testRunner.testCase.getPropertyValue("ILEC")
def responsefile=testRunner.testCase.getPropertyValue("PN_FILE_NAME")
def boxip=testRunner.testCase.getPropertyValue("BOXIP")
def boxusername=testRunner.testCase.getPropertyValue("BOX_USERNAME")
def boxpassword=testRunner.testCase.getPropertyValue("BOX_PASSWORD")
def responsefolder=testRunner.testCase.getPropertyValue("RESPONSE_FILE_PATH_INBOX")
def responseProcessedfolder=testRunner.testCase.getPropertyValue("RESPONSE_FILE_PATH_PROCESSED")
def finalResponsePath = fileLocation+"/InputRequestXML/"+xmlTestFile+"/"	 
File newFile = new File(finalResponsePath+"/"+responsefile)    
try {
	FTPClient ftpClient = new FTPClient()		
	FileInputStream fis = new FileInputStream(newFile)
	ftpClient.connect(boxip)
	int replyCode = ftpClient.getReplyCode()
	if(!FTPReply.isPositiveCompletion(replyCode)) {
		log.info "FTP Connection UnSuccessfull"
	}
	boolean login = ftpClient.login(boxusername, boxpassword)	     
	boolean changeWorkingDirectory = ftpClient.changeWorkingDirectory(responsefolder)
	boolean setFileType = ftpClient.setFileType(FTP.BINARY_FILE_TYPE)
	ftpClient.enterLocalPassiveMode()		
	ftpClient.storeFile(responsefile, fis)
	ftpClient.changeWorkingDirectory(responseProcessedfolder+"/processed");
	boolean fileCheckflag = true;
	for (int j=0;j&lt;15;j++) {
		log.info ("Value fof J"+ j)
		String[] names = ftpClient.listNames();
		for (String name : names) {
			if (name.equals(responsefile)) {
				Thread.currentThread().sleep(10000)
				ftpClient.deleteFile(responsefile)
				fileCheckflag = false
				testRunner.testCase.setPropertyValue("FILE_POLLER_FLAG","true")
				log.info ("loop break")
				break
				}
				log.info ("loop execute")
				testRunner.testCase.setPropertyValue("FILE_POLLER_FLAG","false")
			}
			if (fileCheckflag == false) {
				log.info ("loop break Outer")				
				break
			}
			Thread.currentThread().sleep(5000)
		}
		ftpClient.disconnect()
	} 
catch (Exception e) {
	e.printStackTrace()
	log.info e
}</script></con:config></con:testStep><con:properties><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>BOXIP</con:name><con:value/></con:property><con:property><con:name>PN_FILE_NAME</con:name><con:value/></con:property><con:property><con:name>BOX_USERNAME</con:name><con:value/></con:property><con:property><con:name>BOX_PASSWORD</con:name><con:value/></con:property><con:property><con:name>RESPONSE_FILE_PATH_INBOX</con:name><con:value/></con:property><con:property><con:name>RESPONSE_FILE_PATH_PROCESSED</con:name><con:value/></con:property><con:property><con:name>FILE_POLLER_FLAG</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FILE_POLLER_RESPONSE_E911" searchProperties="true" id="98684897-f46b-41f6-ac33-024761e665c1" disabled="true"><con:settings/><con:testStep type="groovy" name="MULTIPLE_FILE_POLLER_RESPONSE" id="65c1ec35-17a4-4440-a0a1-443d0b851fe4"><con:settings/><con:config><script>def ilec=testRunner.testCase.getPropertyValue("ILEC")
def msgtyp=testRunner.testCase.getPropertyValue("MESSAGETYPE")
String singlerequest=msgtyp.charAt(0)
testRunner.testCase.setPropertyValue("Request", singlerequest )
if(ilec.equals("Intrado")){
	testRunner.testCase.setPropertyValue("GATEWAY","e911")
	testRunner.testCase.setPropertyValue("BOXIP","10.61.4.173")
}
else{
	testRunner.testCase.setPropertyValue("GATEWAY","e911-tsg")
	testRunner.testCase.setPropertyValue("BOXIP","10.61.4.174")
}

def filename=testRunner.testCase.getPropertyValue("MultiResponseFileName")
String delimeter="[|]"
String[] multiResponseFile = filename.split(delimeter)
for(int i=0;i&lt;multiResponseFile.size();i++){
	log.info multiResponseFile[i]
	if(multiResponseFile[i].contains("sp_")){
		testRunner.testCase.setPropertyValue("RequestFolder","sp_confirmation")
	}
	else
	{
		if(multiResponseFile[i].contains("confirmation")){
			testRunner.testCase.setPropertyValue("RequestFolder","confirmation")
		}
		else{
			if(multiResponseFile[i].contains("referred")){
				testRunner.testCase.setPropertyValue("RequestFolder","referred")
			}
			else{
				if(multiResponseFile[i].contains("decc")){
					testRunner.testCase.setPropertyValue("RequestFolder","decc")
				}
				else{
					if(multiResponseFile[i].contains("outstanding")){
						testRunner.testCase.setPropertyValue("RequestFolder","outstanding")	
					}
					else{
						if(multiResponseFile[i].contains("dat")){
							testRunner.testCase.setPropertyValue("RequestFolder","dat")								
						}
						else{
							if(multiResponseFile[i].contains("ivc")){
								testRunner.testCase.setPropertyValue("RequestFolder","ivc")	
							}
							else{
								if(multiResponseFile[i].contains("err")){
									testRunner.testCase.setPropertyValue("RequestFolder","err")	
								}
								else{
									testRunner.testCase.setPropertyValue("RequestFolder","rec")	
								}
							}
						}
						
					}
					
				}
				
			}
			
		}
	}
	testRunner.testCase.setPropertyValue("SingleResponseFileName",multiResponseFile[i])
	testRunner.runTestStepByName("FILE_POLLER_RESPONSE")	
}
testRunner.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="groovy" name="FILE_POLLER_RESPONSE" id="db6de4fc-14fb-4477-9623-4e05262db58d"><con:settings/><con:config><script>import java.io.FileInputStream
import java.io.File
import java.io.IOException
import org.apache.commons.net.ftp.FTP
import org.apache.commons.net.ftp.FTPClient
import org.apache.commons.net.ftp.FTPReply
import org.apache.commons.io.FileUtils

def fileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlTestFile=testRunner.testCase.getPropertyValue("TEST_NAME")
def ilec=testRunner.testCase.getPropertyValue("ILEC")
def phone=testRunner.testCase.getPropertyValue("PHONE")
def ordernumber=testRunner.testCase.getPropertyValue("ORDERNUMBER")
def boxip=testRunner.testCase.getPropertyValue("BOXIP")
def customerid=testRunner.testCase.getPropertyValue("CUSTOMER")
def gatewayFolder=testRunner.testCase.getPropertyValue("GATEWAY")
def requestFolder=testRunner.testCase.getPropertyValue("RequestFolder")
def request=testRunner.testCase.getPropertyValue("Request")
log.info request
def finalResponsePath = fileLocation+"/InputRequestXML/"+xmlTestFile+"/"+ilec+"Response"+"/"
def singlefilename=testRunner.testCase.getPropertyValue("SingleResponseFileName")	 

	// groovy steps to replace the files
	File newFile = new File(finalResponsePath+"/temp/"+singlefilename)
     String content = FileUtils.readFileToString(new File(finalResponsePath+"/"+singlefilename))
     FileUtils.writeStringToFile(newFile,content.replaceAll("PHONENUMBE", phone).replaceAll("ORDERNUM", ordernumber).replaceAll("&lt;", request))
     try {
     	FTPClient ftpClient = new FTPClient()
		//This is the file name to be uploaded
		FileInputStream fis = new FileInputStream(newFile)
		ftpClient.connect(boxip)
		int replyCode = ftpClient.getReplyCode()
		if (!FTPReply.isPositiveCompletion(replyCode)) {
			log.info "FTP Connection UnSuccessfull"
			}
	     boolean login = ftpClient.login("chba_pat", "welcome")	     
		boolean changeWorkingDirectory = ftpClient.changeWorkingDirectory("/export/home/chba_pat/nfi/gateways/"+gatewayFolder+"/runtime/"+customerid+"/inbox/"+requestFolder+"")
		boolean setFileType = ftpClient.setFileType(FTP.BINARY_FILE_TYPE)
		ftpClient.enterLocalPassiveMode()		
          ftpClient.storeFile(singlefilename, fis)
          ftpClient.changeWorkingDirectory("/export/home/chba_pat/nfi/gateways/"+gatewayFolder+"/runtime/"+customerid+"/processed");
		boolean fileCheckflag = true;
		for (int j=0;j&lt;15;j++) {
			log.info ("Value fof J"+ j)
			String[] names = ftpClient.listNames();
			for (String name : names) {
					if (name.equals(singlefilename)) {
						Thread.currentThread().sleep(10000)
						ftpClient.deleteFile(singlefilename)
						fileCheckflag = false
						log.info ("loop break")
					     break
					}
					log.info ("loop execute")
				}
				if (fileCheckflag == false) {
				     log.info ("loop break Outer")
					break
				}
				Thread.currentThread().sleep(5000)
			}
			ftpClient.disconnect()
		} catch (Exception e) {
			e.printStackTrace()
		}</script></con:config></con:testStep><con:testStep type="delay" name="END" id="769b1d44-9290-4639-8a9a-ebc85c68b789"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:properties><con:property><con:name>TEST_NAME</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>MESSAGETYPE</con:name><con:value/></con:property><con:property><con:name>MultiResponseFileName</con:name><con:value/></con:property><con:property><con:name>GATEWAY</con:name><con:value/></con:property><con:property><con:name>BOXIP</con:name><con:value/></con:property><con:property><con:name>Request</con:name><con:value/></con:property><con:property><con:name>RequestFolder</con:name><con:value/></con:property><con:property><con:name>SingleResponseFileName</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="ASR_SEND_RESPONSES" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true" id="c03f4e9d-d4cb-456e-978d-92dcc807b254"><con:description/><con:settings/><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_RESPONSE" id="944d9dac-0b78-473d-9691-221cb5fcc8fd"><con:settings/><con:config><script>def tc = testRunner.testCase;
def mECHANISM = context.expand( '${#TestCase#MECHANISM}' )
def responseFile = context.expand( '${#TestCase#RESPONSEFILE}' )
def testname = context.expand( '${#TestCase#TEST_NAME}' )

log.info 'ALL RESPONSE FILE :=' + responseFile
log.info 'TEST NAME FOR SUBMISSION:='+testname
log.info 'CHOOSE MECHANISM FOR SUBMISSION:='+mECHANISM

String delimeter="[:]"
String[] responseFileList = responseFile.split(delimeter)


log.info 'RESPONSE FILE SIZE :=' + responseFileList.size()

for (int i = 0; i&lt; responseFileList.size(); i++)
{
	tc.setPropertyValue('SINGLERESPONSEFILE', responseFileList[i]);	
	log.info 'RESPONSE FILE FOR SUBMISSION:='+tc.getPropertyValue('SINGLERESPONSEFILE')
	if(mECHANISM.equals('DUMMY_WEB_SERVICE')){
		log.info 'CHOOSE MECHANISM FOR SUBMISSION:='+mECHANISM
		testRunner.runTestStepByName('SUBMIT_DUMMY_WEB_SERVICE_RESPONSE');
	}
	else if(mECHANISM.equals('API')){
		log.info 'CHOOSE MECHANISM FOR SUBMISSION:='+mECHANISM
		testRunner.runTestStepByName('SUBMIT_API_RESPONSE');
	}
	else if(mECHANISM.equals('FILE_POLLER'))	{
		if(testname.equals('ASR_SEND_ORDER')){			
			log.info 'CHOOSE MECHANISM FOR SUBMISSION:='+mECHANISM
			testRunner.runTestStepByName('SUBMIT_FILE_POLLAR_RESPONSE');				
		}
		else{
			log.info 'CHOOSE MECHANISM FOR SUBMISSION:='+mECHANISM
			testRunner.runTestStepByName('SUBMIT_FILE_POLLAR_PREORDER_RESPONSE');				
		}		
	}
}
testRunner.gotoStepByName('END');</script></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_DUMMY_WEB_SERVICE_RESPONSE" id="ca2856b5-2c21-4f4e-841e-4c7fd15889c0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>8d8cfb03-e0f6-4acf-9ecd-ce440ea6ccd5</con:targetTestCase><con:properties><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>ACTION_TYPE</con:name><con:value>${#TestCase#ACTION_TYPE}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#SINGLERESPONSEFILE}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>ASOG_VER</con:name><con:value>${#TestCase#ASOG_VER}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_API_RESPONSE" id="76ee98eb-83a3-4dd7-a3a5-a6ea23480775"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0bd1ec63-4c36-4245-bb7b-73e8561c93c3</con:targetTestCase><con:properties><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>ACTION_TYPE</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#SINGLERESPONSEFILE}</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property><con:property><con:name>SUBREQUESTRESPONSE</con:name><con:value>${#TestCase#SUBREQUESTRESPONSE}</con:value></con:property></con:properties><con:returnProperties><con:entry>RECEIVERESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_FILE_POLLAR_RESPONSE" id="54d01bb7-3902-4d41-92d0-7f122b0d078b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>7bb625e7-c8fd-48da-a25f-48f633973999</con:targetTestCase><con:properties><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SingleResponseFileName</con:name><con:value>${#TestCase#SINGLERESPONSEFILE}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value>${#TestCase#SUPP}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>MESSAGETYPE</con:name></con:property><con:property><con:name>GATEWAY</con:name></con:property><con:property><con:name>BOXIP</con:name></con:property><con:property><con:name>RequestFolder</con:name></con:property><con:property><con:name>ASOG_VER</con:name><con:value>${#TestCase#ASOG_VER}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_FILE_POLLAR_PREORDER_RESPONSE" id="fcd59f2c-1743-4acc-92cd-0de12f3bef2e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0c8744ae-b0a8-42c6-a77b-e01ea48bb139</con:targetTestCase><con:properties><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SingleResponseFileName</con:name><con:value>${#TestCase#SINGLERESPONSEFILE}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>MESSAGETYPE</con:name></con:property><con:property><con:name>GATEWAY</con:name></con:property><con:property><con:name>BOXIP</con:name></con:property><con:property><con:name>RequestFolder</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="END" id="a2848a09-9025-40b4-b17f-d36a777d7ea7"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:setupScript/><con:tearDownScript/><con:properties><con:property><con:name>SINGLERESPONSEFILE</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value/></con:property><con:property><con:name>CURR_DT</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DUE_DT</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PON</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DDD</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>REMARKS</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SUBREQUEST</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>REQUEST</con:name><con:value/></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value/></con:property><con:property><con:name>ILEC</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>HEADERVER</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>VER</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>USERNAME</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PASSWORD</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value/></con:property><con:property><con:name>ICSC</con:name><con:value/></con:property><con:property><con:name>MECHANISM</con:name><con:value/></con:property><con:property><con:name>ASOG_VER</con:name><con:value/></con:property><con:property><con:name>TXID</con:name><con:value/></con:property><con:property><con:name>SUBREQUESTRESPONSE</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ffaaf564-f5c2-4744-a3b3-b0ac260de9d9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Sanity" id="24275031-214f-41b1-8be5-30697dc85785"><con:description>Sanity Test Suite contains product specific test case</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="LSR_ORDER_API_NS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="70f52300-9db8-4266-a0d7-67ed4800ff71"><con:description>Lsr Order test case submits the Lsr Send Order Request to CH</con:description><con:settings/><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="eeac35e6-eaa9-44c1-9d44-b9951c148417"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException

def run=testRunner
def flowvalue,testcasename
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"
DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
	Node nNode = nList.item(temp);
	if (nNode.getNodeType() == Node.ELEMENT_NODE) {
	       Element eElement = (Element) nNode;            
	       testcasename=eElement.getAttribute("name")
	       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
		  testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
	       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
	       	       testRunner.testCase.setPropertyValue( "VER" , "00" )	       	       
                      testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )		            
		            def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "HEADER" , header )
		            def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "BODY" , body )
		            def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "REQUEST" , request )
		            def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
	                 def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
	                 testRunner.testCase.setPropertyValue( "ILEC" , ilec )
	                 String ileccheck=testRunner.testCase.getPropertyValue( "ILEC")
	                 if(ileccheck.equals("CenturyLink")){
	                 	    testRunner.testCase.setPropertyValue( "VER" , "01" )            
	                 }
		            def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
		            def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "FLOW" , flow )
		            def remarks= eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )
		            def suppremarks = eElement.getElementsByTagName("SUPP_REMARKS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "SUPP_REMARKS_FLOW" , suppremarks )
		            def status = eElement.getElementsByTagName("STATUS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "STATUS" , status )
		            def suppstatus = eElement.getElementsByTagName("SUPP_STATUS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "SUPP_STATUS_FLOW" , suppstatus )
		            def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )
		            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )
		            def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )
		            def asrc = eElement.getElementsByTagName("ASRC").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "BODYASRC" , asrc )
		            if(ileccheck.equals("NIS")){
		            	def resfile = eElement.getElementsByTagName("RESPONSEFILE").item(0).getTextContent()		
		            	testRunner.testCase.setPropertyValue( "RESPONSEFILE" , resfile )
		            	def suppresfile = eElement.getElementsByTagName("SUPPRESPONSEFILE").item(0).getTextContent()		
		            	testRunner.testCase.setPropertyValue( "SUPPRESPONSEFILE" , suppresfile )
	                 }
		            String testcasenumber=Integer.toString(temp)
		            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
		}
	     else{
		            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
	     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for LsrSendOrder")
run.gotoStepByName("END")		</script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="7fce2bf0-3900-43c5-83af-dacaeecc3329"><con:settings/><con:config><script>def run=testRunner
int loop=0  
String validation_br
def sea_status,order_status
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def testcasename=testRunner.testCase.getPropertyValue("TC_NAME")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
run.runTestStepByName("GET_PON_DATE")
run.runTestStepByName("TRANSFER_PON_DATE")             
if(flag.equals("TRUE")){
	ilec=testRunner.testCase.getPropertyValue("ILEC")
	if(ilec.equals("NIS")){
		run.runTestStepByName("SAVE_REQUEST")
		run.runTestStepByName("SUBMIT_REQUEST")
	}
	else{
		run.runTestStepByName("VALIDATE_REQUEST")
		run.runTestStepByName("SAVE_REQUEST")
		run.runTestStepByName("SUBMIT_REQUEST")
	}
	run.runTestStepByName("RESPONSE_TRANSFER") 
	run.runTestStepByName("VALIDATION_ERROR_CHECK")     
	validation_br=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")              
	if(validation_br.equals("true")){
		log.info("Test Case is getting Failed Due to Validation Error Please Check Groovy Log for More Details")
		testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
	}             	 	                      
	else{
		if(ilec.equals("NIS")){
			run.runTestStepByName("SUBMIT_API_RESPONSE")			
			log.info("ILEC is configure for API response")
		}
		else{
			log.info("ILEC is configure for TPE response")
		}
		def pep_validate_flag = testRunner.testCase.testSuite.project.getPropertyValue("PEP_DB_VALIDATION_FLAG")	
		if(pep_validate_flag.equals("ON")){
			run.runTestStepByName("VALIDATE_SEA_LSR_TRANS")
		     sea_status = context.expand( '${VALIDATE_SEA_LSR_TRANS#PEP_DB_VALIDATION_FLAG}' )
		}
		else{
			sea_status="Pass"
			log.info("PEP DB VALIDATION FLAG VALUE OFF, SKIPPING PEP VALIDAITON")
		}				
		log.info ("PEP STATUS:= "+sea_status)
		testRunner.testCase.setPropertyValue( "PEP_DB_VALIDATION_FLAG", sea_status)   	               		
		if(sea_status.equals("Fail")){
			log.info("Test Case is getting Failed Due to SEA_LSR_TRANS DB Validation Error Please Check Groovy Log for More Details")
			testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
		}
		else{
			def basic_validate_flag = testRunner.testCase.testSuite.project.getPropertyValue("BASIC_DB_VALIDATION_FLAG")	
			if(basic_validate_flag.equals("ON")){
				if( pep_validate_flag.equals("OFF"))
				{
					run.runTestStepByName("DELAY FOR CH VALIDATION IF PEP VALIDATION SKIPPED")
				}
				run.runTestStepByName("VALIDATE_LSR_MESSAGE")			
				order_status = context.expand( '${VALIDATE_LSR_MESSAGE#LSR_QA_VALIDATION_FLAG}' )
			}
			else{
				order_status="Pass"
				log.info("CH DB VALIDATION FLAG VALUE OFF, SKIPPING CH VALIDAITON")
			}			
			log.info ("LSR STATUS:= "+order_status)			
			testRunner.testCase.setPropertyValue( "LSR_QA_VALIDATION_FLAG", order_status)   	               		
			if(order_status.equals("Fail")){
				log.info("Test Case is getting Failed Due to LSR_ORDER DB Validation Error Please Check Groovy Log for More Details")
				testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
			}
			else{
					flowvalue=testRunner.testCase.getPropertyValue("FLOW")
             			supremarkflow=testRunner.testCase.getPropertyValue("SUPP_REMARKS_FLOW")
             			suppstatusflow=testRunner.testCase.getPropertyValue("SUPP_STATUS_FLOW")             			
            			if(flowvalue.equals("NOFLOW") || flowvalue.equals("")){
            					log.info("NOFLOW for further Execution Found")
            			}
            			else{
            				String delimeter="[|]"
                 			String[] flowExe = flowvalue.split(delimeter)
                 			String[] remarksflowExe = supremarkflow.split(delimeter)
                 			String[] statusflowExe = suppstatusflow.split(delimeter)                 			
                 			loop=0
                 			for(int j=0;j&lt;flowExe.size();j++){                 	                 	
                 				if(flowExe[j].contains("SUPP")){                  		                 		
                 					for(int k=loop;k&lt;remarksflowExe.size();k++){									           
                 						testRunner.testCase.setPropertyValue( "SUPP_REMARKS_SINGLE" , remarksflowExe[k] )
                 		      			testRunner.testCase.setPropertyValue( "SUPP_STATUS_SINGLE" , statusflowExe[k] )                 		      			
			                			loop=loop+1
			                			log.info ("SELECTED SUPP REMARKS:="+remarksflowExe[k])
			                			log.info ("SELECTED SUPP STATUS:="+statusflowExe[k])			                		
			                			break
		                			}                        
		               			log.info ("SELECTED SUPP FLOW:="+flowExe[j])		                                		                 		               
                 					String fisrtvalue=Integer.toString(j)
                 					testRunner.testCase.setPropertyValue( "FIRSTFLOW" , fisrtvalue )
                 					run.runTestStepByName("SUBMIT_SUP_REQUEST")
                 					run.runTestStepByName("VER_TRANSFORMATION")
                 					addvalue=testRunner.testCase.getPropertyValue("TC_NAME")
                 					addvalue=addvalue+"_"+flowExe[j]
	                 				testRunner.testCase.setPropertyValue("TC_NAME", addvalue)
     	          			}	
          	       			else{
               	  				log.info ("SELECTED SUPP FLOW:="+flowExe[j])		                                		                 		               
                 					String fisrtvalue=Integer.toString(j)
                 					testRunner.testCase.setPropertyValue( "FIRSTFLOW" , fisrtvalue )
                 					run.runTestStepByName("SUBMIT_ASRC_REQUEST")
                 					addvalue=testRunner.testCase.getPropertyValue("TC_NAME")
                 					addvalue=addvalue+"_"+flowExe[j]
                 					testRunner.testCase.setPropertyValue("TC_NAME", addvalue)
                 				}
                 			}                            	
            			}
           			log.info testRunner.testCase.getPropertyValue("TC_NAME")
					run.runTestStepByName("DELAY")
					def res_message_flag = testRunner.testCase.testSuite.project.getPropertyValue("RESPONSE_MESSAGE_QUEUE_FLAG")	
					if(res_message_flag.equals("ON")){
						run.runTestStepByName("VALIDATE_RESPONSE_MESSAGE_QUEUE")	
					}
					else{
						log.info (" RESPONSE_MESSAGE_QUEUE VALIDATION FLAG VALUE:= "+res_message_flag)
						log.info("RESPONSE MESSAGE QUEUE  VALIDATION FLAG VALUE OFF, SKIPPING  VALIDAITON")
					}					
				}
		}               
	}                                
	run.runTestStepByName("REPORT_GENERATION_HTML")          
}
else{
	log.info("TestCase are Remaing for Execution")
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_PON_DATE" id="ed2c380d-2c73-4015-9190-fb7d440d3e52"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2c83ccd6-1fcf-46c0-9531-68eb0f4dab07</con:targetTestCase><con:properties><con:property><con:name>CURR_DT</con:name><con:value>04-13-2017-0733PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value>04-13-2017</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>04-13-2017-0733PM</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>04/13/2017 07:33:20 PM</con:value></con:property><con:property><con:name>PON</con:name><con:value>04132017073320PM</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>CCST_E2E</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property></con:properties><con:returnProperties><con:entry>CURR_DT</con:entry><con:entry>CUSTOMER</con:entry><con:entry>DDD</con:entry><con:entry>DUE_DT</con:entry><con:entry>PON</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_PON_DATE" id="50d57bb3-f7bc-47d2-a513-2c2a64a0260a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>PON</con:name><con:sourceType>PON</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PON</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false" entitize="false" transferChildNodes="false"><con:name>CUSTOMER</con:name><con:sourceType>CUSTOMER</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CUSTOMER</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>DUE_DT</con:name><con:sourceType>DUE_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DUE_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="2801a2ba-5bd9-49b7-927e-326a5b5374f4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="Delay1" id="445beaa5-f9e3-4437-8e7d-81648c9fb5d5"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="01757292-c5eb-4d5a-8012-6522b568b1b6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e5392145-3908-4830-ba5e-08b52ece2964"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="1ca4abdf-8de3-426b-90cb-303e48118af5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="87af6c5f-3044-4ba2-9343-206e5bd439f2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="0b9b46c4-1ed4-4693-b237-f20276ca3738"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEA_LSR_TRANS" id="349e5032-1a88-4d50-8091-625726ffbee5" disabled="true"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>29ce6024-7c19-4a9b-93af-b160fc46b8d4</con:targetTestCase><con:properties><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#STATUS}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>LOCAL_NUMBER</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>OID</con:name><con:value/></con:property><con:property><con:name>PARENT_OID</con:name><con:value/></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:returnProperties><con:entry>OID</con:entry><con:entry>PARENT_OID</con:entry><con:entry>PEP_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_LSR_MESSAGE" id="a5534346-c10b-4478-a3c3-35774932557d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>a2ba0aad-5f07-490c-bb13-8cd0af012d7a</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property></con:properties><con:returnProperties><con:entry>LSR_QA_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_SUP_REQUEST" id="b0924d64-19fb-44a1-8fea-2f27d1e12636"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>61a814b3-c261-4342-80bd-3a9b0105a5ec</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>SUPP</con:name></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>SUPP_STATUS</con:name><con:value>${#TestCase#SUPP_STATUS_SINGLE}</con:value></con:property><con:property><con:name>SUPP_REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS_SINGLE}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>${#TestCase#FLOW}</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>${#TestCase#FIRSTFLOW}</con:value></con:property><con:property><con:name>VERNEW</con:name><con:value>03</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#SUPPRESPONSEFILE}</con:value></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry><con:entry>VERNEW</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="VER_TRANSFORMATION" id="b5ffd118-a954-4a37-a665-5c62c5eef31b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>verfromsup</con:name><con:sourceType>VERNEW</con:sourceType><con:sourceStep>SUBMIT_SUP_REQUEST</con:sourceStep><con:targetType>VER</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_ASRC_REQUEST" id="7cbba5a0-31e1-4c70-a098-eda1e2324075"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f38b5ed5-286b-4e28-97f6-7349768d9fd3</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODYASRC}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>${#TestCase#FIRSTFLOW}</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>${#TestCase#FLOW}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>ACTION_TYPE</con:name></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_API_RESPONSE" id="9e1cbd4e-f100-4e35-ac17-abb7b284ec99"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2d8f942e-ade9-4249-8d74-6f56236ee662</con:targetTestCase><con:properties><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSE_VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>false</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>lsr_order_response</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property></con:properties><con:returnProperties><con:entry>RESPONSE_VALIDATION_ERROR_CHECK_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="DELAY FOR CH VALIDATION IF PEP VALIDATION SKIPPED" id="fdf1d52b-68de-47a0-8b3f-01c485669171" disabled="true"><con:settings/><con:config><delay>300000</delay></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="f2d1e8e4-d4a2-49d2-bfc2-444cd63baa1d" disabled="true"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_RESPONSE_MESSAGE_QUEUE" id="6469eb85-8f9d-4467-8255-60e93be6d337" disabled="true"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4a0d11eb-4413-43be-b0fa-15a5863627d3</con:targetTestCase><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>${#TestCase#RESRAWINRESQUE}</con:value></con:property><con:property><con:name>OID</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="REPORT_GENERATION_HTML" id="e4cf626c-2581-4a06-9344-acade80a223f" disabled="true"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;


def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
def results = testRunner.results
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
def validation_flag_value=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")
def pep_status=testRunner.testCase.getPropertyValue("PEP_DB_VALIDATION_FLAG")
def lsr_status=testRunner.testCase.getPropertyValue("LSR_QA_VALIDATION_FLAG")
String teststatus="All Status Value="
log.info( "Number of Test step execute during one Test Case flow " + results.size())
def c = 0
for(int i=results.size()-10;i&lt;results.size();i++)
{
	if(c==10){
		break;
	}
	else{
		log.info( "TestStep = [" + results[i].testStep.name + "] : Test Status of Test Step = [" +results[i].status.toString()+"]" )
          if( results[i].status.toString() == "OK" ) {      
          	teststatus=teststatus+":"+"Pass"
             }
          else{
  	           teststatus=teststatus+":"+"Fail"
           }
	}
  c=c+1
}
log.info ("All TestCaseStatus is:= " + teststatus)
if( teststatus.contains("Fail"))
{
   testrun.setPropertyValue( "TEST_STATUS", "Fail")
}
else
{
	if(validation_flag_value.equals("true")){
		testrun.setPropertyValue( "TEST_STATUS", "Fail")			
	}
	else{
		if(pep_status.equals("Fail")){
			testrun.setPropertyValue( "TEST_STATUS", "Fail")
		}
		else{
		    if(lsr_status.equals("Fail")){
			     testrun.setPropertyValue( "TEST_STATUS", "Fail")
		    }
		    else{
			    testrun.setPropertyValue( "TEST_STATUS", "Pass")			
		    }
	    }		
   }      
}


TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#EXECUTION_START_TIME}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#PON}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"

File filepath = new File(filexmlname)


def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)
</script></con:config></con:testStep><con:testStep type="delay" name="END" id="fb939630-9a74-4459-8249-02e089904cf1" disabled="true"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="SOAP Request" id="188904e1-5a7c-4245-abc9-c4fc7562e387" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="SOAP Request" id="315ad009-e8a3-4825-aaa0-3a27f61f9c81"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.61.42.45:8001/axis/services/SOAPRequestHandler</con:endpoint><con:request/><con:assertion type="SOAP Response" id="10df79d6-889d-41d0-8adf-0e23a61102f9"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SOAP Request111" id="8040a1d1-a574-4a3c-b760-6e4e2783821c" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="SOAP Request111" id="4f9db507-57ea-4bde-8907-fbb3b5a62e3a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://stomvqachapi.va.neustar.com/axis/services/SOAPRequestHandler</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processSync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xsi:type="xsd:string"><![CDATA[<header>
   <Request value="lsr_order"/>
   <Subrequest value="dir_assist_list"/>
   <CustomerIdentifier value="CHAR_COMM"/>
   <InterfaceVersion value="LSOG9"/>
   <Supplier value="FPC"/>
   <UserIdentifier value="bpeluser"/>
   <UserPassword value="YnBlbHVzZXI="/>
   <ApplyBusinessRules value="N"/>
   <CustomerUse value="W00153045634"/>
   <Action value="submit"/>
   <IsUserPasswordEncoded value="YES"/>
</header>]]]]>><![CDATA[</in0>
         <in1 xsi:type="xsd:string"><![CDATA[
         <Request>
   <lsr_order>
      <lsr>
         <lsr_adminsection>
            <CCNA value="HFB"/>
            <PON value="W00153045634"/>
            <VER value="00"/>
            <LOCQTY value="001"/>
            <DTSENT value="01-24-2017-0744AM"/>
            <DDD value="01-25-2017"/>
            <REQTYP value="JB"/>
            <ACT value="N"/>
            <AGAUTH value="Y"/>
            <TOS value="2---"/>
         </lsr_adminsection>
         <billsection>
            <BAN1 value="N"/>
            <BI1 value="D"/>
            <BILLADDRESS/>
         </billsection>
         <contactsection>
            <INIT value="Prov Center"/>
            <TELNO value="571-287-1082"/>
            <IMPCON>
               <NAME value="Supervisor"/>
               <TELNO value="571-287-1082"/>
            </IMPCON>
         </contactsection>
      </lsr>
      <eu>
         <locationaccesscontainer type="container">
            <locationaccess>
               <LOCNUM value="001"/>
               <NAME value="BEAN,DONALD R &amp; SHARON"/>
               <AFT value="N"/>
               <SANO value="262"/>
               <SASD value="W"/>
               <SASN value="5TH"/>
               <SATH value="ST"/>
               <CITY value="CRESCENT CITY"/>
               <STATE value="ME"/>
               <ZIP value="95531"/>
            </locationaccess>
         </locationaccesscontainer>
         <eu_billsection/>
      </eu>
      <dlcontainer type="container">
         <dl>
            <listingcontrolsection>
               <DLNUM value="0001"/>
               <LACT value="N"/>
               <RTY value="LML"/>
               <LTY value="1"/>
               <STYC value="SL"/>
            </listingcontrolsection>
            <listingindicatorssection/>
            <listinginstructionsection>
               <LTN value="304-604-5634"/>
               <LNLN value="Bean"/>
               <LNFN value="Donald R  Sharon"/>
               <LANO value="262"/>
               <LASD value="W"/>
               <LASN value="5th"/>
               <LATH value="ST"/>
               <LALOC value="Crescent City"/>
               <LAST value="ME"/>
               <LAZC value="95531"/>
            </listinginstructionsection>
            <dl_deliveryaddresssection>
               <directorycontainer type="container">
                  <directory>
                     <DIRTYP value="W"/>
                     <DIRQTYNC value="1"/>
                  </directory>
               </directorycontainer>
            </dl_deliveryaddresssection>
            <dl_advertisingsection/>
         </dl>
      </dlcontainer>
   </lsr_order>
</Request>
         
         ]]]]>><![CDATA[</in1>
      </ns:processSync>
   </soapenv:Body>
</soapenv:Envelope>


]]></con:request><con:assertion type="SOAP Response" id="17377056-98ba-4907-94f6-92f052849c11"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="calltestcase" name="Run TestCase" id="1f6f8a7b-f4c3-47aa-8b33-c8ee0f695a71"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("VER","00")</con:setupScript><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/lsr order http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>LsrOrder</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>SUPP1|SUPP2|SUPP3|Cancel</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>FALSE</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>32</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>04/13/2017 07:33:20 PM</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>Frontier_DB_REQ_SUPP1_SUPP2_SUPP3_Cancel</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>BODY</con:name><con:value>Frontier_DB_REQ_BODY</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>lsr_order</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>port_loop</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>Frontier</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>LSOG9</con:value></con:property><con:property><con:name>PON</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">04132017073320PM</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">04-13-2017-0733PM</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">04-13-2017-0733PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">04-13-2017</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>(Focnonfatal.flow)</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>FOCREJECTSTATUS</con:value></con:property><con:property><con:name>SUPP_REMARKS_FLOW</con:name><con:value>(SuppJeopSoc.flow)|(Supp.flow)|(SuppnonfatalSupp.flow)</con:value></con:property><con:property><con:name>SUPP_REMARKS_SINGLE</con:name><con:value>(SuppnonfatalSupp.flow)</con:value></con:property><con:property><con:name>SUPP_STATUS_FLOW</con:name><con:value>SOCSTATUS|SUPPACCEPTSTATUS|SUPPREJECTSTATUS</con:value></con:property><con:property><con:name>SUPP_STATUS_SINGLE</con:name><con:value>SUPPREJECTSTATUS</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>Platform</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">12</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FRONTIERORDER</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CCST_E2E</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">example</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>3</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>false</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value/></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property><con:property><con:name>BODYASRC</con:name><con:value>REQ_ASRC</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>NIS_JB_ORDER_NACK_RESPONSE_BODY</con:value></con:property><con:property><con:name>SUPPRESPONSEFILE</con:name><con:value>NIS_JB_ORDER_NACK_RESPONSE_BODY</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Fail</con:value></con:property><con:property><con:name>VER</con:name><con:value>03</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>320</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>LsrSendOrder</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>LSR_SEND_ORDER</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="LSR_PREORDER_API_NS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="9d52f569-cd2e-4471-bf92-d81979d25e8a"><con:description>Lsr PreOrder  test case submits the Lsr Send PreOrder Request to CH</con:description><con:settings/><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="86159890-17ec-45a5-a404-d9942dc8c044"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
def run=testRunner
int loop=0
def flowvalue,testcasename
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"
DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
	Node nNode = nList.item(temp);
	if (nNode.getNodeType() == Node.ELEMENT_NODE) {
	       Element eElement = (Element) nNode;            
	       testcasename=eElement.getAttribute("name")
	       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
		  testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
	       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
	       	       testRunner.testCase.setPropertyValue( "VER" , "00" )	       	       
                      testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )		            
		            def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "HEADER" , header )
		            def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "BODY" , body )
		            def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "REQUEST" , request )
		            def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
	                 def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
	                 testRunner.testCase.setPropertyValue( "ILEC" , ilec )
		            def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
		            def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "FLOW" , flow )
		            def remarks= eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )
		            def status = eElement.getElementsByTagName("STATUS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "STATUS" , status )
		            def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )
		            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )
		            def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )
		            def asrc = eElement.getElementsByTagName("ASRC").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "BODYASRC" , asrc )
		            String testcasenumber=Integer.toString(temp)
		            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
		}
	     else{
		            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
	     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	   run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for LsrSendOrder")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="ab338fef-e650-496b-acd6-016d34dd1a5e"><con:settings/><con:config><script>def run=testRunner
String validation_br
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def testcasename=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
run.runTestStepByName("GET_PON_DATE")
run.runTestStepByName("TRANSFER_PON_DATE")             
if(flag.equals("TRUE")){
	run.runTestStepByName("VALIDATE_REQUEST")
	run.runTestStepByName("SAVE_REQUEST")
	run.runTestStepByName("SUBMIT_REQUEST")
	run.runTestStepByName("RESPONSE_TRANSFER") 
	run.runTestStepByName("VALIDATION_ERROR_CHECK")     
	validation_br=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")              
	if(validation_br.equals("true")){
		log.info("Test Case is getting Failed Due to Validation Error Please Check Groovy Log for More Details")
		testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
	}             	 	                      
	else{
		run.runTestStepByName("VALIDATE_SEA_LSR_PO_TRANS")
		def sea_status = context.expand( '${VALIDATE_SEA_LSR_PO_TRANS#PEP_DB_VALIDATION_FLAG}' )
		log.info ("PEP STATUS:= "+sea_status)
		testRunner.testCase.setPropertyValue( "PEP_DB_VALIDATION_FLAG", sea_status)   	               		
		if(sea_status.equals("Fail")){
			log.info("Test Case is getting Failed Due to SEA_LSR_PO_TRANS DB Validation Error Please Check Groovy Log for More Details")
			testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
		}
		else{
			run.runTestStepByName("VALIDATE_LSR_PREORDER_TABLE")			
			def preorder_status = context.expand( '${VALIDATE_LSR_PREORDER_TABLE#LSR_QA_VALIDATION_FLAG}' )
			log.info ("LSR STATUS:= "+preorder_status)			
			testRunner.testCase.setPropertyValue( "LSR_QA_VALIDATION_FLAG", preorder_status)   	               		
			if(preorder_status.equals("Fail")){
				log.info("Test Case is getting Failed Due to LSR_PREORDER DB Validation Error Please Check Groovy Log for More Details")
				testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
			}
			else{
				run.runTestStepByName("DELAY")
				run.runTestStepByName("VALIDATE_RESPONSE_MESSAGE_QUEUE")
			}
		}               
	}      

	                          
	run.runTestStepByName("REPORT_GENERATION_HTML")          
}
else{
	log.info("TestCase are Remaing for Execution")
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_PON_DATE" id="ba9b666a-7f2f-4020-aec2-82474f19123a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2c83ccd6-1fcf-46c0-9531-68eb0f4dab07</con:targetTestCase><con:properties><con:property><con:name>CURR_DT</con:name><con:value>04-13-2017-0739PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value>04-13-2017</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>04-13-2017-0739PM</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>04/13/2017 07:39:35 PM</con:value></con:property><con:property><con:name>PON</con:name><con:value>04132017073935PM</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>CCST_E2E</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property></con:properties><con:returnProperties><con:entry>CURR_DT</con:entry><con:entry>CUSTOMER</con:entry><con:entry>DDD</con:entry><con:entry>DUE_DT</con:entry><con:entry>PON</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_PON_DATE" id="0c6009c5-226f-4bfb-803d-c31bd29e915b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>PON</con:name><con:sourceType>PON</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PON</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false" entitize="false" transferChildNodes="false"><con:name>CUSTOMER</con:name><con:sourceType>CUSTOMER</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CUSTOMER</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>DUE_DT</con:name><con:sourceType>DUE_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DUE_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="77a35c6f-bcfc-41d9-a85b-77ecc349697a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="b310e5fb-8275-4629-b433-844fe28e81de"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="b8b42f28-2e47-4a87-a557-f2c454eeea3a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soapenv:Body>
      <soapenv:Fault>
         <faultcode xmlns:SOAP-ENV="http://xml.apache.org/axis/">SOAP-ENV:Server.ProcessingException</faultcode>
         <faultstring>SOAP-ENV:Server.ProcessingException:java.net.ConnectException: Connection refused</faultstring>
         <detail>
            <ns1:hostname xmlns:ns1="http://xml.apache.org/axis/">stomvqavchapi3.va.neustar.com</ns1:hostname>
         </detail>
      </soapenv:Fault>
   </soapenv:Body>
</soapenv:Envelope>]]></con:value></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="fb37f2be-711d-41ca-aef8-60b3a2d853c1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="52cece57-001a-46f9-969b-c09d06c0be22"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEA_LSR_PO_TRANS" id="05ec6fb8-ba84-41f4-b574-fde05bb70292"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>29ce6024-7c19-4a9b-93af-b160fc46b8d4</con:targetTestCase><con:properties><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#STATUS}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>LOCAL_NUMBER</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>OID</con:name><con:value/></con:property><con:property><con:name>PARENT_OID</con:name><con:value/></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property></con:properties><con:returnProperties><con:entry>OID</con:entry><con:entry>PARENT_OID</con:entry><con:entry>PEP_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_LSR_PREORDER_TABLE" id="4334a0ed-b2eb-436e-b870-0ddd83a18b81"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>a2ba0aad-5f07-490c-bb13-8cd0af012d7a</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property></con:properties><con:returnProperties><con:entry>LSR_QA_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="a4eabd3c-3d9a-486b-bce1-046ad0278428"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_RESPONSE_MESSAGE_QUEUE" id="25cd31fb-21b9-4d59-9a8f-0791ac66ca94"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4a0d11eb-4413-43be-b0fa-15a5863627d3</con:targetTestCase><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>${#TestCase#RESRAWINRESQUE}</con:value></con:property><con:property><con:name>OID</con:name><con:value>${#TestCase#OID}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="REPORT_GENERATION_HTML" id="401ef782-9c78-4965-bce4-20897ab7b746"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;

def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
def results = testRunner.results
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
def validation_flag_value=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")
def pep_status=testRunner.testCase.getPropertyValue("PEP_DB_VALIDATION_FLAG")
def lsr_status=testRunner.testCase.getPropertyValue("LSR_QA_VALIDATION_FLAG")
log.info testcasenumber
String teststatus="All Status Value="
log.info( "Number of Test step execute during one Test Case flow " + results.size())
def c = 0
for(int i=results.size()-10;i&lt;results.size();i++)
{
	if(c==10){
		break;
	}
	else{
		log.info( "TestStep = [" + results[i].testStep.name + "] : Test Status of Test Step = [" +results[i].status.toString()+"]" )
          if( results[i].status.toString() == "OK" ) {      
          	teststatus=teststatus+":"+"Pass"
             }
          else{
  	           teststatus=teststatus+":"+"Fail"
           }
	}
  c=c+1
}
log.info ("All TestCaseStatus is:= " + teststatus)
if( teststatus.contains("Fail"))
{
   testrun.setPropertyValue( "TEST_STATUS", "Fail")
}
else
{
	if(validation_flag_value.equals("true")){
		testrun.setPropertyValue( "TEST_STATUS", "Fail")			
	}
	else{
		if(pep_status.equals("Fail")){
			testrun.setPropertyValue( "TEST_STATUS", "Fail")
		}
		else{
		    if(lsr_status.equals("Fail")){
			     testrun.setPropertyValue( "TEST_STATUS", "Fail")
		    }
		    else{
			    testrun.setPropertyValue( "TEST_STATUS", "Pass")			
		    }
	    }		
   }      
}


TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#EXECUTION_START_TIME}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#PON}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"


File filepath = new File(filexmlname)
def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)




</script></con:config></con:testStep><con:testStep type="delay" name="END" id="28cb3a91-d19d-435f-b249-703857ae8574"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="SOAP Request_CLDTSENT" id="0c904ead-d567-4ae0-aeee-55360d6d7453"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="SOAP Request_CLDTSENT" id="fb50da86-0c26-4cce-a493-1b6f7647ad39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.61.4.103:8076/axis/services/SOAPRequestHandler</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processAsync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance"><![CDATA[<?xml version="1.0" encoding="UTF-8"?><header><Request value="lsr_order"/><Subrequest value="np_order"/><CustomerIdentifier value="NSTR"/><InterfaceVersion value="LSOG10"/><Supplier value="CenturyLink"/><UserIdentifier value="impetus"/><UserPassword value="impetus"/><ApplyBusinessRules value="Y"/><Action value="submit"/></header>]]]]>><![CDATA[</in0>
         <in1 xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance"><![CDATA[<?xml version="1.0" encoding="UTF-8"?><Request>
	<lsr_order>
		<lsr>
			<lsr_adminsection>
				
				<REQTYP value="CB"/>
				<NPDI value="D"/>
				<DDD value="06-21-2016"/>
				<CCNA value="AAA"/>
				<CC value="1111"/>
				<AN value="1234567890"/>
				<ACT value="V"/>
				<PON value="TESTTLS124CL"/>
				<VER value="01"/>
			</lsr_adminsection>
			<contactsection>
				<TELNO value="777-777-7878"/>
				<EMAIL value="fax@server-020.impetus.co.in"/>
			</contactsection>
			<REMARKS value="{FocnonfatalFocStatusSoc.xml}"/>
		</lsr>
		<eu>
			<locationaccesscontainer type="container">
				<locationaccess>
					<ZIP value="12345"/>
				</locationaccess>
			</locationaccesscontainer>
		</eu>
		<np>
			<np_servicedetailscontainer type="container">
				<np_servicedetails>
					<PORTEDNBR value="123-123-1234"/>
				</np_servicedetails>
			</np_servicedetailscontainer>
		</np>
	</lsr_order>
</Request>]]]]>><![CDATA[</in1>
      </ns:processAsync>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" id="c72127ec-d407-4380-94c3-3867f214f1a4"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SOAP Response_CL_ACK" id="e0a30554-ea74-4866-954c-6ff091fc0e26" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="SOAP Response_CL_ACK" id="7a0441f5-cfa3-4b6f-b872-e9898ad4689f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://stomvqachapi.va.neustar.com/axis/services/SOAPRequestHandler</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processAsync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xsi:type="xsd:string"><![CDATA[<Header> 
<Request value="lsr_order"/> 
<Subrequest value="ack"/> 
<TradingPartner value="CenturyLink"/> 
<Supplier value="LSRFAX"/>  
<InterfaceVersion value="LSOG6"/> 
<CustomerUse value=""/> 
<InputSource value="G"/> 
<UOMSupport value=""/> 
<CustomerIdentifier value="PAT_TPE"/> 
<UserIdentifier value="example"/>
<UserPassword value="example"/> 
<SubDomainId value=""/> 
<UniqueMsgId value="1979094705"/>
<ServerName value="Nightfire.SPI.LSRFAX.LSOG6.response_lsr_order"/>
</Header>>]]]]>><![CDATA[</in0>
<in1 xsi:type="xsd:string"><![CDATA[<Response> 
<lsr_order_response> 
<lsr_ack> 
<CCNA value="ZZZ"/> 
<PON value="TESTCERTFINAL4"/> 
<REQTYP value="CB"/> 
<ACT value="V"/> 
<DD value="06-26-2006"/> 
</lsr_ack> 
<ResponseType value="ack"/> 
</lsr_order_response> 
<ResponseType value="ack"/> 
</Response>]]]]>><![CDATA[</in1>
      </ns:processAsync>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fbc7ac8a-9cc7-4d8a-9840-382ab4ff4c70"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="PreorderRequest" id="b08318e3-6a3d-4b7e-8aa8-16c2b13c1fc1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="PreorderRequest" id="d81a3a8f-9d68-4375-b564-91bd3f44045e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.61.4.103:8076/axis/services/SOAPRequestHandler</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processAsync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xsi:type="xsd:string"><![CDATA[<header>
        <Request value="lsr_order"/>
        <Subrequest value="np_order"/>
        <CustomerIdentifier value="NSTR"/>
        <Supplier value="VZE"/>
        <InterfaceVersion value="LSOG9"/>
        <UserIdentifier value="impetus"/>
        <UserPassword value="impetus"/>
        <ApplyBusinessRules value="N"/>
        <Action value="submit"/>
</header>]]]]>><![CDATA[</in0>
         <in1 xsi:type="xsd:string"><![CDATA[<Request>
<lsr_order>
<lsr>
<lsr_adminsection>
<DTSENT value="12-30-2015-0343AM"/>
<REQTYP value="CB"/>
<AGAUTH value="Y"/>
<PON value="NSRTST776581"/>
<ACT value="V"/>
<NNSP value="1245"/>
<CCNA value="PUA"/>
<DDD value="06-29-2016"/>
<NPDI value="D"/>
<VER value="00"/>
<CC value="1111"/>
<AN value="1111111111"/>
</lsr_adminsection>
<contactsection>
<EMAIL value="Test"/>
<INIT value="Test"/>
<FAXNO value="111-111-1111"/>
<TELNO value="111-111-1111"/>
</contactsection>
</lsr>
<eu>
<locationaccesscontainer type="container">
<locationaccess>
<SATH value="Ts"/>
<CITY value="Test"/>
<SANO value="1245"/>
<LOCNUM value="001"/>
<SASN value="Test"/>
<EUMI value="Y"/>
<ZIP value="12456"/>
<NAME value="Test"/>
<STATE value="VA"/>
</locationaccess>
</locationaccesscontainer>
</eu>
<np>
<np_adminsection>
<NPQTY value="00001"/>
</np_adminsection>
<np_servicedetailscontainer type="container">
<np_servicedetails>
<NPT value="D"/>
<LNA value="V"/>
<LNUM value="00001"/>
<LOCNUM value="001"/>
<PORTEDNBR value="111-111-1111"/>
</np_servicedetails>
</np_servicedetailscontainer>
</np>
</lsr_order>
<SupplierLSROrderRequest>
<eu>
<locationaccesscontainer type="container">
<locationaccess>
<LOCNUM value="001"/>
</locationaccess>
</locationaccesscontainer>
</eu>
<np>
<np_servicedetailscontainer type="container">
<np_servicedetails>
<LOCNUM value="001"/>
<LNUM value="00001"/>
</np_servicedetails>
</np_servicedetailscontainer>
</np>
</SupplierLSROrderRequest>
</Request>]]]]>><![CDATA[</in1>
      </ns:processAsync>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8565aefe-822e-40bf-9fb7-bd141eb6ded0"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("VER","00")</con:setupScript><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/lsr preorder http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>LsrPreOrder</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>NOFLOW</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>FALSE</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>31</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>04/13/2017 07:39:35 PM</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>FPC_AV_REQ</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>BODY</con:name><con:value>FPC_AV_REQ_BODY</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>lsr_preorder</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>address_validation</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>FPC</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>LSOG9</con:value></con:property><con:property><con:name>PON</con:name><con:value>04132017073935PM</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">04-13-2017-0739PM</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>04-13-2017-0739PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">04-13-2017</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>addressMatch</con:value></con:property><con:property><con:name>STATUS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ADDRESSMATCHSTATUS</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>av</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FPCPREORDER</con:value></con:property><con:property><con:name>BODYASRC</con:name><con:value>REQ_ASRC</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>CCST_E2E</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soapenv:Body>
      <soapenv:Fault>
         <faultcode xmlns:SOAP-ENV="http://xml.apache.org/axis/">SOAP-ENV:Server.ProcessingException</faultcode>
         <faultstring>SOAP-ENV:Server.ProcessingException:java.net.ConnectException: Connection refused</faultstring>
         <detail>
            <ns1:hostname xmlns:ns1="http://xml.apache.org/axis/">stomvqavchapi3.va.neustar.com</ns1:hostname>
         </detail>
      </soapenv:Fault>
   </soapenv:Body>
</soapenv:Envelope>]]></con:value></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>true</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Fail</con:value></con:property><con:property><con:name>VER</con:name><con:value>00</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>2000</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>LsrSendPreOrder</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>LSR_SEND_PREORDER</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="PN_NOTIFICATION_NS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e9b31d78-88d7-4c52-8e0e-ca614dfb6f73"><con:description>Pn Notification test case submits the PN Request to CH</con:description><con:settings/><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="839b1de5-4cb7-4e52-9d61-23cb123b673f"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException

def run=testRunner
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"

DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
                Node nNode = nList.item(temp);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                       Element eElement = (Element) nNode;            
                       testcasename=eElement.getAttribute("name")                       
                       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
                       testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
                       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {                                 
                                            testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )                                         
                                            def header = eElement.getElementsByTagName("PN_FILE_NAME").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "PN_FILE_NAME" , header )
                                            def responseHeader = eElement.getElementsByTagName("BOXIP").item(0).getTextContent()
		                                  testRunner.testCase.setPropertyValue( "BOXIP" , responseHeader )
                                            def body = eElement.getElementsByTagName("BOX_USERNAME").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "BOX_USERNAME" , body )
                                            def asrc = eElement.getElementsByTagName("BOX_PASSWORD").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "BOX_PASSWORD" , asrc )                                            
                                            def responsefile = eElement.getElementsByTagName("RESPONSE_FILE_PATH_INBOX").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "RESPONSE_FILE_PATH_INBOX" , responsefile )		                                  
		                                  def processed = eElement.getElementsByTagName("RESPONSE_FILE_PATH_PROCESSED").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "RESPONSE_FILE_PATH_PROCESSED" , processed )		                                  
		                                  def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "ILEC" , ilec )		                    
		                                  def wtn = eElement.getElementsByTagName("WTN").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "WTN" , wtn )		                    
		                                  def customer = eElement.getElementsByTagName("CUSTOMER").item(0).getTextContent()		                                  
                                            testRunner.testCase.setPropertyValue( "CUSTOMER" ,  customer )
                                            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )                                           
                                            def remarks = eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )
                                            def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
		            				    testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )
		                                  String testcasenumber=Integer.toString(temp)
                                            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
                                }
                     else{
                                            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
                     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	  run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for Pn Notification")
run.gotoStepByName("END")		                     
</script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="8df906fc-0f29-4bfc-b53a-212a5b2d91c3"><con:settings/><con:config><script>def run=testRunner
def flowvalue
int loop=0
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def testcasename=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)        
if(flag.equals("TRUE")){
	run.runTestStepByName("SUBMIT_FILE_POLLER_RESPONSE")
	def response=context.expand( '${SUBMIT_FILE_POLLER_RESPONSE#FILE_POLLER_FLAG}' )
	log.info ("FILE POLLER RESPONSE SUBMISSION STATUS:= "+response)
	testRunner.testCase.setPropertyValue( "FILE_POLLER_FLAG", response)   	               		
	if(response.equals("false")){
		log.info("Test Case is getting Failed Due to File Poller Response Submission Please Check Groovy Log for More Details")
		testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
	}
	else{
		run.runTestStepByName("VALIDATE_PN_NOTIFICATION_MESSAGE")
		def db_vlidation=context.expand( '${VALIDATE_PN_NOTIFICATION_MESSAGE#LSR_QA_VALIDATION_FLAG}' )
		log.info ("LSR DB STATUS:= "+db_vlidation)
		testRunner.testCase.setPropertyValue( "LSR_QA_VALIDATION_FLAG", db_vlidation)   	               		
		if(db_vlidation.equals("Fail")){
			log.info("Test Case is getting Failed Due to Db Validation Error. Please Check Groovy Log for More Details")
			testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")
		}
		else{
			run.runTestStepByName("DELAY")                                                   
			run.runTestStepByName("VALIDATE_RESPONSE_MESSAGE_QUEUE")                                                   
		}				
	}	        
	run.runTestStepByName("REPORT_GENERATION_HTML") 
}
else{
	log.info("TestCase are Remaing for Execution")
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_FILE_POLLER_RESPONSE" id="1f874cf7-1aa0-4965-9d76-a5073c9b26c5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>072ec9cf-d3cd-4468-a60d-7e59a6438d16</con:targetTestCase><con:properties><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>BOXIP</con:name><con:value>${#TestCase#BOXIP}</con:value></con:property><con:property><con:name>PN_FILE_NAME</con:name><con:value>${#TestCase#PN_FILE_NAME}</con:value></con:property><con:property><con:name>BOX_USERNAME</con:name><con:value>${#TestCase#BOX_USERNAME}</con:value></con:property><con:property><con:name>BOX_PASSWORD</con:name><con:value>${#TestCase#BOX_PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE_FILE_PATH_INBOX</con:name><con:value>${#TestCase#RESPONSE_FILE_PATH_INBOX}</con:value></con:property><con:property><con:name>RESPONSE_FILE_PATH_PROCESSED</con:name><con:value>${#TestCase#RESPONSE_FILE_PATH_PROCESSED}</con:value></con:property><con:property><con:name>FILE_POLLER_FLAG</con:name><con:value>true</con:value></con:property></con:properties><con:returnProperties><con:entry>FILE_POLLER_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_PN_NOTIFICATION_MESSAGE" id="7beeec63-a672-4fa5-aa14-22c82c2b9dd5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>7ada811a-cb2f-4495-9a5a-e372782d0ed8</con:targetTestCase><con:properties><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>WTN</con:name><con:value>${#TestCase#WTN}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property></con:properties><con:returnProperties><con:entry>LSR_QA_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="c38dfe70-56a9-4e66-98ce-748bb7c27d57"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_RESPONSE_MESSAGE_QUEUE" id="1d4be119-bf2c-4537-9891-ea1df5c51cf0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>3d1e6e84-1a2c-470c-8d14-8ff295f2b325</con:targetTestCase><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#WTN}</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>${#TestCase#RESRAWINRESQUE}</con:value></con:property><con:property><con:name>OID</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="REPORT_GENERATION_HTML" id="a6b9da57-1260-4eb1-aea6-b91e9c8694c2"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;

def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
def results = testRunner.results
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
def validation_flag_value=testRunner.testCase.getPropertyValue("FILE_POLLER_FLAG")
def lsr_status=testRunner.testCase.getPropertyValue("LSR_QA_VALIDATION_FLAG")
String teststatus="All Status Value="
log.info( "Number of Test step execute during one Test Case flow " + results.size())
def c = 0
for(int i=results.size()-4;i&lt;results.size();i++)
{
	if(c==10){
		break;
	}
	else{
		log.info( "TestStep = [" + results[i].testStep.name + "] : Test Status of Test Step = [" +results[i].status.toString()+"]" )
          if( results[i].status.toString() == "OK" ) {      
          	teststatus=teststatus+":"+"Pass"
             }
          else{
  	           teststatus=teststatus+":"+"Fail"
           }
	}
  c=c+1
}
log.info ("All TestCaseStatus is:= " + teststatus)
if( teststatus.contains("Fail"))
{
   testrun.setPropertyValue( "TEST_STATUS", "Fail")
}
else
{
	if(validation_flag_value.equals("false")){
		testrun.setPropertyValue( "TEST_STATUS", "Fail")			
	}
	else{
		if(lsr_status.equals("Fail")){
			testrun.setPropertyValue( "TEST_STATUS", "Fail")
		}
		else{
			testrun.setPropertyValue( "TEST_STATUS", "Pass")			
		}	
	}      
}


TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#currenDate1}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#WTN}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"


File filepath = new File(filexmlname)
def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)</script></con:config></con:testStep><con:testStep type="delay" name="END" id="e02c123d-5c7e-47a8-ac8c-9a0eec6cb1fb"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:setupScript/><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/pn http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>Pn_Notification</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>6</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>FRONTIER_PN_NOTIFICATION</con:value></con:property><con:property><con:name>PN_FILE_NAME</con:name><con:value>836_FRONTIER_PN.txt</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>Frontier</con:value></con:property><con:property><con:name>BOXIP</con:name><con:value>192.168.98.10</con:value></con:property><con:property><con:name>BOX_USERNAME</con:name><con:value>mgrqa</con:value></con:property><con:property><con:name>BOX_PASSWORD</con:name><con:value>welcome</con:value></con:property><con:property><con:name>RESPONSE_FILE_PATH_INBOX</con:name><con:value>/export/home/mgrqa/basictpe/nfi/runtime/frontier_order_emulator_gateway/inbox</con:value></con:property><con:property><con:name>RESPONSE_FILE_PATH_PROCESSED</con:name><con:value>/export/home/mgrqa/basictpe/nfi/runtime/frontier_order_emulator_gateway</con:value></con:property><con:property><con:name>WTN</con:name><con:value>787-228-3383</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>FRONTIERFLOW</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FRONTIERPNORDER</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">PAT_TPE</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>2</con:value></con:property><con:property><con:name>FILE_POLLER_FLAG</con:name><con:value>true</con:value></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Fail</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>100</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>Pn_Notification</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>PN_NOTIFICATION</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LSR_RECEIVE_ORDER_API_NS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d8e57df5-770e-43c6-8b41-7c1e3a77a156"><con:description>Lsr Receive Order  test case submits the Lsr Receive Order Request to CH</con:description><con:settings/><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="cf1f4640-f98b-4f7a-8913-214e1b7ffae5"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException

def run=testRunner
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"

DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
                Node nNode = nList.item(temp);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                       Element eElement = (Element) nNode;            
                       testcasename=eElement.getAttribute("name")                       
                       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
                       testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
                       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
                                            testRunner.testCase.setPropertyValue( "VER" , "00" )                                   
                                            testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )                                         
                                            def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADER" , header )
                                            def responseHeader = eElement.getElementsByTagName("RESPONSEHEADER").item(0).getTextContent()
		                                  testRunner.testCase.setPropertyValue( "RESPONSEHEADER" , responseHeader )
                                            def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "BODY" , body )
                                            def asrc = eElement.getElementsByTagName("ASRC").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "BODYASRC" , asrc )
                                            def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REQUEST" , request )
                                            def response = eElement.getElementsByTagName("RESPONSE").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "RESPONSE" , response )
                                            def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
          	                             def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
		                                  testRunner.testCase.setPropertyValue( "ILEC" , ilec )
		                                  def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
                                            def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "FLOW" , flow )
                                            def remarks= eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )
                                            def suppremarks = eElement.getElementsByTagName("SUPP_REMARKS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUPP_REMARKS_FLOW" , suppremarks )
                                            def status = eElement.getElementsByTagName("STATUS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "STATUS" , status )
                                            def suppstatus = eElement.getElementsByTagName("SUPP_STATUS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUPP_STATUS_FLOW" , suppstatus )
                                            def ccna = eElement.getElementsByTagName("CCNA").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CCNA" , ccna )
                                            def responsefile = eElement.getElementsByTagName("RESPONSEFILE").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "RESPONSEFILE" , responsefile )
		                                  def suppresponsefile = eElement.getElementsByTagName("SUPPRESPONSEFILE").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "SUPPRESPONSEFILE" , suppresponsefile )
		                                  def customer = eElement.getElementsByTagName("CUSTOMER").item(0).getTextContent()		                                  
		                                  String delimeter="[|]"
                                            String[] customer1 = customer.split(delimeter)
                                            testRunner.testCase.setPropertyValue( "CUSTOMER" ,  customer1[0] )
                                            testRunner.testCase.setPropertyValue( "CUSTOMERRESPONSEDOMAIN" ,  customer1[1] ) 
                                             def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )
                                            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )
                                            def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()                       
                                            testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )                   
                                            def esrGeneration = eElement.getElementsByTagName("ESRGENERATION").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "ESRGENERATION" , esrGeneration )   
		                                  String testcasenumber=Integer.toString(temp)
                                            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
                                }
                     else{
                                            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
                     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	   run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for LsrReceiveOrder")
run.gotoStepByName("END")		                     
</script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="07d0ff1f-bacc-4e58-8e20-8af87f05cc3e"><con:settings/><con:config><script>def run=testRunner
def flowvalue
int loop=0
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def esrGenerationFlag=testRunner.testCase.getPropertyValue("ESRGENERATION")
def testcasename=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
log.info("ESR GENERATION Flag Value for Test Case :"+testcasename+" is "+ esrGenerationFlag)
run.runTestStepByName("GET_PON_DATE")
run.runTestStepByName("TRANSFER_PON_DATE")             
if(flag.equals("TRUE")){
	run.runTestStepByName("VALIDATE_REQUEST")
	run.runTestStepByName("SAVE_REQUEST")
	run.runTestStepByName("SUBMIT_REQUEST")
	run.runTestStepByName("RESPONSE_TRANSFER") 
	run.runTestStepByName("VALIDATION_ERROR_CHECK")     
	def validation_br=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG") 
	log.info ("REQUEST VALIDATION STATUS:= "+validation_br)             
	if(validation_br.equals("true")){
		log.info("Test Case is getting Failed Due to Validation Error Please Check Groovy Log for More Details")
		testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
	}             	 	                      
	else{
		run.runTestStepByName("GET_TXID")
		run.runTestStepByName("TRANSFER_TXID")
		run.runTestStepByName("SUBMIT_API_RESPONSE")
		def validation_res_br=context.expand( '${SUBMIT_API_RESPONSE#RESPONSE_VALIDATION_ERROR_CHECK_FLAG}' )
		log.info ("RESPONSE SUBMISSION STATUS:= "+validation_res_br)
		if(validation_res_br.equals("true")){
			log.info("Test Case is getting Failed Due to Validation Error In Response Submission Please Check Groovy Log for More Details")
			testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
		}
		else{
			run.runTestStepByName("VALIDATE_ESR_ORDER_STATUS")
			run.runTestStepByName("VALIDATE_SEA_LSR_TRANS")
			def sea_status = context.expand( '${VALIDATE_SEA_LSR_TRANS#PEP_DB_VALIDATION_FLAG}' )
			log.info ("PEP STATUS:= "+sea_status)
			testRunner.testCase.setPropertyValue( "PEP_DB_VALIDATION_FLAG", sea_status)   	               		
			if(sea_status.equals("Fail")){
				log.info("Test Case is getting Failed Due to SEA_LSR_TRANS DB Validation Error Please Check Groovy Log for More Details")
				testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
			}
			else{
				run.runTestStepByName("VALIDATE_LSR_AND_RECEIVE_MESSAGE")			
				def lsr_status = context.expand( '${VALIDATE_LSR_AND_RECEIVE_MESSAGE#LSR_QA_VALIDATION_FLAG}' )
				log.info ("LSR STATUS:= "+lsr_status)			
				testRunner.testCase.setPropertyValue( "LSR_QA_VALIDATION_FLAG", lsr_status)   	               		
				if(lsr_status.equals("Fail")){
					log.info("Test Case is getting Failed Due to LSR_MESSAGE AND RECEIVE_LSR_MESSAGE DB Validation Error Please Check Groovy Log for More Details")
					testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
				}
				else{
					flowvalue=testRunner.testCase.getPropertyValue("FLOW")
             			supremarkflow=testRunner.testCase.getPropertyValue("SUPP_REMARKS_FLOW")
             			suppstatusflow=testRunner.testCase.getPropertyValue("SUPP_STATUS_FLOW")
             			suppresponsefile=testRunner.testCase.getPropertyValue("SUPPRESPONSEFILE")
            			if(flowvalue.equals("NOFLOW") || flowvalue.equals("")){
            					log.info("NOFLOW for further Execution Found")
            			}
            			else{
            				String delimeter="[|]"
                 			String[] flowExe = flowvalue.split(delimeter)
                 			String[] remarksflowExe = supremarkflow.split(delimeter)
                 			String[] statusflowExe = suppstatusflow.split(delimeter)
                 			String[] responseflowExe = suppresponsefile.split(delimeter)
                 			loop=0
                 			for(int j=0;j&lt;flowExe.size();j++){                 	                 	
                 				if(flowExe[j].contains("SUPP")){                  		                 		
                 					for(int k=loop;k&lt;remarksflowExe.size();k++){									           
                 						testRunner.testCase.setPropertyValue( "SUPP_REMARKS_SINGLE" , remarksflowExe[k] )
                 		      			testRunner.testCase.setPropertyValue( "SUPP_STATUS_SINGLE" , statusflowExe[k] )
                 		      			testRunner.testCase.setPropertyValue( "SUPPRESPONSEFILE_SINGLE" , responseflowExe[k] )
			                			loop=loop+1
			                			log.info ("SELECTED SUPP REMARKS:="+remarksflowExe[k])
			                			log.info ("SELECTED SUPP STATUS:="+statusflowExe[k])
			                			log.info ("SELECTED SUPP RESPONSE FILE STATUS:="+responseflowExe[k])
			                			break
		                			}                        
		               			log.info ("SELECTED SUPP FLOW:="+flowExe[j])		                                		                 		               
                 					String fisrtvalue=Integer.toString(j)
                 					testRunner.testCase.setPropertyValue( "FIRSTFLOW" , fisrtvalue )
                 					run.runTestStepByName("SUBMIT_SUP_REQUEST")
                 					run.runTestStepByName("VER_TRANSFORMATION")
                 					addvalue=testRunner.testCase.getPropertyValue("TC_NAME")
                 					addvalue=addvalue+"_"+flowExe[j]
	                 				testRunner.testCase.setPropertyValue("TC_NAME", addvalue)
	                 				log.info ("--Test Supp status last ver="+testRunner.testCase.getPropertyValue( "VER" ) + " j value " +j+  " fisrtvalue " +fisrtvalue + " and flow "+testRunner.testCase.getPropertyValue("FLOW")  + " and Remarks "+testRunner.testCase.getPropertyValue("REMARKS"));          
     	          			}	
          	       			else{
               	  				log.info ("SELECTED SUPP FLOW:="+flowExe[j])		                                		                 		               
                 					String fisrtvalue=Integer.toString(j)
                 					testRunner.testCase.setPropertyValue( "FIRSTFLOW" , fisrtvalue )
                 					run.runTestStepByName("SUBMIT_ASRC_REQUEST")
                 					addvalue=testRunner.testCase.getPropertyValue("TC_NAME")
                 					addvalue=addvalue+"_"+flowExe[j]
                 					testRunner.testCase.setPropertyValue("TC_NAME", addvalue)
                 				}
                 			}                            	
            			}
           			log.info testRunner.testCase.getPropertyValue("TC_NAME")
           			ponvalue=testRunner.testCase.getPropertyValue("PON")
           			vervalue=testRunner.testCase.getPropertyValue("VER")
           			
					run.runTestStepByName("DELAY")
					run.runTestStepByName("VALIDATE_RESPONSE_MESSAGE_QUEUE")
					log.info (" pon " +ponvalue+ " and ver "+vervalue + " and Remarks "+ testRunner.testCase.getPropertyValue("REMARKS"));
					
					if(esrGenerationFlag.equals("TRUE")){
						run.runTestStepByName("DelayESR")
						log.info ("Starting ESR XML VALIDATION  ------------------------------- ");
						run.runTestStepByName("VALIDATE_ESR_XML_MESSAGE")
					}
				}				
			}
		}
	}                                               
	run.runTestStepByName("REPORT_GENERATION_HTML")          
}
else{
	log.info("TestCase are Remaing for Execution")
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_PON_DATE" id="81355668-fa30-4fe6-b628-11f60eab5e08"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2c83ccd6-1fcf-46c0-9531-68eb0f4dab07</con:targetTestCase><con:properties><con:property><con:name>CURR_DT</con:name><con:value>07-19-2016-0245PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value>07-19-2016</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>07-19-2016-0245PM</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>07/19/2016 02:45:26 PM</con:value></con:property><con:property><con:name>PON</con:name><con:value>07192016024526PM</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>CUSTOMER</con:name></con:property></con:properties><con:returnProperties><con:entry>CURR_DT</con:entry><con:entry>DDD</con:entry><con:entry>DUE_DT</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>PON</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_PON_DATE" id="145e2792-6408-4927-9e43-e55e8523fa44"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>PON</con:name><con:sourceType>PON</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PON</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>DUE_DT</con:name><con:sourceType>DUE_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DUE_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="cb41f0dc-3b1d-4547-9b49-9b8442ab3a66"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="068090d7-2117-4939-b22e-270ade955ca4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="44fcc192-fb0e-45df-add8-3cccbad0e655"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="b883766f-741c-4dc0-bbd1-e4bb87a7622e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="a6679c1f-dc2a-4731-a99e-6f35697ca1f0"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_TXID" id="c9159f03-9b64-4e43-a2dd-60be3db9ed01"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4ce54f68-3bec-4c31-8640-f3e72eee0c92</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>25638</con:value></con:property></con:properties><con:returnProperties><con:entry>TXID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_TXID" id="6ed07a2f-ce18-4dd3-9104-f7650125f669"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>TXID</con:name><con:sourceType>TXID</con:sourceType><con:sourceStep>GET_TXID</con:sourceStep><con:targetType>TXID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_API_RESPONSE" id="d5956670-982d-4aa7-9651-c506a981ee3f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2d8f942e-ade9-4249-8d74-6f56236ee662</con:targetTestCase><con:properties><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSE_VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>false</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property></con:properties><con:returnProperties><con:entry>RESPONSE_VALIDATION_ERROR_CHECK_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_ESR_ORDER_STATUS" id="e320bbff-a2cb-43c2-b63c-2037df421004"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>631f4099-ba1d-44c7-b4e1-1da85cc20027</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>ACTION</con:name></con:property><con:property><con:name>ESR_GENERATION_FLAG</con:name><con:value>${#TestCase#ESRGENERATION}</con:value></con:property><con:property><con:name>ESR_GENERATION_ORDER_STATUS_VALIDATION</con:name><con:value>Pass</con:value></con:property></con:properties><con:returnProperties><con:entry>ESR_GENERATION_ORDER_STATUS_VALIDATION</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEA_LSR_TRANS" id="9512ceea-c4ea-4713-b03e-f03593ed6dae"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>8eca4b1c-01f5-45b4-8a42-9c7e49a17a23</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#STATUS}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:returnProperties><con:entry>PEP_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_LSR_AND_RECEIVE_MESSAGE" id="c67e142f-25b8-416f-be21-e4f32208ad9b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c396fcfa-0000-40a3-bc54-d58c95b41521</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ACTION</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property></con:properties><con:returnProperties><con:entry>VALIDATE_LSR_AND_RECEIVE_MESSAGE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_SUP_REQUEST" id="2ea32267-1afc-48b3-980e-5afa4333e6e9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c9cf9006-3369-48b5-80ed-a8d4ef1ad9f9</con:targetTestCase><con:properties><con:property><con:name>TXID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>SUPP_STATUS</con:name><con:value>${#TestCase#SUPP_STATUS_SINGLE}</con:value></con:property><con:property><con:name>SUPP_REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS_SINGLE}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>${#TestCase#FLOW}</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>${#TestCase#FIRSTFLOW}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#SUPPRESPONSEFILE_SINGLE}</con:value></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>VERNEW</con:name><con:value>03</con:value></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG_SUPP</con:name><con:value>false</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG_SUPP</con:name><con:value/></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG_SUPP</con:name><con:value/></con:property><con:property><con:name>ESRGENERATION</con:name><con:value>${#TestCase#ESRGENERATION}</con:value></con:property></con:properties><con:returnProperties><con:entry>VERNEW</con:entry><con:entry>VALIDATION_ERROR_CHECK_FLAG_SUPP</con:entry><con:entry>PEP_DB_VALIDATION_FLAG_SUPP</con:entry><con:entry>LSR_QA_VALIDATION_FLAG_SUPP</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="VER_TRANSFORMATION" id="f0226fa9-88ad-4b79-b220-5a92305c74b2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>verfromsup</con:name><con:sourceType>VERNEW</con:sourceType><con:sourceStep>SUBMIT_SUP_REQUEST</con:sourceStep><con:targetType>VER</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_ASRC_REQUEST" id="8dcc9655-6752-456e-b864-066bb2d91061"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>00ef6a3b-c8e2-4ac7-97bc-66bf9a2ef869</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODYASRC}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>${#TestCase#FIRSTFLOW}</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>${#TestCase#FLOW}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>ACTION_TYPE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>PHONE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="30529804-d029-4fc4-af99-d38b6aa300fd"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_RESPONSE_MESSAGE_QUEUE" id="0107c5b3-2d25-4cf5-bec7-14ea065fd7f2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4a0d11eb-4413-43be-b0fa-15a5863627d3</con:targetTestCase><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>${#TestCase#RESRAWINRESQUE}</con:value></con:property><con:property><con:name>OID</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="DelayESR" id="61ba97e7-eba0-4c44-b8b7-a9e6738bd6cd"><con:settings/><con:config><delay>50000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_ESR_XML_MESSAGE" id="4e5f1f59-6406-4e0b-a693-3ccec9c69065"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4bcb0357-d987-411c-9fa8-738738076ebd</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>${#TestCase#FLOW}</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>${#TestCase#FIRSTFLOW}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>SUPP_REMARKS_FLOW</con:name><con:value>${#TestCase#SUPP_REMARKS_FLOW}</con:value></con:property><con:property><con:name>MAXVER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>ACTION</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ESR_GENERATION_VALIDATION</con:name><con:value>Fail</con:value></con:property></con:properties><con:returnProperties><con:entry>ESR_GENERATION_VALIDATION</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="REPORT_GENERATION_HTML" id="125c9eba-5dbe-4f38-a74b-1533db8ad338"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;

def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
def results = testRunner.results
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
def validation_flag_value=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")
def pep_status=testRunner.testCase.getPropertyValue("PEP_DB_VALIDATION_FLAG")
def lsr_status=testRunner.testCase.getPropertyValue("LSR_QA_VALIDATION_FLAG")
String teststatus="All Status Value="
log.info( "Number of Test step execute during one Test Case flow " + results.size())
def c = 0
for(int i=results.size()-10;i&lt;results.size();i++)
{
	if(c==10){
		break;
	}
	else{
		log.info( "TestStep = [" + results[i].testStep.name + "] : Test Status of Test Step = [" +results[i].status.toString()+"]" )
          if( results[i].status.toString() == "OK" ) {      
          	teststatus=teststatus+":"+"Pass"
             }
          else{
  	           teststatus=teststatus+":"+"Fail"
           }
	}
  c=c+1
}
log.info ("All TestCaseStatus is:= " + teststatus)
if( teststatus.contains("Fail"))
{
   testrun.setPropertyValue( "TEST_STATUS", "Fail")
}
else
{
	if(validation_flag_value.equals("true")){
		testrun.setPropertyValue( "TEST_STATUS", "Fail")			
	}
	else{
		if(pep_status.equals("Fail")){
			testrun.setPropertyValue( "TEST_STATUS", "Fail")
		}
		else{
		    if(lsr_status.equals("Fail")){
			     testrun.setPropertyValue( "TEST_STATUS", "Fail")
		    }
		    else{
			    testrun.setPropertyValue( "TEST_STATUS", "Pass")			
		    }
	    }		
   }      
}


TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#EXECUTION_START_TIME}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#PON}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"


File filepath = new File(filexmlname)
def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)</script></con:config></con:testStep><con:testStep type="delay" name="END" id="36d56295-16a7-4709-96b1-379cae667aad"><con:settings/><con:config><delay>4000</delay></con:config></con:testStep><con:testStep type="request" name="Non Bonded responses" id="aa4f69ca-e046-42f9-ae60-20e18bffe493"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="Non Bonded responses" id="808fa5f2-7375-44c7-b373-45712f6c20af"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://stomvqachapi.va.neustar.com/axis/services/SOAPRequestHandler</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processAsync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xsi:type="xsd:string"><![CDATA[<Header>
<Request value="lsr_order"/>
<Subrequest value="soc"/>
<Supplier value="TWC_PAT"/>

<InterfaceVersion value="LSOG6"/>
<CustomerUse value=""/>

<InputSource value="G"/>
<UOMSupport value=""/>
<CustomerIdentifier value="TWC_HT"/>
<UserIdentifier value="example"/>
<UserPassword value="example"/>
<SubDomainId value=""/>
<UniqueMsgId value="1979094787"/>
</Header>]]]]>><![CDATA[</in0>
<in1 xsi:type="xsd:string"><![CDATA[<Response>
<lsr_order_response>
<soc>
<lsrcm>
<lsrcm_adminsection>
<RDTSENT value="19-07-2016-0254AM"/>
<CCNA value=""/>
<PON value="07192016024526PM"/>
<ATN value="202-555-1212"/>
<CD value="12-31-2015"/>
<RT value="Z"/>
</lsrcm_adminsection>
</lsrcm>
</soc>
</lsr_order_response>
</Response>]]]]>><![CDATA[</in1>
      </ns:processAsync>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92872a60-6647-42c1-986c-8046a15bdeae"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Non Bonded Response" id="e5855c9e-432a-46a5-9eaa-c1b47ec846c3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="Non Bonded Response" id="d4270147-9b8c-40b2-8ad6-ad4e16e8e291"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.61.4.167:8272/axis/services/SOAPRequestHandler</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processAsync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xsi:type="xsd:string"><![CDATA[<header> 
         <Request value="lsr_order"/> 
         <Subrequest value="confirmation"/> 
         <CustomerIdentifier value="TWC_HT"/> 
         <InterfaceVersion value="LSOG6"/> 
         <Supplier value="TWC_PAT"/> 
         <UserIdentifier value="example"/>
         <UserPassword value="example"/> 
         <ApplyBusinessRules value="Y"/> 
         <CustomerUse value="Test"/> 
         <Action value="submit"/> 
         <TradingPartner value ="CenturyLink"/>
               
         </header>]]]]>><![CDATA[</in0>
         <in1 xsi:type="xsd:string"><![CDATA[
        <Response>
<lsr_order_response>
<focaccept>
<lr>
<lr_adminsection>
<DTSENT value="07-19-2016-0643PM"/>
<RT value="C"/>
<CCNA value=""/>
<PON value="07192016024526PM"/>
<DD value="07-19-2016"/>
</lr_adminsection>
</lr>
</focaccept>
<ResponseType value="focaccept"/>
</lsr_order_response>
</Response>
]]]]>><![CDATA[</in1>
      </ns:processAsync>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3276e244-f30e-4571-92a5-cbc714604003"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Receive response" id="dbdf1087-cf9d-4b3a-8609-24a9b6b23792"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="Receive response" id="b4deb139-f46c-485c-8809-9aac292195d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.61.4.167:8272/axis/services/SOAPRequestHandler</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPResponseHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
       <ns:processAsync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xsi:type="xsd:string"><![CDATA[<Header>
<Request value="lsr_order_response"/>
<Subrequest value="simple_np"/>
<Supplier value="TWC_PAT"/>
<InterfaceVersion value="LSOG6"/>
<CustomerUse value=""/>
<InputSource value="G"/>
<UOMSupport value=""/>
<CustomerIdentifier value="TWC_PAT"/>
<UserIdentifier value="example"/>
<UserPassword value="example"/> 
<SubDomainId value=""/>
<UniqueMsgId value="1993233951"/>
</Header>

]]]]>><![CDATA[</in0>
         <in1 xsi:type="xsd:string">
         <![CDATA[<Response>
<lsr_order_response>
<ResponseType value="focaccept"/>
<focaccept>
<lr>
<lr_adminsection>
<DTSENT value="12-18-2015-0458PM"/>
<PON value="07152016044557PM"/>
<VER value="00"/>
<DD value="07-19-2016"/>
<AN value="123456789123"/>
<RT value="C"/>
</lr_adminsection>
</lr>
</focaccept>
<TXID value="25619"/>
</lsr_order_response>
</Response>]]]]>><![CDATA[</in1>
      </ns:processAsync>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" id="92779312-ec6f-446d-b50d-d8133e5bfd74"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("VER","00")</con:setupScript><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/lsr receive http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>BODY</con:name><con:value>TWC_COMM_NP_ORDER_REQ_BODY</con:value></con:property><con:property><con:name>BODYASRC</con:name><con:value>REQ_ASRC</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>HTW</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>TWCLSR</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>07-19-2016-0245PM</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>TWC_HT</con:value></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value>TWC_PAT</con:value></con:property><con:property><con:name>DDD</con:name><con:value>07-19-2016</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>07-19-2016-0245PM</con:value></con:property><con:property><con:name>ESRGENERATION</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>FALSE</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>07/19/2016 02:45:26 PM</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>3</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>SUPP1|SUPP2|SUPP3|Cancel</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>LSOG6</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>TWC_PAT</con:value></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value>07192016024526PM</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>AckNegackRejectAcceptJeoSocPiaDsrcnDsredBcn:RecAckNegackRejectAcceptJeoSocPiaDsrcnDsredBcn</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>lsr_order</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>lsr_order_response</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>ACK_RESPONSE_BODY:NEGACK_RESPONSE_BODY:FOCREJECT_RESPONSE_BODY:FOCACCEPT_RESPONSE_BODY:JEOPARDY_RESPONSE_BODY:SOC_RESPONSE_BODY:PIA_RESPONSE_BODY:BCN_RESPONSE_BODY:DSRCN_RESPONSE_BODY:DSRED_RESPONSE_BODY</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>RES_HEADER</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>16</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>BCNSTATUS</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>np_order</con:value></con:property><con:property><con:name>SUPPRESPONSEFILE</con:name><con:value>SUPPREJECT_RESPONSE_BODY:SUPPACCEPT_RESPONSE_BODY|SUPPREJECT_RESPONSE_BODY:SUPPACCEPT_RESPONSE_BODY|SUPPREJECT_RESPONSE_BODY:SUPPACCEPT_RESPONSE_BODY</con:value></con:property><con:property><con:name>SUPPRESPONSEFILE_SINGLE</con:name><con:value>SUPPREJECT_RESPONSE_BODY:SUPPACCEPT_RESPONSE_BODY</con:value></con:property><con:property><con:name>SUPP_REMARKS_FLOW</con:name><con:value>SupprejectSuppAccept:RecSupprejectSuppAccept|SupprejectSuppAccept:RecSupprejectSuppAccept|SupprejectSuppAccept:RecSupprejectSuppAccept</con:value></con:property><con:property><con:name>SUPP_REMARKS_SINGLE</con:name><con:value>SupprejectSuppAccept:RecSupprejectSuppAccept</con:value></con:property><con:property><con:name>SUPP_STATUS_FLOW</con:name><con:value>SUPPACCEPTSTATUS|SUPPACCEPTSTATUS|SUPPACCEPTSTATUS</con:value></con:property><con:property><con:name>SUPP_STATUS_SINGLE</con:name><con:value>SUPPACCEPTSTATUS</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>np_order</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>TWC_COMM_NP_ORDER_SUPP1_SUPP2_SUPP3_Cancel</con:value></con:property><con:property><con:name>TC_TYPE</con:name><con:value>Order</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>17</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>LsrReceiveOrder</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>LSR_RECEIVE_ORDER</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Fail</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>100</con:value></con:property><con:property><con:name>TXID</con:name><con:value>25638</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>false</con:value></con:property><con:property><con:name>VER</con:name><con:value>00</con:value></con:property><con:property><con:name>ESR_GENERATION_ORDER_STATUS_VAL</con:name><con:value>TRUE</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="LSR_RECEIVE_PREORDER_API_NS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f2d15156-5299-4eb9-82bd-2bce29ad18bc"><con:description>Lsr Receive PreOrder  test case submits the Lsr Receive PreOrder Request to CH</con:description><con:settings/><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="106d9844-f9ee-48de-ba5c-4af172899607"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException

def run=testRunner
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"

DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
                Node nNode = nList.item(temp);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                       Element eElement = (Element) nNode;            
                       testcasename=eElement.getAttribute("name")                       
                       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
                       testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
                       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
                                            testRunner.testCase.setPropertyValue( "VER" , "00" )                                   
                                            testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )                                         
                                            def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADER" , header )
                                            def responseHeader = eElement.getElementsByTagName("RESPONSEHEADER").item(0).getTextContent()
		                                  testRunner.testCase.setPropertyValue( "RESPONSEHEADER" , responseHeader )
                                            def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "BODY" , body )
                                            def asrc = eElement.getElementsByTagName("ASRC").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "BODYASRC" , asrc )
                                            def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REQUEST" , request )
                                            def response = eElement.getElementsByTagName("RESPONSE").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "RESPONSE" , response )
                                            def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
          	                             def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
		                                  testRunner.testCase.setPropertyValue( "ILEC" , ilec )
		                                  def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
                                            def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "FLOW" , flow )
                                            def remarks= eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )
                                            def status = eElement.getElementsByTagName("STATUS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "STATUS" , status )
                                            def ccna = eElement.getElementsByTagName("CCNA").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CCNA" , ccna )
                                            def responsefile = eElement.getElementsByTagName("RESPONSEFILE").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "RESPONSEFILE" , responsefile )		                                  
		                                  def customer = eElement.getElementsByTagName("CUSTOMER").item(0).getTextContent()		                                  
		                                  String delimeter="[|]"
                                            String[] customer1 = customer.split(delimeter)
                                            testRunner.testCase.setPropertyValue( "CUSTOMER" ,  customer1[0] )
                                            testRunner.testCase.setPropertyValue( "CUSTOMERRESPONSEDOMAIN" ,  customer1[1] ) 
                                             def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )
                                            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )
                                            def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()                       
                                            testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )                                            
		                                  String testcasenumber=Integer.toString(temp)
                                            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
                                }
                     else{
                                            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
                     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	  run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for LsrReceivePreOrder")
run.gotoStepByName("END")		                     
</script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="47a8e231-5aeb-4387-b3ae-37cad1774078"><con:settings/><con:config><script>def run=testRunner
def flowvalue
int loop=0
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def testcasename=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
run.runTestStepByName("GET_PON_DATE")
run.runTestStepByName("TRANSFER_PON_DATE")             
if(flag.equals("TRUE")){
	run.runTestStepByName("VALIDATE_REQUEST")
	run.runTestStepByName("SAVE_REQUEST")
	run.runTestStepByName("SUBMIT_REQUEST")
	run.runTestStepByName("RESPONSE_TRANSFER") 
	run.runTestStepByName("VALIDATION_ERROR_CHECK")     
	def validation_br=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG") 
	log.info ("REQUEST VALIDATION STATUS:= "+validation_br)             
	if(validation_br.equals("true")){
		log.info("Test Case is getting Failed Due to Validation Error Please Check Groovy Log for More Details")
		testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
	}             	 	                      
	else{
		run.runTestStepByName("GET_TXID")
		run.runTestStepByName("TRANSFER_TXID")
		run.runTestStepByName("SUBMIT_API_RESPONSE")
		def validation_res_br=context.expand( '${SUBMIT_API_RESPONSE#RESPONSE_VALIDATION_ERROR_CHECK_FLAG}' )
		log.info ("RESPONSE SUBMISSION STATUS:= "+validation_res_br)
		if(validation_res_br.equals("true")){
			log.info("Test Case is getting Failed Due to Validation Error In Response Submission Please Check Groovy Log for More Details")
			testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
		}
		else{
			run.runTestStepByName("VALIDATE_SEA_LSR_PO_TRANS")
			def sea_status = context.expand( '${VALIDATE_SEA_LSR_PO_TRANS#PEP_DB_VALIDATION_FLAG}' )
			log.info ("PEP STATUS:= "+sea_status)
			testRunner.testCase.setPropertyValue( "PEP_DB_VALIDATION_FLAG", sea_status)   	               		
			if(sea_status.equals("Fail")){
				log.info("Test Case is getting Failed Due to SEA_LSR_PO_TRANS DB Validation Error Please Check Groovy Log for More Details")
				testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
			}
			else{
				run.runTestStepByName("VALIDATE_LSR_AND_RECEIVE_MESSAGE")			
				def lsr_status = context.expand( '${VALIDATE_LSR_AND_RECEIVE_MESSAGE#LSR_QA_VALIDATION_FLAG}' )
				log.info ("LSR STATUS:= "+lsr_status)			
				testRunner.testCase.setPropertyValue( "LSR_QA_VALIDATION_FLAG", lsr_status)   	               		
				if(lsr_status.equals("Fail")){
					log.info("Test Case is getting Failed Due to LSR_MESSAGE AND RECEIVE_LSR_MESSAGE DB Validation Error Please Check Groovy Log for More Details")
					testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
				}
				else{
					flowvalue=testRunner.testCase.getPropertyValue("FLOW")             			
            			if(flowvalue.equals("NOFLOW") || flowvalue.equals("")){
            				log.info("NOFLOW for further Execution Found")
            			}
            			else{
                            	log.info("NEED TO ADD CODE IF FLOW NEEDS TO BE EXECUTED")
            			}
           			log.info testRunner.testCase.getPropertyValue("TC_NAME")
					run.runTestStepByName("DELAY")
					run.runTestStepByName("VALIDATE_RESPONSE_MESSAGE_QUEUE")
				}				
			}
		}
	}                                               
	run.runTestStepByName("REPORT_GENERATION_HTML")          
}
else{
	log.info("TestCase are Remaing for Execution")
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_PON_DATE" id="86c4b696-8a3c-4268-bc22-0a55acc3a647"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2c83ccd6-1fcf-46c0-9531-68eb0f4dab07</con:targetTestCase><con:properties><con:property><con:name>CURR_DT</con:name><con:value>03-20-2016-0149AM</con:value></con:property><con:property><con:name>DDD</con:name><con:value>03-20-2016</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>03-20-2016-0149AM</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>03/20/2016 01:49:15 AM</con:value></con:property><con:property><con:name>PON</con:name><con:value>03202016014915AM</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>CUSTOMER</con:name></con:property></con:properties><con:returnProperties><con:entry>CURR_DT</con:entry><con:entry>DDD</con:entry><con:entry>DUE_DT</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>PON</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_PON_DATE" id="f98b9e4c-b7da-4687-a35b-6e9250860ecb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>PON</con:name><con:sourceType>PON</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PON</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>DUE_DT</con:name><con:sourceType>DUE_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DUE_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="abf6cf28-e9d6-44fc-a4c2-808cda0800b8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="9cc55d81-aa96-43b9-bb53-1907f79344a1"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="d96d7b0d-0fdb-4c5d-995e-3b0f451cf6c1"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soapenv:Body>
      <soapenv:Fault>
         <faultcode xmlns:SOAP-ENV="http://xml.apache.org/axis/">SOAP-ENV:Server.SecurityException</faultcode>
         <faultstring>SOAP-ENV:Server.SecurityException:The maximum number of unsuccessful login attempts has been reached. Please ask your domain administrator to change your password.</faultstring>
         <detail>
            <ns1:hostname xmlns:ns1="http://xml.apache.org/axis/">stossqapm20.va.neustar.com</ns1:hostname>
         </detail>
      </soapenv:Fault>
   </soapenv:Body>
</soapenv:Envelope>]]></con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="a256f36e-633c-4573-93ed-73d92fb645ec"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="e7ca56df-b843-4dcb-ac54-5595bf9a9ce5"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_TXID" id="b6afc9f4-79d4-449c-9eb9-c57b5b4b3b40"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4ce54f68-3bec-4c31-8640-f3e72eee0c92</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>903</con:value></con:property></con:properties><con:returnProperties><con:entry>TXID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_TXID" id="bd638719-47bd-4a85-8886-dea94ddf20ca"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>TXID</con:name><con:sourceType>TXID</con:sourceType><con:sourceStep>GET_TXID</con:sourceStep><con:targetType>TXID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_API_RESPONSE" id="4359d3de-d77b-427e-beda-3c1f8428627b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2d8f942e-ade9-4249-8d74-6f56236ee662</con:targetTestCase><con:properties><con:property><con:name>BODY</con:name><con:value/></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value/></con:property><con:property><con:name>RESPONSE_VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>false</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property></con:properties><con:returnProperties><con:entry>RESPONSE_VALIDATION_ERROR_CHECK_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEA_LSR_PO_TRANS" id="be65288e-51a0-4e5d-8f6a-d35036cd09ad"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>8eca4b1c-01f5-45b4-8a42-9c7e49a17a23</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#STATUS}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value/></con:property></con:properties><con:returnProperties><con:entry>PEP_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_LSR_AND_RECEIVE_MESSAGE" id="681a78f9-38f5-4e3c-a5ad-ab4736625f1f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c396fcfa-0000-40a3-bc54-d58c95b41521</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ACTION</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property></con:properties><con:returnProperties><con:entry>VALIDATE_LSR_AND_RECEIVE_MESSAGE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="a760fced-04ed-4756-a7dd-a8578f2c1e8e"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_RESPONSE_MESSAGE_QUEUE" id="00847776-fa95-45c1-aab6-7d2a00731007"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4a0d11eb-4413-43be-b0fa-15a5863627d3</con:targetTestCase><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>${#TestCase#RESRAWINRESQUE}</con:value></con:property><con:property><con:name>OID</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="REPORT_GENERATION_HTML" id="39efa6fc-69f3-4d81-8775-2c3570092968"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;
def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
def results = testRunner.results
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
def validation_flag_value=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")
def pep_status=testRunner.testCase.getPropertyValue("PEP_DB_VALIDATION_FLAG")
def lsr_status=testRunner.testCase.getPropertyValue("LSR_QA_VALIDATION_FLAG")
String teststatus="All Status Value="
log.info( "Number of Test step execute during one Test Case flow " + results.size())
def c = 0
for(int i=results.size()-10;i&lt;results.size();i++)
{
	if(c==10){
		break;
	}
	else{
		log.info( "TestStep = [" + results[i].testStep.name + "] : Test Status of Test Step = [" +results[i].status.toString()+"]" )
          if( results[i].status.toString() == "OK" ) {      
          	teststatus=teststatus+":"+"Pass"
             }
          else{
  	           teststatus=teststatus+":"+"Fail"
           }
	}
  c=c+1
}
log.info ("All TestCaseStatus is:= " + teststatus)
if( teststatus.contains("Fail"))
{
   testrun.setPropertyValue( "TEST_STATUS", "Fail")
}
else
{
	if(validation_flag_value.equals("true")){
		testrun.setPropertyValue( "TEST_STATUS", "Fail")			
	}
	else{
		if(pep_status.equals("Fail")){
			testrun.setPropertyValue( "TEST_STATUS", "Fail")
		}
		else{
		    if(lsr_status.equals("Fail")){
			     testrun.setPropertyValue( "TEST_STATUS", "Fail")
		    }
		    else{
			    testrun.setPropertyValue( "TEST_STATUS", "Pass")			
		    }
	    }		
   }      
}


TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#EXECUTION_START_TIME}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#PON}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"


File filepath = new File(filexmlname)
def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)</script></con:config></con:testStep><con:testStep type="delay" name="END" id="369f1702-4140-4402-8b5c-4746419ed449"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("VER","00")</con:setupScript><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/lsr receive preorder http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>LsrReceivePreOrder</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>NOFLOW</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>17</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>HAWAIITEL_cancel_reservation</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>BODY</con:name><con:value>HAWAIITEL_CR_PREORDER_REQ_BODY</con:value></con:property><con:property><con:name>BODYASRC</con:name><con:value>REQ_ASRC</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>lsr_preorder</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>cancel_reservation</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>HAWAIITEL</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>LSOG6</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>PAT</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>03/20/2016 01:49:15 AM</con:value></con:property><con:property><con:name>PON</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">03202016014915AM</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">03-20-2016-0149AM</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">03-20-2016-0149AM</con:value></con:property><con:property><con:name>DDD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">03-20-2016</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>taf:Rectaf</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>RESPONSESTATUS</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>cancel_reservation</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HAWAIITELCSR</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">PAT_CUST</con:value></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value>HAWAIITEL</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">example</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soapenv:Body>
      <soapenv:Fault>
         <faultcode xmlns:SOAP-ENV="http://xml.apache.org/axis/">SOAP-ENV:Server.SecurityException</faultcode>
         <faultstring>SOAP-ENV:Server.SecurityException:The maximum number of unsuccessful login attempts has been reached. Please ask your domain administrator to change your password.</faultstring>
         <detail>
            <ns1:hostname xmlns:ns1="http://xml.apache.org/axis/">stossqapm20.va.neustar.com</ns1:hostname>
         </detail>
      </soapenv:Fault>
   </soapenv:Body>
</soapenv:Envelope>]]></con:value></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>true</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value/></con:property><con:property><con:name>LSR_QA_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>RES_HEADER</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>CR_PREORDER_RES_BODY</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>lsr_preorder_response</con:value></con:property><con:property><con:name>TXID</con:name><con:value>903</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Fail</con:value></con:property><con:property><con:name>VER</con:name><con:value>00</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>100</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>LsrReceivePreOrder</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>LSR_RECEIVE_PREORDER</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="LOCALEZE_API_NS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ff1ac9ed-a2e1-4e7e-aab8-27d5a9d7c334"><con:description>LocaLeze test case submits the LocaLeze Request to CH</con:description><con:settings/><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="db502d3f-bd81-415b-b382-fbb35fef52d8"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
def run=testRunner
int loop=0
def flowvalue,testcasename
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"
DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
	Node nNode = nList.item(temp);
	if (nNode.getNodeType() == Node.ELEMENT_NODE) {
	       Element eElement = (Element) nNode;            
	       testcasename=eElement.getAttribute("name")
	       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
		  testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
	       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
	       	       testRunner.testCase.setPropertyValue( "VER" , "00" )	       	       
                      testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )		            
		            def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "HEADER" , header )
		            def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "BODY" , body )
		            def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "REQUEST" , request )
		            def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
	                 def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
	                 testRunner.testCase.setPropertyValue( "ILEC" , ilec )
		            def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
		            def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "FLOW" , flow )
		            def remarks= eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )
		            def status = eElement.getElementsByTagName("STATUS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "STATUS" , status )
		            def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )
		            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )
		            def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )
		            def asrc = eElement.getElementsByTagName("ASRC").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "BODYASRC" , asrc )
		            def customerid = eElement.getElementsByTagName("CUSTOMERID").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "CUSTOMER" , customerid )
		            String testcasenumber=Integer.toString(temp)
		            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
		}
	     else{
		            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
	     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	   run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for Localeze")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="1eaac8a5-9a3d-49c3-80cf-29a8e1f475ee"><con:settings/><con:config><script>def run=testRunner
String validation_br
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def testcasename=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
run.runTestStepByName("GET_PON_DATE")
run.runTestStepByName("TRANSFER_PON_DATE")             
if(flag.equals("TRUE")){
	run.runTestStepByName("SUBMIT_REQUEST")
	run.runTestStepByName("RESPONSE_TRANSFER") 
	run.runTestStepByName("VALIDATION_ERROR_CHECK")     
	validation_br=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")              
	log.info ("VALIDATION_FLAG VALUE:= "+validation_br)	
	if(validation_br.equals("true")){
		log.info("Test Case is getting Failed Due to Validation Error Please Check Groovy Log for More Details")
		testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
	}             	 	                      
	else{
		run.runTestStepByName("VALIDATE_SEA_LOCALEZE_TABLES")
		def sea_status = context.expand( '${VALIDATE_SEA_LOCALEZE_TABLES#PEP_DB_VALIDATION_FLAG}' )
		log.info ("PEP STATUS:= "+sea_status)	
		testRunner.testCase.setPropertyValue( "PEP_DB_VALIDATION_FLAG", sea_status)   	               	
		if(sea_status.equals("Fail")){
			log.info("Test Case is getting Failed Due to SEA_LSR_PO_TRANS DB Validation Error Please Check Groovy Log for More Details")
			testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
		}
		else{
			run.runTestStepByName("OID_TRANSFER")
			run.runTestStepByName("VALIDATE_LOCALEZE_TABLES")			
			def localeze_status = context.expand( '${VALIDATE_LOCALEZE_TABLES#LOCALEZE_VALIDATION_FLAG}' )
			log.info ("LOCALEZE STATUS:= "+localeze_status)		
			testRunner.testCase.setPropertyValue( "LOCALEZE_VALIDATION_FLAG", localeze_status)   	 	
			if(localeze_status.equals("Fail")){
				log.info("Test Case is getting Failed Due to LOCALEZE DB Validation Error Please Check Groovy Log for More Details")
				testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
			}
			else{
				run.runTestStepByName("DELAY")
				run.runTestStepByName("VALIDATE_RESPONSE_MESSAGE_QUEUE")
			}
		}               
	}                                
	run.runTestStepByName("REPORT_GENERATION_HTML")          
}
else{
	log.info("TestCase are Remaing for Execution")
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_PON_DATE" id="fc79f196-52ed-4ec8-a0cf-5d749d040e85"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>44a359ee-6e3c-485e-8de1-9ace3038a3fe</con:targetTestCase><con:properties><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>01-15-2014-0728PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value>01-15-2014</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>01-15-2014-0728PM</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>01/15/2014 07:28:01 PM</con:value></con:property><con:property><con:name>PON</con:name><con:value>1010010001</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>101-001-0001</con:value></con:property></con:properties><con:returnProperties><con:entry>CURR_DT</con:entry><con:entry>DUE_DT</con:entry><con:entry>PHONE</con:entry><con:entry>DDD</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>PON</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_PON_DATE" id="0072e4b8-b7cb-4949-9031-d1584c64b462"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>PON</con:name><con:sourceType>PON</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PON</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>DUE_DT</con:name><con:sourceType>DUE_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DUE_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>phone</con:name><con:sourceType>PHONE</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PHONE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="d9e8fe8a-d857-4f3d-99ef-bc3e837eb914"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry><con:entry>RESPONSESYNC</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="38aff5df-f5c9-4642-a905-3bb866e061f1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>submitresponsesync</con:name><con:sourceType>RESPONSESYNC</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSESYNC</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="ca40c578-a406-45c3-ad35-7a0eba17a9fa"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
def responsesync = context.expand( '${#TestCase#RECEIVERESPONSESYNC}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive Async response from webservice :" + response)
log.info ("Receive Sync response from webservice :" + responsesync)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEA_LOCALEZE_TABLES" id="24b221d3-30a4-48fa-a83a-4186453a6e7d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>29ce6024-7c19-4a9b-93af-b160fc46b8d4</con:targetTestCase><con:properties><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#STATUS}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>LOCAL_NUMBER</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>OID</con:name><con:value>2419</con:value></con:property><con:property><con:name>PARENT_OID</con:name><con:value>2379</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property></con:properties><con:returnProperties><con:entry>OID</con:entry><con:entry>PARENT_OID</con:entry><con:entry>PEP_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="OID_TRANSFER" id="a60fdd6b-0d4a-4ad6-b68f-118bb36a38e7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>oid</con:name><con:sourceType>OID</con:sourceType><con:sourceStep>VALIDATE_SEA_LOCALEZE_TABLES</con:sourceStep><con:targetType>OID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>parentoid</con:name><con:sourceType>PARENT_OID</con:sourceType><con:sourceStep>VALIDATE_SEA_LOCALEZE_TABLES</con:sourceStep><con:targetType>PARENT_OID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_LOCALEZE_TABLES" id="6347d6ca-8f3d-4e50-897a-5e7a40e08901"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>feff00fa-ff3a-4577-869c-70e49ac8f992</con:targetTestCase><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#STATUS}</con:value></con:property><con:property><con:name>OID</con:name><con:value>${#TestCase#OID}</con:value></con:property><con:property><con:name>PARENT_OID</con:name><con:value>${#TestCase#PARENT_OID}</con:value></con:property><con:property><con:name>LOCALEZE_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property></con:properties><con:returnProperties><con:entry>LOCALEZE_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="48fd9c5f-6651-4d5a-91d7-e80ae0080d95"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_RESPONSE_MESSAGE_QUEUE" id="0288dce5-5fc6-40cb-b608-6b0784e70528"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4a0d11eb-4413-43be-b0fa-15a5863627d3</con:targetTestCase><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>${#TestCase#RESRAWINRESQUE}</con:value></con:property><con:property><con:name>OID</con:name><con:value>${#TestCase#OID}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="REPORT_GENERATION_HTML" id="a1cd04bc-9eb6-4f6e-aa49-47baa8460c20"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;
def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
def results = testRunner.results
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
def validation_flag_value=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")
def pep_status=testRunner.testCase.getPropertyValue("PEP_DB_VALIDATION_FLAG")
def localeze_status=testRunner.testCase.getPropertyValue("LOCALEZE_VALIDATION_FLAG")
log.info testcasenumber
String teststatus="All Status Value="
log.info( "Number of Test step execute during one Test Case flow " + results.size())
def c = 0
for(int i=results.size()-10;i&lt;results.size();i++)
{
	if(c==10){
		break;
	}
	else{
		log.info( "TestStep = [" + results[i].testStep.name + "] : Test Status of Test Step = [" +results[i].status.toString()+"]" )
          if( results[i].status.toString() == "OK" ) {      
          	teststatus=teststatus+":"+"Pass"
             }
          else{
  	           teststatus=teststatus+":"+"Fail"
           }
	}
  c=c+1
}
log.info ("All TestCaseStatus is:= " + teststatus)
if( teststatus.contains("Fail"))
{
   testrun.setPropertyValue( "TEST_STATUS", "Fail")
}
else
{
	if(validation_flag_value.equals("true")){
		testrun.setPropertyValue( "TEST_STATUS", "Fail")			
	}
	else{
		if(pep_status.equals("Fail")){
			testrun.setPropertyValue( "TEST_STATUS", "Fail")
		}
		else{
		    if(localeze_status.equals("Fail")){
			     testrun.setPropertyValue( "TEST_STATUS", "Fail")
		    }
		    else{
			    testrun.setPropertyValue( "TEST_STATUS", "Pass")			
		    }
	    }		
   }      
}


TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#EXECUTION_START_TIME}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#PHONE}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"


File filepath = new File(filexmlname)
def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)
</script></con:config></con:testStep><con:testStep type="delay" name="END" id="dfed4d1d-2b3b-4dfa-9fb9-345666f5c48d"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:setupScript/><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/localeze http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>LocaLeze</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>NOFLOW</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>25</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>01/15/2014 07:28:01 PM</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>LOCALEZE_TQ_ERROR_REQ</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>BODY</con:name><con:value>LOCALEZE_TQ_ERROR_BODY</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>online_business_listing</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>TaxonomyQuery</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>Localeze</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>1_0</con:value></con:property><con:property><con:name>PON</con:name><con:value>1010010001</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>101-001-0001</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">01-15-2014-0728PM</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>01-15-2014-0728PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">01-15-2014</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>localezeasync</con:value></con:property><con:property><con:name>STATUS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ErrorResponseTQ</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>NOSVCTYP</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LOCALEZE</con:value></con:property><con:property><con:name>BODYASRC</con:name><con:value>REQ_ASRC</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>PAT_TPE</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>RECEIVERESPONSESYNC</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>false</con:value></con:property><con:property><con:name>LOCALEZE_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property><con:property><con:name>OID</con:name><con:value>2419</con:value></con:property><con:property><con:name>PARENT_OID</con:name><con:value>2379</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Pass</con:value></con:property><con:property><con:name>VER</con:name><con:value>00</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>600</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>LocaLeze</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>LOCALEZE</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="E911" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="27902ea4-a47e-45f8-b745-1962937431e1"><con:description>E911 test case submits the E911 Request to CH</con:description><con:settings/><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="e81da7c0-4af2-443c-939f-9d3e6040038b"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException

def run=testRunner
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"

DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
                Node nNode = nList.item(temp);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                       Element eElement = (Element) nNode;            
                       testcasename=eElement.getAttribute("name")                       
                       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
                       testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
                       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
                                            testRunner.testCase.setPropertyValue( "VER" , "00" )	       	       
                      					testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )                      		           
		            					def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "HEADER" , header )
		            					def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "BODY" , body )
		            					def asrc = eElement.getElementsByTagName("ASRC").item(0).getTextContent()		
		            					testRunner.testCase.setPropertyValue( "BODYASRC" , asrc )
		            					def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "REQUEST" , request )
		            					def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
	                 					def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
	                 					testRunner.testCase.setPropertyValue( "ILEC" , ilec )	                 
		            					def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
		            					def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "FLOW" , flow )
		            					def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )
		            					def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )		            
		            					def responsefilename = eElement.getElementsByTagName("RESPONSEFILE").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "RESPONSEFILE" , responsefilename )
		            					def remarks = eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "REMARKS" , remarks )
		            					def status = eElement.getElementsByTagName("STATUS").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "STATUS" , status )
		            					def responsemech = eElement.getElementsByTagName("RESPONSEMECHANISM").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "RESPONSEMECHANISM" , responsemech )		            
		            					def msgtyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()		
		            					testRunner.testCase.setPropertyValue( "MESSAGETYPE" , msgtyp )		            
		            					def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()		
		            					testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )
		            					def customerid = eElement.getElementsByTagName("CUSTOMERID").item(0).getTextContent()		
		            					testRunner.testCase.setPropertyValue( "CUSTOMER" , customerid )
		            					String testcasenumber=Integer.toString(temp)
		            					testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
                                }
                     else{
                                            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
                     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	  run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for E911")
run.gotoStepByName("END")		                     
</script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="acd1e5c0-01e2-44ff-b90c-bd9f9dbe1fef"><con:settings/><con:config><script>def run=testRunner
def flowvalue,mechanism,ilec
int loop=0
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def testcasename=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
run.runTestStepByName("GET_ORDERNUMBER_TELEPHONE")
run.runTestStepByName("TRANSFER_ORDER_TELE")             
if(flag.equals("TRUE")){
	ilec=testRunner.testCase.getPropertyValue("ILEC")
	if(ilec.equals("IntradoI2")){
		run.runTestStepByName("SUBMIT_REQUEST")
	}
	else{
		run.runTestStepByName("VALIDATE_REQUEST")
		run.runTestStepByName("SAVE_REQUEST")
		run.runTestStepByName("SUBMIT_REQUEST")
	}
	run.runTestStepByName("RESPONSE_TRANSFER") 
	run.runTestStepByName("VALIDATION_ERROR_CHECK")     
	def validation_br=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG") 
	log.info ("REQUEST VALIDATION STATUS:= "+validation_br)             
	if(validation_br.equals("true")){
		log.info("Test Case is getting Failed Due to Validation Error Please Check Groovy Log for More Details")
		testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
	}             	 	                      
	else{
		mechanism=testRunner.testCase.getPropertyValue("RESPONSEMECHANISM")
		if(mechanism.contains("FilePoller")){
			log.info("File Poller Response Mechanism is Configure")
			run.runTestStepByName("SUBMIT_RESPONSE")
		}
		else{
			log.info("TPE Response Mechanism is Configure")
		}		
		run.runTestStepByName("VALIDATE_E911_NENA_MESSAGE")
		def sea_status = context.expand( '${VALIDATE_E911_NENA_MESSAGE#E911_DB_VALIDATION_FLAG}' )
		log.info ("E911 STATUS:= "+sea_status)
		testRunner.testCase.setPropertyValue( "E911_DB_VALIDATION_FLAG", sea_status)   	               		
		if(sea_status.equals("Fail")){
			log.info("Test Case is getting Failed Due to E911 DB Validation Error Please Check Groovy Log for More Details")
			testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
		}
		else{
			flowvalue=testRunner.testCase.getPropertyValue("FLOW")             	
            	if(flowvalue.equals("NOFLOW") || flowvalue.equals("")){
            		log.info("NOFLOW for further Execution Found")
            	}
            	else{
          		String delimeter="[|]"
                 	String[] flowExe = flowvalue.split(delimeter)
                 	loop=0
                 	for(int j=0;j&lt;flowExe.size();j++){                 	                 	
                 		if(flowExe[j].contains("SUPP")){                  		                 		
                 			for(int k=loop;k&lt;remarksflowExe.size();k++){									           
			                	loop=loop+1
			                	break
		                	}                        
		               	log.info ("SELECTED SUPP FLOW:="+flowExe[j])		                                		                 		               
                 			String fisrtvalue=Integer.toString(j)
                 			testRunner.testCase.setPropertyValue( "FIRSTFLOW" , fisrtvalue )
                 			run.runTestStepByName("SUBMIT_SUP_REQUEST")
                 			run.runTestStepByName("VER_TRANSFORMATION")
                 			addvalue=testRunner.testCase.getPropertyValue("TC_NAME")
                 			addvalue=addvalue+"_"+flowExe[j]
	                 		testRunner.testCase.setPropertyValue("TC_NAME", addvalue)
     	          	}	
          	       	else{
               	  		log.info ("SELECTED SUPP FLOW:="+flowExe[j])		                                		                 		               
                 			String fisrtvalue=Integer.toString(j)
                 			testRunner.testCase.setPropertyValue( "FIRSTFLOW" , fisrtvalue )
                 			run.runTestStepByName("SUBMIT_ASRC_REQUEST")
                 			addvalue=testRunner.testCase.getPropertyValue("TC_NAME")
                 			addvalue=addvalue+"_"+flowExe[j]
                 			testRunner.testCase.setPropertyValue("TC_NAME", addvalue)
                 			}
                 		}                            	
            		}
           		log.info testRunner.testCase.getPropertyValue("TC_NAME")
				run.runTestStepByName("DELAY")
				run.runTestStepByName("VALIDATE_RESPONSE_MESSAGE_QUEUE")
			}				
	}                                               
	run.runTestStepByName("REPORT_GENERATION_HTML")          
}
else{
	log.info("TestCase are Remaing for Execution")
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_ORDERNUMBER_TELEPHONE" id="461f926d-c44b-43eb-b9d2-741b311fbb8c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>5a4bfb4e-fad3-4ddd-affa-6f627b55bde4</con:targetTestCase><con:properties><con:property><con:name>DDD</con:name><con:value>05-12-2017</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>053928039</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>234-539-1239</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>05/12/2017 05:28:39 PM</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>05-12-2017-0528PM</con:value></con:property><con:property><con:name>RESPONSEPHONE</con:name><con:value>2345391239</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property></con:properties><con:returnProperties><con:entry>DDD</con:entry><con:entry>ORDERNUMBER</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry><con:entry>PHONE</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>CURR_DT</con:entry><con:entry>RESPONSEPHONE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_ORDER_TELE" id="a6579573-9900-4f9e-b6e1-4cc994c2927f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>GET_ORDERNUMBER_TELEPHONE</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>GET_ORDERNUMBER_TELEPHONE</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>GET_ORDERNUMBER_TELEPHONE</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" entitize="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>GET_ORDERNUMBER_TELEPHONE</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" entitize="false" transferToAll="false" transferChildNodes="false" disabled="false"><con:name>ORDERNUMBER</con:name><con:sourceType>ORDERNUMBER</con:sourceType><con:sourceStep>GET_ORDERNUMBER_TELEPHONE</con:sourceStep><con:targetType>ORDERNUMBER</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false" entitize="false" disabled="false" transferToAll="false"><con:name>PHONE</con:name><con:sourceType>PHONE</con:sourceType><con:sourceStep>GET_ORDERNUMBER_TELEPHONE</con:sourceStep><con:targetType>PHONE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>GET_ORDERNUMBER_TELEPHONE</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>RESPONSEPHONE</con:name><con:sourceType>RESPONSEPHONE</con:sourceType><con:sourceStep>GET_ORDERNUMBER_TELEPHONE</con:sourceStep><con:targetType>RESPONSEPHONE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="aaf066e0-d58d-49fb-940c-9f3f30568526"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="e3cc8b8d-efca-4b99-b385-8c972201dfd6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="82fca795-cc54-4011-8a69-7e227a9c9656"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="244836fc-a8c8-43b1-82fd-6d021f827c3b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="4fa7cf06-111b-4c6a-921d-a189bcede6ed"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_RESPONSE" id="d872795b-281f-4912-bdc2-897a30f1298a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>98684897-f46b-41f6-ac33-024761e665c1</con:targetTestCase><con:properties><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#RESPONSEPHONE}</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>MESSAGETYPE</con:name><con:value>${#TestCase#MESSAGETYPE}</con:value></con:property><con:property><con:name>MultiResponseFileName</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>GATEWAY</con:name></con:property><con:property><con:name>BOXIP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Request</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RequestFolder</con:name></con:property><con:property><con:name>SingleResponseFileName</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_E911_NENA_MESSAGE" id="5fb41a80-12f3-40ab-89e6-4e5d0d4f7c68"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>31b415f4-109c-46e4-857e-134c45c94f54</con:targetTestCase><con:properties><con:property><con:name>OID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#STATUS}</con:value></con:property><con:property><con:name>E911_DB_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property></con:properties><con:returnProperties><con:entry>E911_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_ASRC_REQUEST" id="9ab7dbc3-f79d-45e6-a3cc-1392d5c232b1"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0f6898f1-34cb-4155-9fd9-493552b3bcfd</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODYASRC}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>${#TestCase#FIRSTFLOW}</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>${#TestCase#FLOW}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>ACTION_TYPE</con:name></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="23155e24-329a-4903-837c-082bb085ab8a"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_RESPONSE_MESSAGE_QUEUE" id="ad5c92d0-72ff-462b-99a3-f4dc5e080d26"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4a0d11eb-4413-43be-b0fa-15a5863627d3</con:targetTestCase><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>${#TestCase#RESRAWINRESQUE}</con:value></con:property><con:property><con:name>OID</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="REPORT_GENERATION_HTML" id="0f7e226d-696f-47d7-8e7e-8bd05f37fe22"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;
def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
def results = testRunner.results
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
def validation_flag_value=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")
def pep_status=testRunner.testCase.getPropertyValue("E911_DB_VALIDATION_FLAG")
String teststatus="All Status Value="
log.info( "Number of Test step execute during one Test Case flow " + results.size())
def c = 0
for(int i=results.size()-10;i&lt;results.size();i++)
{
	if(c==10){
		break;
	}
	else{
		log.info( "TestStep = [" + results[i].testStep.name + "] : Test Status of Test Step = [" +results[i].status.toString()+"]" )
          if( results[i].status.toString() == "OK" ) {      
          	teststatus=teststatus+":"+"Pass"
             }
          else{
  	           teststatus=teststatus+":"+"Fail"
           }
	}
  c=c+1
}
log.info ("All TestCaseStatus is:= " + teststatus)
if( teststatus.contains("Fail"))
{
   testrun.setPropertyValue( "TEST_STATUS", "Fail")
}
else
{
	if(validation_flag_value.equals("true")){
		testrun.setPropertyValue( "TEST_STATUS", "Fail")			
	}
	else{
		if(pep_status.equals("Fail")){
			testrun.setPropertyValue( "TEST_STATUS", "Fail")
		}
		else{
			testrun.setPropertyValue( "TEST_STATUS", "Pass")			
	     }		
     }      
}


TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#EXECUTION_START_TIME}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#ORDERNUMBER}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"


File filepath = new File(filexmlname)
def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)
</script></con:config></con:testStep><con:testStep type="delay" name="END" id="ccf44a89-e6ec-4cca-ac50-fe44c4d424ae"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("VER","00")</con:setupScript><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/e911 http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>E911</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>Cancel|Suspend|Resume|Abandon</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>FALSE</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>5</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>05/12/2017 05:28:39 PM</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>E911_Schofield_Insert</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>BODY</con:name><con:value>E911_Schofield_Insert</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>E911_Request</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>ServiceOrder</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>Schofield</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>1_0</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>053928039</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>234-539-1239</con:value></con:property><con:property><con:name>DDD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">05-12-2017</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>05-12-2017-0528PM</con:value></con:property><con:property><con:name>RESPONSEPHONE</con:name><con:value>2345391239</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>InsertSchofield</con:value></con:property><con:property><con:name>STATUS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">NenaSchofieldSOIIVC</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>InsertRequest</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Schofield</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>PAT_TPE</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>3</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>false</con:value></con:property><con:property><con:name>E911_DB_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property><con:property><con:name>MESSAGETYPE</con:name><con:value>InsertRequest</con:value></con:property><con:property><con:name>BODYASRC</con:name><con:value>REQ_ASRC</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>ivc_confirm_Schofield.ivc|ivc_reject_Schofield.ivc|ivc_status_Schofield.ivc|ivc_Error_Schofield.ivc</con:value></con:property><con:property><con:name>RESPONSEMECHANISM</con:name><con:value>FilePoller</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Fail</con:value></con:property><con:property><con:name>VER</con:name><con:value>00</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>5000</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>E911</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>E911</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="E911_BWC_API_NS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3643f969-5da1-4a79-ad81-02b2cbe51218"><con:description>E911 BWC test case submits the E911 BWC Request to CH</con:description><con:settings/><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="9b44df78-14e4-4986-9869-a153e56df452"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
def run=testRunner
int loop=0
def flowvalue,testcasename
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"
DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
	Node nNode = nList.item(temp);
	if (nNode.getNodeType() == Node.ELEMENT_NODE) {
	       Element eElement = (Element) nNode;            
	       testcasename=eElement.getAttribute("name")
	       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
		  testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
	       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
	       	       testRunner.testCase.setPropertyValue( "VER" , "00" )	       	       
                      testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )		            
		            def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "HEADER" , header )
		            def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "BODY" , body )
		            def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "REQUEST" , request )
		            def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
	                 def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
	                 testRunner.testCase.setPropertyValue( "ILEC" , ilec )
		            def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
		            def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "FLOW" , flow )
		            def remarks= eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )
		            def status = eElement.getElementsByTagName("STATUS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "STATUS" , status )
		            def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )
		            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )
		            def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )
		            def asrc = eElement.getElementsByTagName("ASRC").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "BODYASRC" , asrc )
		            def customerid = eElement.getElementsByTagName("CUSTOMERID").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "CUSTOMER" , customerid )
		            String testcasenumber=Integer.toString(temp)
		            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
		}
	     else{
		            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
	     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	  run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for E911 BWC")
run.gotoStepByName("END")</script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="221860a0-a8b7-4e8d-bd5a-63dd7e566665"><con:settings/><con:config><script>def run=testRunner
String validation_br
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def testcasename=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
def status=testRunner.testCase.getPropertyValue("STATUS")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
run.runTestStepByName("GET_PON_DATE")
run.runTestStepByName("TRANSFER_PON_DATE")             
if(flag.equals("TRUE")){
	if(status.equals("RemoveStatusValid") || status.equals("RemoveUriStatusValid")){
		run.runTestStepByName("GET_ORDERNUMBER_TELEPHONE")		
		run.runTestStepByName("VALUE_TRANSFER") 
	}
	run.runTestStepByName("SUBMIT_REQUEST")
	run.runTestStepByName("RESPONSE_TRANSFER") 
	run.runTestStepByName("VALIDATION_ERROR_CHECK")     
	validation_br=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")              
	log.info ("VALIDATION_FLAG VALUE:= "+validation_br)	
	if(validation_br.equals("true")){
		log.info("Test Case is getting Failed Due to Validation Error Please Check Groovy Log for More Details")
		testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
	}             	 	                      
	else{
		run.runTestStepByName("VALIDATE_E911_TABLES")
		def sea_status = context.expand( '${VALIDATE_E911_TABLES#E911_DB_VALIDATION_FLAG}' )
		log.info ("E911 STATUS:= "+sea_status)	
		testRunner.testCase.setPropertyValue( "E911_DB_VALIDATION_FLAG", sea_status)   	               	
		if(sea_status.equals("Fail")){
			log.info("Test Case is getting Failed Due to E911 Tables DB Validation Error Please Check Groovy Log for More Details")
			testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
		}
		else{
			run.runTestStepByName("OID_TRANSFER")
			run.runTestStepByName("DELAY")
			//run.runTestStepByName("VALIDATE_RESPONSE_MESSAGE_QUEUE")
		}
	}               
	run.runTestStepByName("REPORT_GENERATION_HTML")          
}                                
else{
	log.info("TestCase are Remaing for Execution")
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_PON_DATE" id="5bb4d64b-1497-40e6-b890-630fbe4ff196"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>5a4bfb4e-fad3-4ddd-affa-6f627b55bde4</con:targetTestCase><con:properties><con:property><con:name>CURR_DT</con:name><con:value>01-10-2014-0655PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value>01-10-2014</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>01/10/2014 06:55:18 PM</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>234-518-1018</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>011855018</con:value></con:property><con:property><con:name>RESPONSEPHONE</con:name><con:value>2345181018</con:value></con:property><con:property><con:name>OTCNUMBER</con:name><con:value>181018</con:value></con:property></con:properties><con:returnProperties><con:entry>DDD</con:entry><con:entry>ORDERNUMBER</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry><con:entry>PHONE</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>CURR_DT</con:entry><con:entry>RESPONSEPHONE</con:entry><con:entry>OTCNUMBER</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_PON_DATE" id="6f22e41e-e3da-42e6-aa0e-02e88757e635"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>phone</con:name><con:sourceType>PHONE</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PHONE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" transferToAll="false" entitize="false" transferChildNodes="false" ignoreEmpty="false"><con:name>ORDERNUMBER</con:name><con:sourceType>ORDERNUMBER</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>ORDERNUMBER</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>OTCNUMBER</con:name><con:sourceType>OTCNUMBER</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>OTCNUMBER</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferChildNodes="false"><con:name>RESPONSEPHONE</con:name><con:sourceType>RESPONSEPHONE</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>RESPONSEPHONE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="GET_ORDERNUMBER_TELEPHONE" id="68c98f94-bed8-4b9c-bf7a-b92c0dba8dd4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>27e07061-15c9-4c59-bd8d-5fe92afab3e2</con:targetTestCase><con:properties><con:property><con:name>ORDERNUMBER</con:name><con:value>120649006</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>234-506-1306</con:value></con:property><con:property><con:name>LOCATIONID</con:name><con:value>1305317</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property></con:properties><con:returnProperties><con:entry>ORDERNUMBER</con:entry><con:entry>PHONE</con:entry><con:entry>LOCATIONID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="VALUE_TRANSFER" id="a3928931-3339-4c98-a44f-120ad88ae478"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>phone</con:name><con:sourceType>PHONE</con:sourceType><con:sourceStep>GET_ORDERNUMBER_TELEPHONE</con:sourceStep><con:targetType>PHONE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" transferToAll="false" entitize="false" transferChildNodes="false" ignoreEmpty="false"><con:name>ORDERNUMBER</con:name><con:sourceType>ORDERNUMBER</con:sourceType><con:sourceStep>GET_ORDERNUMBER_TELEPHONE</con:sourceStep><con:targetType>ORDERNUMBER</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>locationid</con:name><con:sourceType>LOCATIONID</con:sourceType><con:sourceStep>GET_ORDERNUMBER_TELEPHONE</con:sourceStep><con:targetType>LOCATIONID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="d934fe96-8313-4de3-abef-11f3ff8dc70d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>RESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value>${#TestCase#LOCATIONID}</con:value></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry><con:entry>RESPONSESYNC</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="fed5d235-ee55-4c9e-9d08-bb5859d0de20"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>submitresponsesync</con:name><con:sourceType>RESPONSESYNC</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSESYNC</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="f88243c6-5087-44c8-941f-c7dd054ba2b4"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
def responsesync = context.expand( '${#TestCase#RECEIVERESPONSESYNC}' )
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive Async response from webservice :" + response)
log.info ("Receive Sync response from webservice :" + responsesync)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/E911bwcValidation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/E911bwcValidation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/E911bwcError.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/E911bwcError.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_E911_TABLES" id="d1a310f1-9bd1-4460-ae22-21f07cd5b60b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>5d44e3ae-afd2-4aa4-8d6b-6376867520de</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>${#TestCase#STATUS}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>OID</con:name><con:value>1356</con:value></con:property><con:property><con:name>EVENTOID1</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>EVENTOID2</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>E911_TRANS_VALIDATION_FLAG</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CH_ORDER_VALIDATION_FLAG</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>TXEVENT_DB_VALIDATION_FLAG</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>E911_DB_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property></con:properties><con:returnProperties><con:entry>OID</con:entry><con:entry>E911_DB_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="OID_TRANSFER" id="33b9a9ee-8c35-4427-b186-8093bbb151db"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>oid</con:name><con:sourceType>OID</con:sourceType><con:sourceStep>VALIDATE_E911_TABLES</con:sourceStep><con:targetType>OID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" transferChildNodes="false"><con:name>flag</con:name><con:sourceType>E911_DB_VALIDATION_FLAG</con:sourceType><con:sourceStep>VALIDATE_E911_TABLES</con:sourceStep><con:targetType>E911_DB_VALIDATION_FLAG</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="aa3d37c5-81e8-4752-ac45-7023f583fa7f"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_RESPONSE_MESSAGE_QUEUE" id="ec1e690d-5136-4787-88a5-9447252a1ea6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4a0d11eb-4413-43be-b0fa-15a5863627d3</con:targetTestCase><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>${#TestCase#RESRAWINRESQUE}</con:value></con:property><con:property><con:name>OID</con:name><con:value>${#TestCase#OID}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="REPORT_GENERATION_HTML" id="d07169fb-af89-4850-8518-2e49d7d635d4"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;
def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
def results = testRunner.results
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
def validation_flag_value=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")
def pep_status=testRunner.testCase.getPropertyValue("E911_DB_VALIDATION_FLAG")
log.info testcasenumber
String teststatus="All Status Value="
log.info( "Number of Test step execute during one Test Case flow " + results.size())
def c = 0
for(int i=results.size()-10;i&lt;results.size();i++)
{
	if(c==10){
		break;
	}
	else{
		log.info( "TestStep = [" + results[i].testStep.name + "] : Test Status of Test Step = [" +results[i].status.toString()+"]" )
          if( results[i].status.toString() == "OK" ) {      
          	teststatus=teststatus+":"+"Pass"
             }
          else{
  	           teststatus=teststatus+":"+"Fail"
           }
	}
  c=c+1
}
log.info ("All TestCaseStatus is:= " + teststatus)
if( teststatus.contains("Fail"))
{
   testrun.setPropertyValue( "TEST_STATUS", "Fail")
}
else
{
	if(validation_flag_value.equals("true")){
		testrun.setPropertyValue( "TEST_STATUS", "Fail")			
	}
	else{
		if(pep_status.equals("Fail")){
			testrun.setPropertyValue( "TEST_STATUS", "Fail")
		}
		else{
			    testrun.setPropertyValue( "TEST_STATUS", "Pass")			
	    }		
   }      
}


TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#EXECUTION_START_TIME}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#ORDERNUMBER}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"


File filepath = new File(filexmlname)
def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)
</script></con:config></con:testStep><con:testStep type="delay" name="END" id="88af666e-5e6a-4de3-b0e9-7b7dd7f3b917"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:setupScript/><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/e911 bwc http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>E911_BWC</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>NOFLOW</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>FALSE</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>2</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>01/10/2014 06:55:18 PM</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>E911_BWC_ADD_LOCATION_SUCCESS_REQ</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>BODY</con:name><con:value>E911_BWC_ADD_LOCATION_SUCCESS_BODY</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>E911_Request</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>addLocation</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>BWC</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>1_0</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>011855018</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>234-518-1018</con:value></con:property><con:property><con:name>LOCATIONID</con:name><con:value>1305317</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">01-10-2014-0655PM</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>12-09-2013-0207PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">01-10-2014</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>AddLocationValid</con:value></con:property><con:property><con:name>STATUS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">AddStatusValid</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>NOSVCTYP</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E911BWC</con:value></con:property><con:property><con:name>BODYASRC</con:name><con:value>REQ_ASRC</con:value></con:property><con:property><con:name>OTCNUMBER</con:name><con:value>181018</con:value></con:property><con:property><con:name>RESPONSEPHONE</con:name><con:value>2345181018</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>PAT_TPE</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>OID</con:name><con:value>1289</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>RECEIVERESPONSESYNC</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>false</con:value></con:property><con:property><con:name>E911_DB_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Fail</con:value></con:property><con:property><con:name>VER</con:name><con:value>00</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>600</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>E911_BWC</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>E911_BWC</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="ASR_ORDER_API_NS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7ce81cd9-187d-4c4b-88bb-5282c2247ecc"><con:description>Asr Order test case submits the Asr Send Order Request to CH</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="4fc1396f-fe07-42d6-9e37-3161b1325023"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException

def run=testRunner
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"

DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
                Node nNode = nList.item(temp);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                       Element eElement = (Element) nNode;            
                       testcasename=eElement.getAttribute("	")                       
                       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
                    
                       
                       
                       testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
                       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
                                            testRunner.testCase.setPropertyValue( "VER" , "00" )                                   
                                            testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )                                         
                                            def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADER" , header )
                                            def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "BODY" , body )
                                            def asrc = eElement.getElementsByTagName("ASRC").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "BODYASRC" , asrc )
                                            def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REQUEST" , request )
		            					def responsemech = eElement.getElementsByTagName("RESPONSEMECHANISM").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "RESPONSEMECHANISM" , responsemech )		           
                                            def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
          	                             def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
		                                  testRunner.testCase.setPropertyValue( "ILEC" , ilec )
		                                  if(ilec.equals("ELI") || ilec.equals("Caviller")){
		                                  		def resheader = eElement.getElementsByTagName("RESPONSEHEADER").item(0).getTextContent()
                                            		testRunner.testCase.setPropertyValue( "RESPONSEHEADER" , resheader )	
		                                  }		                                 
		                                  def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
                                            def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "FLOW" , flow )
                                            def remarks= eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )
                                            def suppremarks = eElement.getElementsByTagName("SUPP_REMARKS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUPP_REMARKS_FLOW" , suppremarks )
                                            def status = eElement.getElementsByTagName("STATUS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "STATUS" , status )
                                            def suppstatus = eElement.getElementsByTagName("SUPP_STATUS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUPP_STATUS_FLOW" , suppstatus )
                                            def responsefile = eElement.getElementsByTagName("RESPONSEFILE").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "RESPONSEFILE" , responsefile )
		                                  def suppresponsefile = eElement.getElementsByTagName("SUPPRESPONSEFILE").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "SUPPRESPONSEFILE" , suppresponsefile )
                                            def ccna = eElement.getElementsByTagName("CCNA").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CCNA" , ccna )
                                            def icsc = eElement.getElementsByTagName("ICSC").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "ICSC" , icsc )
		                                  def customer = eElement.getElementsByTagName("CUSTOMER").item(0).getTextContent()		                                  
                                            testRunner.testCase.setPropertyValue( "CUSTOMER" ,  customer )
                                            def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )
                                            def asog_ver = eElement.getElementsByTagName("ASOG_VER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "ASOG_VER" , asog_ver )
                                            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )
                                            def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()                       
                                            testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )                                            
		                                  String testcasenumber=Integer.toString(temp)
                                            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
                                }
                     else{
                                            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
                     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	 run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for AsrSendOrder")
run.gotoStepByName("END")		                     </script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="d20c95f8-2c36-472a-8221-4cfd48d42a8a"><con:settings/><con:config><script>int loop=0
def run=testRunner
String validation_br
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def testcasename=testRunner.testCase.getPropertyValue("TC_NAME")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
run.runTestStepByName("GET_PON_DATE")
run.runTestStepByName("VALIDATE_REQUEST")
</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_PON_DATE" id="6172715c-ca7a-44cb-8578-41af732effa7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2c83ccd6-1fcf-46c0-9531-68eb0f4dab07</con:targetTestCase><con:properties><con:property><con:name>CURR_DT</con:name><con:value>06-22-2017-0413PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value>06-22-2017</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>06-22-2017-0413PM</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>06/22/2017 04:13:13 PM</con:value></con:property><con:property><con:name>PON</con:name><con:value>06222017041313PM</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property></con:properties><con:returnProperties><con:entry>CURR_DT</con:entry><con:entry>DDD</con:entry><con:entry>DUE_DT</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>PON</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_PON_DATE" id="b3975723-48a1-4a68-b49e-34b3cb080826"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>PON</con:name><con:sourceType>PON</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PON</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>DUE_DT</con:name><con:sourceType>DUE_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DUE_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="2e913d5b-173b-4d67-b570-e81682217d87"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property><con:property><con:name>LOCATIONID</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("VER","00")</con:setupScript><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/asr order http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>ASOG_VER</con:name><con:value>54</con:value></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name><con:value/></con:property><con:property><con:name>BODY</con:name><con:value>CABLEVISION_LIGHTPATH_Trunking_MeetPoint_REQ_BODY</con:value></con:property><con:property><con:name>BODYASRC</con:name><con:value>REQ_ASRC</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>ATB</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>ASRFAX_ASR</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>06-22-2017-0413PM</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>ATTI_E2E</con:value></con:property><con:property><con:name>DDD</con:name><con:value>06-22-2017</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>06-22-2017-0413PM</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>06/22/2017 04:13:13 PM</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>7</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>SUPP4|SUPP1|SUPP2|SUPP3|Cancel|Resume|Suspend|Abandon</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>ASOG</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>NU01</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>CABLEVISION LIGHTPATH</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property><con:property><con:name>PON</con:name><con:value>06222017041313PM</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soapenv:Body>
      <soapenv:Fault>
         <faultcode xmlns:SOAP-ENV="http://xml.apache.org/axis/">SOAP-ENV:Server.ProcessingException</faultcode>
         <faultstring>SOAP-ENV:Server.ProcessingException:java.rmi.RemoteException: WSRequest-handler processSync() call failed; nested exception is: 
	com.nightfire.framework.message.MessageException: Response Summary:
SUPPLIER: [CABLEVISION LIGHTPATH]
PON: [06222017012723PM]
ICSC: [NU01]
CCNA: [ATB]
TYPE: [PRIMARY_MULTI_EC]
STATUS: [FAILED]
REASON: [Invalid Primary MEC request:  Must have same values for ICSC and ASCICSC codes.]</faultstring>
         <detail>
            <ns1:hostname xmlns:ns1="http://xml.apache.org/axis/">stomvqavchapi3.va.neustar.com</ns1:hostname>
         </detail>
      </soapenv:Fault>
   </soapenv:Body>
</soapenv:Envelope>]]></con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>NEW_REQUEST_REMARKS_A_G</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>asr_order</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>CABLEVISION_LIGHTPATH_ACK:CABLEVISION_LIGHTPATH_DLR:CABLEVISION_LIGHTPATH_NACK:CABLEVISION_LIGHTPATH_CLARIFICATION_B:CABLEVISION_LIGHTPATH_CLARIFICATION_C:CABLEVISION_LIGHTPATH_CLARIFICATION_D:CABLEVISION_LIGHTPATH_CLARIFICATION_E:CABLEVISION_LIGHTPATH_CLARIFICATION_F</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>RES_HEADER</con:value></con:property><con:property><con:name>RESPONSEMECHANISM</con:name><con:value>API</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>44</con:value></con:property><con:property><con:name>STATUS</con:name><con:value>CLARIFICATION-ERROR</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>Trunking</con:value></con:property><con:property><con:name>SUPPRESPONSEFILE</con:name><con:value>CABLEVISION_LIGHTPATH_ACK:CABLEVISION_LIGHTPATH_DLR:CABLEVISION_LIGHTPATH_NACK:CABLEVISION_LIGHTPATH_CLARIFICATION_B:CABLEVISION_LIGHTPATH_CLARIFICATION_C:CABLEVISION_LIGHTPATH_CLARIFICATION_D:CABLEVISION_LIGHTPATH_CLARIFICATION_E:CABLEVISION_LIGHTPATH_CLARIFICATION_F:CABLEVISION_LIGHTPATH_CONFIRMATION|CABLEVISION_LIGHTPATH_DLR:CABLEVISION_LIGHTPATH_NACK:CABLEVISION_LIGHTPATH_CLARIFICATION_B:CABLEVISION_LIGHTPATH_CLARIFICATION_C:CABLEVISION_LIGHTPATH_CLARIFICATION_D:CABLEVISION_LIGHTPATH_CLARIFICATION_E:CABLEVISION_LIGHTPATH_CLARIFICATION_F:CABLEVISION_LIGHTPATH_CONFIRMATION|CABLEVISION_LIGHTPATH_ACK:CABLEVISION_LIGHTPATH_DLR:CABLEVISION_LIGHTPATH_NACK:CABLEVISION_LIGHTPATH_CLARIFICATION_B:CABLEVISION_LIGHTPATH_CLARIFICATION_C:CABLEVISION_LIGHTPATH_CLARIFICATION_D:CABLEVISION_LIGHTPATH_CLARIFICATION_E:CABLEVISION_LIGHTPATH_CLARIFICATION_F:CABLEVISION_LIGHTPATH_CONFIRMATION|CABLEVISION_LIGHTPATH_ACK:CABLEVISION_LIGHTPATH_DLR:CABLEVISION_LIGHTPATH_NACK:CABLEVISION_LIGHTPATH_CLARIFICATION_B:CABLEVISION_LIGHTPATH_CLARIFICATION_C:CABLEVISION_LIGHTPATH_CLARIFICATION_D:CABLEVISION_LIGHTPATH_CLARIFICATION_E:CABLEVISION_LIGHTPATH_CLARIFICATION_F:CABLEVISION_LIGHTPATH_CLARIFICATION_A:CABLEVISION_LIGHTPATH_CLARIFICATION_K:CABLEVISION_LIGHTPATH_CONFIRMATION</con:value></con:property><con:property><con:name>SUPPRESPONSEFILE_SINGLE</con:name><con:value>CABLEVISION_LIGHTPATH_ACK:CABLEVISION_LIGHTPATH_DLR:CABLEVISION_LIGHTPATH_NACK:CABLEVISION_LIGHTPATH_CLARIFICATION_B:CABLEVISION_LIGHTPATH_CLARIFICATION_C:CABLEVISION_LIGHTPATH_CLARIFICATION_D:CABLEVISION_LIGHTPATH_CLARIFICATION_E:CABLEVISION_LIGHTPATH_CLARIFICATION_F:CABLEVISION_LIGHTPATH_CLARIFICATION_A:CABLEVISION_LIGHTPATH_CLARIFICATION_K:CABLEVISION_LIGHTPATH_CONFIRMATION</con:value></con:property><con:property><con:name>SUPP_REMARKS_FLOW</con:name><con:value>SUPP4_REMARKS|SUPP1_REMARKS|SUPP2_REMARKS|SUPP3_REMARKS</con:value></con:property><con:property><con:name>SUPP_REMARKS_SINGLE</con:name><con:value>SUPP3_REMARKS</con:value></con:property><con:property><con:name>SUPP_STATUS_FLOW</con:name><con:value>CONFIRMATION|CONFIRMATION|CONFIRMATION|COMPLETE</con:value></con:property><con:property><con:name>SUPP_STATUS_SINGLE</con:name><con:value>COMPLETE</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>Ring</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>ASRSend_TRUNKING_NACK_Meetpoint_NonBondedBonded_API</con:value></con:property><con:property><con:name>TC_TYPE</con:name><con:value>AsrOrder</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>0</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>AsrSendOrder</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>ASR_SEND_ORDER</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Fail</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>100</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>true</con:value></con:property><con:property><con:name>VER</con:name><con:value>00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>51a9d764-3691-4bd8-b7bb-50cebef7bc52</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>998ce924-a3cd-4641-8ad2-427e2e3fdbf2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="ASR_PREORDER_API_NS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ff910648-8a9c-4f22-9f65-68c8736abb0f"><con:description>Asr PreOrder test case submits the Asr Send PreOrder Request to CH</con:description><con:settings/><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="3235b476-96f8-4f13-b559-abe9e5e873f9"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException

def run=testRunner
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"

DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
                Node nNode = nList.item(temp);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                       Element eElement = (Element) nNode;            
                       testcasename=eElement.getAttribute("name")                       
                       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
                       testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
                       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
                                            testRunner.testCase.setPropertyValue( "VER" , "00" )                                   
                                            testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )                                         
                                            def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADER" , header )
                                            def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "BODY" , body )
                                            def asrc = eElement.getElementsByTagName("ASRC").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "BODYASRC" , asrc )
                                            def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REQUEST" , request )
		            					def responsemech = eElement.getElementsByTagName("RESPONSEMECHANISM").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "RESPONSEMECHANISM" , responsemech )		           
                                            def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
          	                             def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
		                                  testRunner.testCase.setPropertyValue( "ILEC" , ilec )
		                                  def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
                                            def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "FLOW" , flow )
                                            def remarks= eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )                                          
                                            def responsefile = eElement.getElementsByTagName("RESPONSEFILE").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "RESPONSEFILE" , responsefile )		                                  
                                            def ccna = eElement.getElementsByTagName("CCNA").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CCNA" , ccna )
                                            def icsc = eElement.getElementsByTagName("ICSC").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "ICSC" , icsc )
		                                  def customer = eElement.getElementsByTagName("CUSTOMER").item(0).getTextContent()		                                  
                                            testRunner.testCase.setPropertyValue( "CUSTOMER" ,  customer )
                                            def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )                                            
                                            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )
                                            def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()                       
                                            testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )                                            
		                                  String testcasenumber=Integer.toString(temp)
                                            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
                                }
                     else{
                                            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
                     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	 run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for AsrSendOrder")
run.gotoStepByName("END")		                     </script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="73fdd75d-e133-4bf1-9004-6fe2727c071d"><con:settings/><con:config><script>int loop=0
def run=testRunner
String validation_br
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def testcasename=testRunner.testCase.getPropertyValue("TC_NAME")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
run.runTestStepByName("GET_PON_DATE")
run.runTestStepByName("TRANSFER_PON_DATE")             
if(flag.equals("TRUE")){
	run.runTestStepByName("VALIDATE_REQUEST")
	run.runTestStepByName("SAVE_REQUEST")
	run.runTestStepByName("SUBMIT_RESPONSE")
	run.runTestStepByName("SUBMIT_REQUEST")	
	run.runTestStepByName("RESPONSE_TRANSFER") 
	run.runTestStepByName("VALIDATION_ERROR_CHECK")     
	validation_br=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")              
	if(validation_br.equals("true")){
		log.info("Test Case is getting Failed Due to Validation Error Please Check Groovy Log for More Details")
		testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
	}             	 	                      
	else{				
		run.runTestStepByName("VALIDATE_SEND_ASR_PREORDER_MESSAGE")			
		def asr_status = context.expand( '${VALIDATE_SEND_ASR_PREORDER_MESSAGE#ASR_QA_VALIDATION_FLAG}' )
		log.info ("ASR STATUS:= "+asr_status)			
		testRunner.testCase.setPropertyValue( "ASR_QA_VALIDATION_FLAG", asr_status)   	               		
		if(asr_status.equals("Fail")){
			log.info("Test Case is getting Failed Due to SEND_ASR_PREORDER_MESSAGE  DB Validation Error Please Check Groovy Log for More Details")
			testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
		}
		else{
			log.info 'NO STEP'	
		}                                          
		run.runTestStepByName("REPORT_GENERATION_HTML")          
	}
}
else{
	log.info("TestCase are Remaing for Execution")
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_PON_DATE" id="65bb5cd4-e3db-4c68-9438-a7ae4197856d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2c83ccd6-1fcf-46c0-9531-68eb0f4dab07</con:targetTestCase><con:properties><con:property><con:name>CURR_DT</con:name><con:value>06-22-2017-0419PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value>06-22-2017</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>06-22-2017-0419PM</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>06/22/2017 04:19:00 PM</con:value></con:property><con:property><con:name>PON</con:name><con:value>06222017041900PM</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property></con:properties><con:returnProperties><con:entry>CURR_DT</con:entry><con:entry>DDD</con:entry><con:entry>DUE_DT</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>PON</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_PON_DATE" id="eacc0b31-c6a2-4b0e-840b-b6e722a8d5b0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>PON</con:name><con:sourceType>PON</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PON</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>DUE_DT</con:name><con:sourceType>DUE_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DUE_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="d98d8c25-5b2b-4c65-bd47-829cf7494520"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property><con:property><con:name>LOCATIONID</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="0918f2ff-b917-401e-b836-0df931f90bc0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property><con:property><con:name>LOCATIONID</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="0f7120b1-25c2-45c1-a646-119a4e35f9f6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property><con:property><con:name>LOCATIONID</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_RESPONSE" id="b9122038-aeb8-4621-9304-77f57d57f227"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c03f4e9d-d4cb-456e-978d-92dcc807b254</con:targetTestCase><con:properties><con:property><con:name>SINGLERESPONSEFILE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>MECHANISM</con:name><con:value>${#TestCase#RESPONSEMECHANISM}</con:value></con:property><con:property><con:name>ASOG_VER</con:name><con:value/></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>SUBREQUESTRESPONSE</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="e28597ec-d719-4c19-9c66-746a0efa6a32"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="9c78794f-d2bc-4d04-aab6-779bfeb02d90"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_SEND_ASR_PREORDER_MESSAGE" id="071ba1cb-4496-43be-9a1b-9993dcb6cb5a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c93c21cf-7479-4db4-8379-244c9fc7e1a6</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property></con:properties><con:returnProperties><con:entry>ASR_QA_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="REPORT_GENERATION_HTML" id="08c0cdd5-5582-459e-8e95-e1298a29c7ee"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;


def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
def results = testRunner.results
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
def validation_flag_value=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")
def asr_status=testRunner.testCase.getPropertyValue("ASR_QA_VALIDATION_FLAG")
String teststatus="All Status Value="
log.info( "Number of Test step execute during one Test Case flow " + results.size())
def c = 0
for(int i=results.size()-10;i&lt;results.size();i++)
{
	if(c==10){
		break;
	}
	else{
		log.info( "TestStep = [" + results[i].testStep.name + "] : Test Status of Test Step = [" +results[i].status.toString()+"]" )
          if( results[i].status.toString() == "OK" ) {      
          	teststatus=teststatus+":"+"Pass"
             }
          else{
  	           teststatus=teststatus+":"+"Fail"
           }
	}
  c=c+1
}
log.info ("All TestCaseStatus is:= " + teststatus)
if( teststatus.contains("Fail"))
{
   testrun.setPropertyValue( "TEST_STATUS", "Fail")
}
else
{
	if(validation_flag_value.equals("true")){
		testrun.setPropertyValue( "TEST_STATUS", "Fail")			
	}
	else{
		
		
		    if(asr_status.equals("Fail")){
			     testrun.setPropertyValue( "TEST_STATUS", "Fail")
		    }
		    else{
			    testrun.setPropertyValue( "TEST_STATUS", "Pass")			
		    }		
   }      
}


TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#EXECUTION_START_TIME}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#PON}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"

File filepath = new File(filexmlname)


def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)
</script></con:config></con:testStep><con:testStep type="delay" name="END" id="915e0177-f1b6-48f4-ad7e-f9f55694737f"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="SOAP Request" id="52d23b41-e227-4ceb-9dd5-ec535613d082" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="SOAP Request" id="74552211-b64b-4dcd-a292-1936122ce53e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://stomvqavasrpogw1.va.neustar.com:8001/axis/services/asrsendpoGWS</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soapenv:Body>
      <ns1:processSync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
         <processSyncReturn xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"><![CDATA[<?xml version="1.0" encoding="UTF-8"?><asr_preorder>
<RequestHeader>
<RequestType value="SvcAvailInquiry"/>
<DTSENT value="11-08-2016-0215PM"/>
<CC value="32"/>
<STATE value="MP"/>
<CCNA value="ALT"/>
<MESSAGE_ID value="11082016021555PM"/>
<ICSC value="SW10"/>
</RequestHeader>
<RequestBody>
<SvcAvailInquiry>
<NCI value="12LLP"/>
<NC value="3698"/>
<LOC1 value="AKSHCA12589"/>
</SvcAvailInquiry>
</RequestBody>
</asr_preorder>]]]]>><![CDATA[</processSyncReturn>
      </ns1:processSync>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8cc2df42-d8c3-467b-bca9-e6d56f0e11aa"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SOAP Request11" id="b3a01dc0-b851-49da-8dda-753f7f97aa4e" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="SOAP Request11" id="04dd9560-4735-492e-b1f5-92974732561a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://stomvqachapi.va.neustar.com/axis/services/SOAPRequestHandler</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processSync soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <in0 xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance"><![CDATA[<?xml version="1.0" encoding="UTF-8"?><header><Request value="asr_order"/><Subrequest value="Transport"/><CustomerIdentifier value="HT_ABHI"/><InterfaceVersion value="ASOG"/><Supplier value="HAWAIITEL"/><UserIdentifier value="example"/><UserPassword value="example"/><ApplyBusinessRules value="N"/><Action value="validate"/></header>]]]]>><![CDATA[</in0>
         <in1 xs:type="type:string" xmlns:xs="http://www.w3.org/2000/XMLSchema-instance"><![CDATA[<?xml version="1.0" encoding="UTF-8"?><asr_order>
	<ASR_Form>
		<asr_adminsection>
			<DTSENT value="10-26-2016-1156PM"/>
			<ICSC value="HW10"/>
			<BAN value="E"/>
			<REQTYP value="EA"/>
			<QTY value="1"/>
			<PIU value="0"/>
			<DDD value="10-26-2016"/>
			<RTR value="F"/>
			<ACT value="R"/>
			<ECCKT value="SDFSDFGDSFGSDF"/>
			<CCNA value="HTA"/>
			<PON value="10262016115635PM"/>
			<VER value="00"/>
			<REMARKS value="(Cust Add: AA-WAIKIKI BEACH MARIOTT RESORT)"/>
		</asr_adminsection>
		<asr_billsection>
			<BILLNM value="Vibha"/>
			<ACNA value="RCV"/>
		</asr_billsection>
		<asr_contactsection>
			<INIT_TELNO value="123-456-7890"/>
			<INIT_EMAIL value="Vib@Gmail.com"/>
			<DSG_TELNO value="123-456-7890"/>
			<DSGCON value="Vibha"/>
			<INIT value="Vibha"/>
			<DTREC value="04-11-2013-0413PM"/>
		</asr_contactsection>
	</ASR_Form>
	<EUSA_Form>
		<eusa_circuitdetailsection>
			<NCI value="04DS9..AX"/>
			<NC value="AS--"/>
		</eusa_circuitdetailsection>
	</EUSA_Form>
	<SEQNO value="3724"/>
</asr_order>]]]]>><![CDATA[</in1>
      </ns:processSync>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="427be39b-1514-4744-8a39-837064abd5ed"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("VER","00")</con:setupScript><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/asr preorder http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>AsrPreOrder</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>NOFLOW</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>FALSE</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>25</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>11/09/2016 04:54:18 PM</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>QWEST_CFAInquiry_REQ</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>BODY</con:name><con:value>QWEST_CFAInquiry_REQ_BODY</con:value></con:property><con:property><con:name>BODYASRC</con:name><con:value>REQ_ASRC</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>asr_preorder</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>asr_preorder</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>QWEST</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>ASOG</con:value></con:property><con:property><con:name>PON</con:name><con:value>11092016045418PM</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">11-09-2016-0454PM</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>11-09-2016-0454PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">11-09-2016</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>CFAInquiry</con:value></con:property><con:property><con:name>STATUS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CFA</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>CFAresponse.xml</con:value></con:property><con:property><con:name>RESPONSEMECHANISM</con:name><con:value>FILE_POLLER</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>BYG</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>MS01</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>asr_preorder</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">NOUSE</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">NOUSE</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>ASR_GW</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>false</con:value></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name><con:value>Pass</con:value></con:property><con:property><con:name>VER</con:name><con:value>00</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Pass</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>100</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>AsrSendPreorder</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>ASR_SEND_PREORDER</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>51a9d764-3691-4bd8-b7bb-50cebef7bc52</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>998ce924-a3cd-4641-8ad2-427e2e3fdbf2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="ASR_RECEIVE_ORDER_API_NS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="508f4902-ae92-4341-98de-5f13448f76fa"><con:description>Asr Receive Order  test case submits the Asr Receive Order Request to CH</con:description><con:settings/><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="7f091feb-3988-4aaa-9f02-4db4566ae06c"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException

def run=testRunner
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"

DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
                Node nNode = nList.item(temp);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                       Element eElement = (Element) nNode;            
                       testcasename=eElement.getAttribute("name")                       
                       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
                       testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
                       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
                                            testRunner.testCase.setPropertyValue( "VER" , "00" )                                   
                                            testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )                                         
                                            def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADER" , header )
                                            def responseHeader = eElement.getElementsByTagName("RESPONSEHEADER").item(0).getTextContent()
		                                  testRunner.testCase.setPropertyValue( "RESPONSEHEADER" , responseHeader )
                                            def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "BODY" , body )
                                            def asrc = eElement.getElementsByTagName("ASRC").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "BODYASRC" , asrc )
                                            def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REQUEST" , request )
                                            def response = eElement.getElementsByTagName("RESPONSE").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "RESPONSE" , response )
                                            def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
          	                             def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
		                                  testRunner.testCase.setPropertyValue( "ILEC" , ilec )
		                                  def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
                                            def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "FLOW" , flow )
                                            def remarks= eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )
                                            def suppremarks = eElement.getElementsByTagName("SUPP_REMARKS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUPP_REMARKS_FLOW" , suppremarks )
                                            def ccna = eElement.getElementsByTagName("CCNA").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CCNA" , ccna )
                                            def icsc = eElement.getElementsByTagName("ICSC").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "ICSC" , icsc )
                                            def responsefile = eElement.getElementsByTagName("RESPONSEFILE").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "RESPONSEFILE" , responsefile )
		                                  def suppresponsefile = eElement.getElementsByTagName("SUPPRESPONSEFILE").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "SUPPRESPONSEFILE" , suppresponsefile )
		                                  def customer = eElement.getElementsByTagName("CUSTOMER").item(0).getTextContent()		                                  
		                                  String delimeter="[|]"
                                            String[] customer1 = customer.split(delimeter)
                                            testRunner.testCase.setPropertyValue( "CUSTOMER" ,  customer1[0] )
                                            testRunner.testCase.setPropertyValue( "CUSTOMERRESPONSEDOMAIN" ,  customer1[1] ) 
                                            def responsemech = eElement.getElementsByTagName("RESPONSEMECHANISM").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "RESPONSEMECHANISM" , responsemech )
                                             def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )
                                            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )
                                            def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()                       
                                            testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )                                            
		                                  String testcasenumber=Integer.toString(temp)
                                            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
                                }
                     else{
                                            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
                     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	 run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for AsrReceiveOrder")
run.gotoStepByName("END")		                     
</script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="4518e115-20af-41cb-b19c-e290e93187d0"><con:settings/><con:config><script>def run=testRunner
def flowvalue
int loop=0
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def testcasename=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
run.runTestStepByName("GET_PON_DATE")
run.runTestStepByName("TRANSFER_PON_DATE")             
if(flag.equals("TRUE")){
	run.runTestStepByName("VALIDATE_REQUEST")
	run.runTestStepByName("SAVE_REQUEST")
	run.runTestStepByName("SUBMIT_REQUEST")
	run.runTestStepByName("RESPONSE_TRANSFER") 
	run.runTestStepByName("VALIDATION_ERROR_CHECK")     
	def validation_br=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG") 
	log.info ("REQUEST VALIDATION STATUS:= "+validation_br)             
	if(validation_br.equals("true")){
		log.info("Test Case is getting Failed Due to Validation Error Please Check Groovy Log for More Details")
		testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
	}             	 	                      
	else{
		run.runTestStepByName("GET_TXID")
		run.runTestStepByName("TRANSFER_TXID")
		run.runTestStepByName("SUBMIT_RESPONSE")
          run.runTestStepByName("VALIDATE_ASR_AND_RECEIVE_MESSAGE")			
	     def asr_status = context.expand( '${VALIDATE_ASR_AND_RECEIVE_MESSAGE#ASR_QA_VALIDATION_FLAG}' )
				log.info ("ASR STATUS:= "+asr_status)			
				testRunner.testCase.setPropertyValue( "ASR_QA_VALIDATION_FLAG", asr_status)   	               		
				if(asr_status.equals("Fail")){
					log.info("Test Case is getting Failed Due to SEND_ASR_MESSAGE AND RECEIVE_ASR_MESSAGE DB Validation Error Please Check Groovy Log for More Details")
					testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
				}
				else{
					flowvalue=testRunner.testCase.getPropertyValue("FLOW")
             			supremarkflow=testRunner.testCase.getPropertyValue("SUPP_REMARKS_FLOW")             			
             			suppresponsefile=testRunner.testCase.getPropertyValue("SUPPRESPONSEFILE")
            			if(flowvalue.equals("NOFLOW") || flowvalue.equals("")){
            					log.info("NOFLOW for further Execution Found")
            			}
            			else{
            				String delimeter="[|]"
                 			String[] flowExe = flowvalue.split(delimeter)
                 			String[] remarksflowExe = supremarkflow.split(delimeter)                 			
                 			String[] responseflowExe = suppresponsefile.split(delimeter)
                 			loop=0
                 			for(int j=0;j&lt;flowExe.size();j++){                 	                 	
                 				if(flowExe[j].contains("SUPP")){                  		                 		
                 					for(int k=loop;k&lt;remarksflowExe.size();k++){									           
                 						testRunner.testCase.setPropertyValue( "SUPP_REMARKS_SINGLE" , remarksflowExe[k] )                 		      			
                 		      			testRunner.testCase.setPropertyValue( "SUPPRESPONSEFILE_SINGLE" , responseflowExe[k] )
			                			loop=loop+1
			                			log.info ("SELECTED SUPP REMARKS:="+remarksflowExe[k])			                			
			                			log.info ("SELECTED SUPP RESPONSE FILE STATUS:="+responseflowExe[k])
			                			break
		                			}                        
		               			log.info ("SELECTED SUPP FLOW:="+flowExe[j])		                                		                 		               
                 					String fisrtvalue=Integer.toString(j)
                 					testRunner.testCase.setPropertyValue( "FIRSTFLOW" , fisrtvalue )
                 					run.runTestStepByName("SUBMIT_SUP_REQUEST")
                 					run.runTestStepByName("VER_TRANSFORMATION")
                 					addvalue=testRunner.testCase.getPropertyValue("TC_NAME")
                 					addvalue=addvalue+"_"+flowExe[j]
	                 				testRunner.testCase.setPropertyValue("TC_NAME", addvalue)
     	          			}	
          	       			else{
               	  				log.info ("SELECTED SUPP FLOW:="+flowExe[j])		                                		                 		               
                 					String fisrtvalue=Integer.toString(j)
                 					testRunner.testCase.setPropertyValue( "FIRSTFLOW" , fisrtvalue )
                 					run.runTestStepByName("SUBMIT_ASRC_REQUEST")
                 					addvalue=testRunner.testCase.getPropertyValue("TC_NAME")
                 					addvalue=addvalue+"_"+flowExe[j]
                 					testRunner.testCase.setPropertyValue("TC_NAME", addvalue)
                 				}
                 			}                            	
            			}
           			log.info testRunner.testCase.getPropertyValue("TC_NAME")
					run.runTestStepByName("DELAY")
					run.runTestStepByName("VALIDATE_RESPONSE_MESSAGE_QUEUE")
				}				
	}                                               
	run.runTestStepByName("REPORT_GENERATION_HTML")          
}
else{
	log.info("TestCase are Remaing for Execution")
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_PON_DATE" id="6f58a8b3-cddb-4495-afdb-e2a10fcd5e33"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2c83ccd6-1fcf-46c0-9531-68eb0f4dab07</con:targetTestCase><con:properties><con:property><con:name>CURR_DT</con:name><con:value>02-28-2017-0655PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value>02-28-2017</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>02-28-2017-0655PM</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>02/28/2017 06:55:32 PM</con:value></con:property><con:property><con:name>PON</con:name><con:value>02282017065532PM</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>CUSTOMER</con:name></con:property></con:properties><con:returnProperties><con:entry>CURR_DT</con:entry><con:entry>DDD</con:entry><con:entry>DUE_DT</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>PON</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_PON_DATE" id="4bdce332-efb9-4749-a74d-f41fab3e16fa"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>PON</con:name><con:sourceType>PON</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PON</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>DUE_DT</con:name><con:sourceType>DUE_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DUE_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="312955f2-8792-4be7-a291-f9b3e7fd647a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="3000d5b2-fe57-4cf6-a7cb-c1f411746bd5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="2c98c2ef-a85a-4757-bf7f-fe5b52cd876d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="4bb38024-70c6-46e0-aafb-c0e6fa1b7758"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="80aee21e-86c9-4f67-a1f7-333c1f3b456c"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_TXID" id="46367f79-a1d1-4384-a2da-3c48fa257f11"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>39b09e8a-ec71-4464-9a04-9be0db3e7efb</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>1564</con:value></con:property></con:properties><con:returnProperties><con:entry>TXID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_TXID" id="ccc149b2-f264-4984-a90d-b48fc85a551b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>TXID</con:name><con:sourceType>TXID</con:sourceType><con:sourceStep>GET_TXID</con:sourceStep><con:targetType>TXID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_RESPONSE" id="fc279dcf-0f5c-412f-82ea-c6d9d5639332"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c03f4e9d-d4cb-456e-978d-92dcc807b254</con:targetTestCase><con:properties><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property><con:property><con:name>SINGLERESPONSEFILE</con:name></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>MECHANISM</con:name><con:value>${#TestCase#RESPONSEMECHANISM}</con:value></con:property><con:property><con:name>ASOG_VER</con:name><con:value>${#TestCase#ASOG_VER}</con:value></con:property><con:property><con:name>SUBREQUESTRESPONSE</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_ASR_AND_RECEIVE_MESSAGE" id="d5800f11-d700-4003-b68e-a71d00473213"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>9afcbacd-ff32-4d56-b2bb-f995268a66bb</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ACTION</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property></con:properties><con:returnProperties><con:entry>ASR_QA_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_SUP_REQUEST" id="c7cc0de0-e94e-41f1-8fa8-82509da93ea8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>6347556d-36ac-44e3-a7a0-ffa0cac68085</con:targetTestCase><con:properties><con:property><con:name>TXID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>SUPP_STATUS</con:name><con:value>${#TestCase#SUPP_STATUS_SINGLE}</con:value></con:property><con:property><con:name>SUPP_REMARKS</con:name><con:value>${#TestCase#SUPP_REMARKS_SINGLE}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>${#TestCase#FLOW}</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>${#TestCase#FIRSTFLOW}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#SUPPRESPONSEFILE_SINGLE}</con:value></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>VERNEW</con:name><con:value>04</con:value></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG_SUPP</con:name><con:value/></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG_SUPP</con:name><con:value/></con:property><con:property><con:name>MECHANISM</con:name><con:value>${#TestCase#RESPONSEMECHANISM}</con:value></con:property></con:properties><con:returnProperties><con:entry>VERNEW</con:entry><con:entry>VALIDATION_ERROR_CHECK_FLAG_SUPP</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="VER_TRANSFORMATION" id="b40da712-0ed8-41fb-aef2-24a6e25210dd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>verfromsup</con:name><con:sourceType>VERNEW</con:sourceType><con:sourceStep>SUBMIT_SUP_REQUEST</con:sourceStep><con:targetType>VER</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_ASRC_REQUEST" id="30f56209-f11d-4313-9ca5-1db991b0060c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>47f3c2f5-3327-40e5-862a-ad0f99c932a9</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODYASRC}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>${#TestCase#TIMEOUT}</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>${#TestCase#FIRSTFLOW}</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>${#TestCase#FLOW}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value>${#TestCase#CUSTOMERRESPONSEDOMAIN}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>ACTION_TYPE</con:name></con:property><con:property><con:name>SVCTYP</con:name><con:value>${#TestCase#SVCTYP}</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>PHONE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="DELAY" id="f74c94ec-4e73-4d85-905b-8dd212032727"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_RESPONSE_MESSAGE_QUEUE" id="a0a08c73-c887-4e20-8df6-7948e1658bc5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4a0d11eb-4413-43be-b0fa-15a5863627d3</con:targetTestCase><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>${#TestCase#RESRAWINRESQUE}</con:value></con:property><con:property><con:name>OID</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="REPORT_GENERATION_HTML" id="4cbe4bcb-7ea9-4963-9fb8-876a80ad4574"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;

def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
def results = testRunner.results
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
def validation_flag_value=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")
def asr_status=testRunner.testCase.getPropertyValue("ASR_QA_VALIDATION_FLAG")
String teststatus="All Status Value="
log.info( "Number of Test step execute during one Test Case flow " + results.size())
def c = 0
for(int i=results.size()-10;i&lt;results.size();i++)
{
	if(c==10){
		break;
	}
	else{
		log.info( "TestStep = [" + results[i].testStep.name + "] : Test Status of Test Step = [" +results[i].status.toString()+"]" )
          if( results[i].status.toString() == "OK" ) {      
          	teststatus=teststatus+":"+"Pass"
             }
          else{
  	           teststatus=teststatus+":"+"Fail"
           }
	}
  c=c+1
}
log.info ("All TestCaseStatus is:= " + teststatus)
if( teststatus.contains("Fail"))
{
   testrun.setPropertyValue( "TEST_STATUS", "Fail")
}
else
{
	if(validation_flag_value.equals("true")){
		testrun.setPropertyValue( "TEST_STATUS", "Fail")			
	}
	else{
		    if(asr_status.equals("Fail")){
			     testrun.setPropertyValue( "TEST_STATUS", "Fail")
		    }
		    else{
			    testrun.setPropertyValue( "TEST_STATUS", "Pass")			
		    }		
   }      
}


TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#EXECUTION_START_TIME}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#PON}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"


File filepath = new File(filexmlname)
def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)</script></con:config></con:testStep><con:testStep type="delay" name="END" id="fb251e3c-aba6-4089-a4e9-835c87847d68"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="ASR ReceiveOrder Request" id="c6afb74b-73f1-4582-921f-bb89db9a94bd" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="ASR ReceiveOrder Request" id="1c782cfb-4cfb-4b19-9385-cb42d7c1877d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://stomvqavasrrcvgw1.va.neustar.com:8301/axis/services/asrport</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<soapenv:Header>
<tMLHeader xmlns="http://tml.t1m1.org/tML.Transport.xsd">
<ApplicationType>ASRORDER</ApplicationType>
<From>HT_ABHI</From>
<To>HAWAIITEL</To>
</tMLHeader>
 <wsse:Security soapenv:actor="" soapenv:mustUnderstand="0" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/04/secext">
            <wsse:UsernameToken>
                <wsse:Username>example</wsse:Username>
                <wsse:Password>example</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
</soapenv:Header>
<soapenv:Body>
<processAsyncRequest xmlns="java:asr.webservice.neustar.biz">
<string xmlns="">
&lt;ASR_SERVICE_REQUEST xmlns=&quot;http://www.atis.org/OBF/ASR/UOM-ASR&quot;&gt;
&lt;HDR&gt;
&lt;MESSAGE_ID&gt;1482113072763818603402722&lt;/MESSAGE_ID&gt;
&lt;CCNA&gt;AWL&lt;/CCNA&gt;
&lt;MSG_TIMESTAMP&gt;2016-12-16T18:25:53-05:00&lt;/MSG_TIMESTAMP&gt;
&lt;ICSC&gt;AA01&lt;/ICSC&gt;
&lt;ASOG_VER&gt;53&lt;/ASOG_VER&gt;
&lt;/HDR&gt;
&lt;STANDALONE_EVC_SVC&gt;
&lt;ASR&gt;
&lt;ADMIN&gt;
&lt;CCNA&gt;AWL&lt;/CCNA&gt;
&lt;PON&gt;IF6740975E2U&lt;/PON&gt;
&lt;VER&gt;01&lt;/VER&gt;
&lt;ICSC&gt;AA01&lt;/ICSC&gt;
&lt;D_SENT&gt;20161216&lt;/D_SENT&gt;
&lt;T_SENT&gt;0625PM&lt;/T_SENT&gt;
&lt;DDD&gt;20161223&lt;/DDD&gt;
&lt;PROJECT&gt;MPAEVC&lt;/PROJECT&gt;
&lt;CNO&gt;146339773927&lt;/CNO&gt;
&lt;REQTYP&gt;SD&lt;/REQTYP&gt;
&lt;ACT&gt;C&lt;/ACT&gt;
&lt;EVCI&gt;A&lt;/EVCI&gt;
&lt;RTR&gt;F&lt;/RTR&gt;
&lt;PIU&gt;100&lt;/PIU&gt;
&lt;QTY&gt;0000001&lt;/QTY&gt;
&lt;BAN&gt;110 742-5013&lt;/BAN&gt;
&lt;ASC_EC&gt;AA01&lt;/ASC_EC&gt;
&lt;ASR_REMARKS&gt;PLEASE UPSPEED EVC MEETPOINT USID 75568; FA 10041175 CW 6740975&lt;/ASR_REMARKS&gt;
&lt;/ADMIN&gt;
&lt;BILLING&gt;
&lt;BILLNM&gt;AT&amp;amp;T MOBILITY&lt;/BILLNM&gt;
&lt;SBILLNM&gt;C/O TEOCO CORPORATION&lt;/SBILLNM&gt;
&lt;ACNA&gt;AWL&lt;/ACNA&gt;
&lt;FUSF&gt;E&lt;/FUSF&gt;
&lt;BILL_STR&gt;12150 MONUMENT DR.&lt;/BILL_STR&gt;
&lt;BILL_CITY&gt;FAIRFAX&lt;/BILL_CITY&gt;
&lt;BILL_STATE&gt;VA&lt;/BILL_STATE&gt;
&lt;BILL_ZIP&gt;22033&lt;/BILL_ZIP&gt;
&lt;BILLCON&gt;C/O TEOCO CORP&lt;/BILLCON&gt;
&lt;VTA&gt;60&lt;/VTA&gt;
&lt;/BILLING&gt;
&lt;CONTACT&gt;
&lt;INIT&gt;ANTOINETTE LEON&lt;/INIT&gt;
&lt;INITIATOR_TEL&gt;8173554203&lt;/INITIATOR_TEL&gt;
&lt;INIT_EMAIL&gt;AL9442@ATT.COM&lt;/INIT_EMAIL&gt;
&lt;DSGCON&gt;ANTOINETTE LEON&lt;/DSGCON&gt;
&lt;DSGCON_TEL&gt;8173554203&lt;/DSGCON_TEL&gt;
&lt;DSG_EMAIL&gt;AL9442@ATT.COM&lt;/DSG_EMAIL&gt;
&lt;IMPCON&gt;PCO TEST&lt;/IMPCON&gt;
&lt;IMPCON_TEL&gt;8178848031&lt;/IMPCON_TEL&gt;
&lt;/CONTACT&gt;
&lt;/ASR&gt;
&lt;EVC&gt;
&lt;EVC_DETAILS&gt;
&lt;EVCNUM&gt;0001&lt;/EVCNUM&gt;
&lt;NC&gt;VLP-&lt;/NC&gt;
&lt;EVCID&gt;84/VLXP/100875//SW&lt;/EVCID&gt;
&lt;NUT&gt;02&lt;/NUT&gt;
&lt;UNI_MAPPING&gt;
&lt;UREF&gt;01&lt;/UREF&gt;
&lt;UACT&gt;C&lt;/UACT&gt;
&lt;NCI&gt;02VLN.V&lt;/NCI&gt;
&lt;EVCSP&gt;BLVRMOAHH75&lt;/EVCSP&gt;
&lt;RUID&gt;MO/KRGS/383977//WINW/&lt;/RUID&gt;
&lt;EVCMPID&gt;JU101/GE1N/FRPLMOXAH76/WLGVMOWY0BW&lt;/EVCMPID&gt;
&lt;OTC&gt;AA01&lt;/OTC&gt;
&lt;CEVLAN_MAPPING&gt;
&lt;CE_VLAN&gt;
&lt;CE_VLAN_START&gt;2841&lt;/CE_VLAN_START&gt;
&lt;/CE_VLAN&gt;
&lt;/CEVLAN_MAPPING&gt;
&lt;LREF_MAPPING&gt;
&lt;LREF&gt;1&lt;/LREF&gt;
&lt;LOSACT&gt;C&lt;/LOSACT&gt;
&lt;SPEC&gt;OEMAR1&lt;/SPEC&gt;
&lt;BDW&gt;200M&lt;/BDW&gt;
&lt;/LREF_MAPPING&gt;
&lt;/UNI_MAPPING&gt;
&lt;UNI_MAPPING&gt;
&lt;UREF&gt;02&lt;/UREF&gt;
&lt;UACT&gt;C&lt;/UACT&gt;
&lt;NCI&gt;02VLN.V&lt;/NCI&gt;
&lt;EVCSP&gt;JPLNMOMA0CW&lt;/EVCSP&gt;
&lt;RUID&gt;84/KRGN/020659//SW&lt;/RUID&gt;
&lt;EVCMPID&gt;JU101/GE1N/FRPLMOXAH76/WLGVMOWY0BW&lt;/EVCMPID&gt;
&lt;OTC&gt;SW30&lt;/OTC&gt;
&lt;CEVLAN_MAPPING&gt;
&lt;CE_VLAN&gt;
&lt;CE_VLAN_START&gt;2841&lt;/CE_VLAN_START&gt;
&lt;/CE_VLAN&gt;
&lt;/CEVLAN_MAPPING&gt;
&lt;LREF_MAPPING&gt;
&lt;LREF&gt;1&lt;/LREF&gt;
&lt;LOSACT&gt;C&lt;/LOSACT&gt;
&lt;SPEC&gt;OEMAR1&lt;/SPEC&gt;
&lt;BDW&gt;200M&lt;/BDW&gt;
&lt;/LREF_MAPPING&gt;
&lt;/UNI_MAPPING&gt;
&lt;/EVC_DETAILS&gt;
&lt;/EVC&gt;
&lt;MULTI_EC&gt;
&lt;ASC_EC_DETAILS&gt;
&lt;ICSC&gt;AA01&lt;/ICSC&gt;
&lt;BAN&gt;110 742-5013&lt;/BAN&gt;
&lt;/ASC_EC_DETAILS&gt;
&lt;OTHER_EC_DETAILS&gt;
&lt;ICSC&gt;HT01&lt;/ICSC&gt;

&lt;BAN&gt;E&lt;/BAN&gt;
&lt;OECVTA&gt;60&lt;/OECVTA&gt;
&lt;/OTHER_EC_DETAILS&gt;
&lt;/MULTI_EC&gt;
&lt;/STANDALONE_EVC_SVC&gt;
&lt;/ASR_SERVICE_REQUEST&gt;
</string>
</processAsyncRequest>
</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9f689cec-d05e-4ce2-ade3-4c91f781e503"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SOAP Request11" id="f7ede928-97ba-4365-b0d6-b77473ff650e" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processSync</con:operation><con:request name="SOAP Request11" id="c26b0152-a9e7-4aeb-bdb9-940cd391d1df"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://stomvqavgw1:5898/axis/services/asrport</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<soapenv:Envelope
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <soapenv:Header>
        <tMLHeader xmlns="http://tml.t1m1.org/tML.Transport.xsd">
            <TransportID>CTL.UOM.20151025125036421</TransportID>
            <CorrelationID>CTL.UOM.20151025125036421</CorrelationID>
            <ApplicationType>NEUSTAR</ApplicationType>
            <From>HT_TWC</From>
            <To>HAWAIITEL</To>
            <SendTimestamp>2016-04-07T12:50:36</SendTimestamp>
            <RetryCount>0</RetryCount>
            <TrackID>CTL.UOM.20150918125036421</TrackID>
        </tMLHeader>
        <wsse:Security soapenv:actor="" soapenv:mustUnderstand="0" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/04/secext">
            <wsse:UsernameToken>
                <wsse:Username>example</wsse:Username>
                <wsse:Password>example</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <processAsyncRequest xmlns="java:asr.webservice.neustar.biz">
            <string xmlns="">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;ASR_SERVICE_REQUEST xmlns="http://www.atis.org/OBF/ASR/UOM-ASR" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.atis.org/OBF/ASR/UOM-ASR"&gt;&lt;HDR&gt;&lt;MESSAGE_ID&gt;1102HTTWC001&lt;/MESSAGE_ID&gt;&lt;CCNA&gt;HTW&lt;/CCNA&gt;&lt;MSG_TIMESTAMP&gt;2015-07-17T15:19:30+05:18&lt;/MSG_TIMESTAMP&gt;&lt;ICSC&gt;AA01&lt;/ICSC&gt;&lt;ASOG_VER&gt;53&lt;/ASOG_VER&gt;&lt;/HDR&gt;&lt;WATS_SVC&gt;&lt;ASR&gt;                &lt;ADMIN&gt;                                &lt;CCNA&gt;HTW&lt;/CCNA&gt;                                &lt;PON&gt;XAVIENTTEST5REST5&lt;/PON&gt;                                &lt;VER&gt;01&lt;/VER&gt;                                &lt;ICSC&gt;AA01&lt;/ICSC&gt;                                &lt;D_SENT&gt;20170110&lt;/D_SENT&gt;                                &lt;T_SENT&gt;0148AM&lt;/T_SENT&gt;                                &lt;DDD&gt;20170112&lt;/DDD&gt;                                &lt;REQTYP&gt;WA&lt;/REQTYP&gt;                                &lt;ACT&gt;R&lt;/ACT&gt;                                &lt;RTR&gt;F&lt;/RTR&gt;&lt;SUP&gt;4&lt;/SUP&gt;                                &lt;PIU&gt;0&lt;/PIU&gt;                                &lt;ECCKT&gt;SDFSDFGDSFGSDF&lt;/ECCKT&gt;                                &lt;QTY&gt;1&lt;/QTY&gt;                                &lt;BAN&gt;E&lt;/BAN&gt;                &lt;/ADMIN&gt;                &lt;BILLING&gt;                                &lt;BILLNM&gt;SSADFSAF&lt;/BILLNM&gt;                                &lt;ACNA&gt;RCV&lt;/ACNA&gt;                &lt;/BILLING&gt;                &lt;CONTACT&gt;                                &lt;INIT&gt;Smiling&lt;/INIT&gt;                                &lt;INITIATOR_TEL&gt;1234567890&lt;/INITIATOR_TEL&gt;                                &lt;INIT_EMAIL&gt;sprint@server-020.impetus.co.in &lt;/INIT_EMAIL&gt;                                                                 &lt;/CONTACT&gt;&lt;/ASR&gt;&lt;WAL&gt;&lt;NC&gt;AS--&lt;/NC&gt;&lt;/WAL&gt;&lt;/WATS_SVC&gt;&lt;/ASR_SERVICE_REQUEST&gt;</string>
        </processAsyncRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="cebd26e2-b6ca-4658-ae6d-5c922d899e75"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SOAP Request111" id="9b51a095-fa75-4bac-b7f8-b99408cb75c4" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPRequestHandlerSoapBinding</con:interface><con:operation>processAsync</con:operation><con:request name="SOAP Request111" id="d634eb03-a2bb-4869-bb25-acbdfa62271d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://stomvqavgw10.va.neustar.com:5896/axis/services/WSRequestHandlerPort</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<soapenv:Envelope
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <soapenv:Header>
        <tMLHeader xmlns="http://tml.t1m1.org/tML.Transport.xsd">
            <TransportID>CTL.UOM.20151025125036421</TransportID>
            <CorrelationID>CTL.UOM.20151025125036421</CorrelationID>
            <ApplicationType>ASRORDER</ApplicationType>
            <From>MCC_QA</From>
            <To>MCC_REC</To>
            <SendTimestamp>2016-04-07T12:50:36</SendTimestamp>
            <RetryCount>0</RetryCount>
            <TrackID>CTL.UOM.20150918125036421</TrackID>
        </tMLHeader>
        <wsse:Security soapenv:actor="" soapenv:mustUnderstand="0" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/04/secext">
            <wsse:UsernameToken>
                <wsse:Username>example</wsse:Username>
                <wsse:Password>example</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <processAsyncResponse xmlns="java:asr.webservice.neustar.biz">
            <string xmlns="">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;ASR_SERVICE_REQUEST xmlns="http://www.atis.org/OBF/ASR/UOM-ASR" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.atis.org/OBF/ASR/UOM-ASR"&gt;&lt;HDR&gt;&lt;MESSAGE_ID&gt;1102HTTWC001&lt;/MESSAGE_ID&gt;&lt;CCNA&gt;ABH&lt;/CCNA&gt;&lt;MSG_TIMESTAMP&gt;2015-07-17T15:19:30+05:18&lt;/MSG_TIMESTAMP&gt;&lt;ICSC&gt;ASR1&lt;/ICSC&gt;&lt;ASOG_VER&gt;53&lt;/ASOG_VER&gt;&lt;/HDR&gt;&lt;WATS_SVC&gt;&lt;ASR&gt;                &lt;ADMIN&gt;                                &lt;CCNA&gt;ABH&lt;/CCNA&gt;                                &lt;PON&gt;IRFAN3456tre&lt;/PON&gt;                                &lt;VER&gt;01&lt;/VER&gt;                                &lt;ICSC&gt;ASR1&lt;/ICSC&gt;                                &lt;D_SENT&gt;20160717&lt;/D_SENT&gt;                                &lt;T_SENT&gt;0148AM&lt;/T_SENT&gt;                                &lt;DDD&gt;20161112&lt;/DDD&gt;                                &lt;REQTYP&gt;WA&lt;/REQTYP&gt;                                &lt;ACT&gt;R&lt;/ACT&gt;                                &lt;RTR&gt;F&lt;/RTR&gt;&lt;SUP&gt;4&lt;/SUP&gt;                                &lt;PIU&gt;0&lt;/PIU&gt;                                &lt;ECCKT&gt;SDFSDFGDSFGSDF&lt;/ECCKT&gt;                                &lt;QTY&gt;1&lt;/QTY&gt;                                &lt;BAN&gt;E&lt;/BAN&gt;                &lt;/ADMIN&gt;                &lt;BILLING&gt;                                &lt;BILLNM&gt;SSADFSAF&lt;/BILLNM&gt;                                &lt;ACNA&gt;RCV&lt;/ACNA&gt;                &lt;/BILLING&gt;                &lt;CONTACT&gt;                                &lt;INIT&gt;Smiling&lt;/INIT&gt;                                &lt;INITIATOR_TEL&gt;1234567890&lt;/INITIATOR_TEL&gt;                                &lt;INIT_EMAIL&gt;sprint@server-020.impetus.co.in &lt;/INIT_EMAIL&gt;                                                                 &lt;/CONTACT&gt;&lt;/ASR&gt;&lt;WAL&gt;&lt;NC&gt;AS--&lt;/NC&gt;&lt;/WAL&gt;&lt;/WATS_SVC&gt;&lt;/ASR_SERVICE_REQUEST&gt;</string>
        </processAsyncResponse>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a2b75ae6-7e2c-4c38-a18a-934bafa66d66"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("VER","00")</con:setupScript><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/asr receive order http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>AsrReceiveOrder</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>SUPP4|SUPP1|SUPP2|SUPP3|Cancel|Resume|Abandon|Suspend</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>1</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>HAWAIITEL_SES_S_REQ_ASOG54</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>BODY</con:name><con:value>HAWAIITEL_SES_S_REQ_BODY</con:value></con:property><con:property><con:name>BODYASRC</con:name><con:value>REQ_ASRC</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>asr_order</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>asr_order_response</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>SwitchedEthernetS</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>HAWAIITEL</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>ASOG</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>HTW</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>HW10</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>02/28/2017 06:55:32 PM</con:value></con:property><con:property><con:name>PON</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02282017065532PM</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02-28-2017-0655PM</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02-28-2017-0655PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02-28-2017</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>NEWSEND:NEWRECEIVE</con:value></con:property><con:property><con:name>SUPP_REMARKS_FLOW</con:name><con:value>SUPP4SEND:SUPP4RECEIVE|SUPP1SEND:SUPP1RECEIVE|SUPP2SEND:SUPP2RECEIVE|SUPP3SEND:SUPP3RECEIVE</con:value></con:property><con:property><con:name>SUPP_REMARKS_SINGLE</con:name><con:value>SUPP3SEND:SUPP3RECEIVE</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>SES</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HAWAIITELASR</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HT_TWC</con:value></con:property><con:property><con:name>CUSTOMERRESPONSEDOMAIN</con:name><con:value>HAWAIITEL</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">example</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>7</con:value></con:property><con:property><con:name>RESPONSEMECHANISM</con:name><con:value>API</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   &lt;soapenv:Body>
      &lt;ns1:processAsyncResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns1="http://www.neustar.biz/clearinghouse/SOAPRequestHandler/1.0"/>
   &lt;/soapenv:Body>
&lt;/soapenv:Envelope></con:value></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>false</con:value></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>RES_HEADER</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>HAWAIITEL_ACK:HAWAIITEL_DLR:HAWAIITEL_NACK:HAWAIITEL_ERROR:HAWAIITEL_CLARIFICATION_B:HAWAIITEL_CLARIFICATION_C:HAWAIITEL_CLARIFICATION_D:HAWAIITEL_CLARIFICATION_E:HAWAIITEL_CLARIFICATION_F</con:value></con:property><con:property><con:name>SUPPRESPONSEFILE</con:name><con:value>HAWAIITEL_ACK:HAWAIITEL_DLR:HAWAIITEL_NACK:HAWAIITEL_ERROR:HAWAIITEL_CLARIFICATION_B:HAWAIITEL_CLARIFICATION_C:HAWAIITEL_CLARIFICATION_D:HAWAIITEL_CLARIFICATION_E:HAWAIITEL_CLARIFICATION_F:HAWAIITEL_CONFIRMATION|HAWAIITEL_DLR:HAWAIITEL_NACK:HAWAIITEL_ERROR:HAWAIITEL_CLARIFICATION_B:HAWAIITEL_CLARIFICATION_C:HAWAIITEL_CLARIFICATION_D:HAWAIITEL_CLARIFICATION_E:HAWAIITEL_CLARIFICATION_F:HAWAIITEL_CONFIRMATION|HAWAIITEL_ACK:HAWAIITEL_DLR:HAWAIITEL_NACK:HAWAIITEL_ERROR:HAWAIITEL_CLARIFICATION_B:HAWAIITEL_CLARIFICATION_C:HAWAIITEL_CLARIFICATION_D:HAWAIITEL_CLARIFICATION_E:HAWAIITEL_CLARIFICATION_F:HAWAIITEL_CONFIRMATION|HAWAIITEL_ACK:HAWAIITEL_DLR:HAWAIITEL_NACK:HAWAIITEL_ERROR:HAWAIITEL_CLARIFICATION_B:HAWAIITEL_CLARIFICATION_C:HAWAIITEL_CLARIFICATION_D:HAWAIITEL_CLARIFICATION_E:HAWAIITEL_CLARIFICATION_F:HAWAIITEL_CLARIFICATION_A:HAWAIITEL_CLARIFICATION_K:HAWAIITEL_CONFIRMATION</con:value></con:property><con:property><con:name>SUPPRESPONSEFILE_SINGLE</con:name><con:value>HAWAIITEL_ACK:HAWAIITEL_DLR:HAWAIITEL_NACK:HAWAIITEL_ERROR:HAWAIITEL_CLARIFICATION_B:HAWAIITEL_CLARIFICATION_C:HAWAIITEL_CLARIFICATION_D:HAWAIITEL_CLARIFICATION_E:HAWAIITEL_CLARIFICATION_F:HAWAIITEL_CLARIFICATION_A:HAWAIITEL_CLARIFICATION_K:HAWAIITEL_CONFIRMATION</con:value></con:property><con:property><con:name>TXID</con:name><con:value>1564</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Fail</con:value></con:property><con:property><con:name>VER</con:name><con:value>00</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>100</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>AsrReceiveOrder</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>ASR_RECEIVE_ORDER</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="ASR_RECEIVE_PREORDER_API_NS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8db772a7-7a42-4457-bc69-c96208807d98"><con:description>Asr Receive PreOrder test case submits the Asr Receive PreOrder Request to CH</con:description><con:settings/><con:testStep type="groovy" name="SETTING_REQUEST_DATA" id="e3ba66ad-f68f-4269-8865-e5b6df328106"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException

def run=testRunner
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"

DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
                Node nNode = nList.item(temp);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                       Element eElement = (Element) nNode;            
                       testcasename=eElement.getAttribute("name")                       
                       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
                       testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
                       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
                                            testRunner.testCase.setPropertyValue( "VER" , "00" )                                   
                                            testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )                                         
                                            def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADER" , header )
                                            def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "BODY" , body )
                                            def asrc = eElement.getElementsByTagName("ASRC").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "BODYASRC" , asrc )
                                            def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REQUEST" , request )
		            					def responsemech = eElement.getElementsByTagName("RESPONSEMECHANISM").item(0).getTextContent()
		            					testRunner.testCase.setPropertyValue( "RESPONSEMECHANISM" , responsemech )		           
                                            def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
                                            def subrequestres = eElement.getElementsByTagName("SUBREQUESTRESPONSE").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "SUBREQUESTRESPONSE" , subrequestres )                                            
                                            def resheader = eElement.getElementsByTagName("RESPONSEHEADER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "RESPONSEHEADER" , resheader )
                                            def response = eElement.getElementsByTagName("RESPONSE").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "RESPONSE" , response )
          	                             def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
		                                  testRunner.testCase.setPropertyValue( "ILEC" , ilec )
		                                  def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
                                            def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "FLOW" , flow )
                                            def remarks= eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )                                          
                                            def responsefile = eElement.getElementsByTagName("RESPONSEFILE").item(0).getTextContent()		
		                                  testRunner.testCase.setPropertyValue( "RESPONSEFILE" , responsefile )		                                  
                                            def ccna = eElement.getElementsByTagName("CCNA").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CCNA" , ccna )
                                            def icsc = eElement.getElementsByTagName("ICSC").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "ICSC" , icsc )
		                                  def customer = eElement.getElementsByTagName("CUSTOMER").item(0).getTextContent()		                                  
                                            testRunner.testCase.setPropertyValue( "CUSTOMER" ,  customer )
                                            def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )                                            
                                            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
                                            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )
                                            def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()                       
                                            testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )                                            
		                                  String testcasenumber=Integer.toString(temp)
                                            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
                                }
                     else{
                                            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
                     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	 run.runTestStepByName("DRIVER_TO_SUBMIT_REQUEST")
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for AsrSendOrder")
run.gotoStepByName("END")		                     </script></con:config></con:testStep><con:testStep type="groovy" name="DRIVER_TO_SUBMIT_REQUEST" id="51d83d01-06b4-4e1e-8d50-c8d8b52ea0f6"><con:settings/><con:config><script>int loop=0
def run=testRunner
String validation_br
def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
def testcasename=testRunner.testCase.getPropertyValue("TC_NAME")
log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
run.runTestStepByName("GET_PON_DATE")
run.runTestStepByName("TRANSFER_PON_DATE")             
if(flag.equals("TRUE")){
	run.runTestStepByName("VALIDATE_REQUEST")
	run.runTestStepByName("SAVE_REQUEST")	
	run.runTestStepByName("SUBMIT_REQUEST")	
	run.runTestStepByName("RESPONSE_TRANSFER") 
	run.runTestStepByName("VALIDATION_ERROR_CHECK")     
	validation_br=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")              
	if(validation_br.equals("true")){
		log.info("Test Case is getting Failed Due to Validation Error Please Check Groovy Log for More Details")
		testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")	  
	}             	 	                      
	else{
		run.runTestStepByName("GET_TXID")
		run.runTestStepByName("TRANSFER_TXID")
		run.runTestStepByName("SUBMIT_RESPONSE")				
		run.runTestStepByName("VALIDATE_RECEIVE_ASR_PREORDER_MESSAGE")			
		def asr_status = context.expand( '${VALIDATE_RECEIVE_ASR_PREORDER_MESSAGE#ASR_QA_VALIDATION_FLAG}' )
		log.info ("ASR STATUS:= "+asr_status)			
		testRunner.testCase.setPropertyValue( "ASR_QA_VALIDATION_FLAG", asr_status)   	               		
		if(asr_status.equals("Fail")){
			log.info("Test Case is getting Failed Due to RECEIVE_ASR_PREORDER_MESSAGE  DB Validation Error Please Check Groovy Log for More Details")
			testRunner.testCase.setPropertyValue( "TEST_STATUS", "Fail")   	               
		}
		else{
			log.info 'NO STEP'	
		}                                          
		run.runTestStepByName("REPORT_GENERATION_HTML")          
	}
}
else{
	log.info("TestCase are Remaing for Execution")
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_PON_DATE" id="77e6e3de-36db-40c5-862f-62a1bcd0379d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2c83ccd6-1fcf-46c0-9531-68eb0f4dab07</con:targetTestCase><con:properties><con:property><con:name>CURR_DT</con:name><con:value>11-09-2016-0503PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value>11-09-2016</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>11-09-2016-0503PM</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>11/09/2016 05:03:57 PM</con:value></con:property><con:property><con:name>PON</con:name><con:value>11092016050357PM</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value/></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property></con:properties><con:returnProperties><con:entry>CURR_DT</con:entry><con:entry>DDD</con:entry><con:entry>DUE_DT</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>PON</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_PON_DATE" id="382fb6c8-0a01-4659-8100-bce67857939f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>PON</con:name><con:sourceType>PON</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PON</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>DUE_DT</con:name><con:sourceType>DUE_DT</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>DUE_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>GET_PON_DATE</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_REQUEST" id="988b37e7-0759-4aab-9cc4-d8c5e8018b7d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name><con:value/></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property><con:property><con:name>LOCATIONID</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SAVE_REQUEST" id="89fa2ccc-3af4-40f5-9c91-5a137722f6a0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property><con:property><con:name>LOCATIONID</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_REQUEST" id="af23326f-289c-47c8-a383-285cfd8068ac"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name></con:property><con:property><con:name>OTCNUMBER</con:name></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property><con:property><con:name>LOCATIONID</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="RESPONSE_TRANSFER" id="185fafd0-bbbf-4ab9-a2d1-684e61dc1944"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>SUBMIT_REQUEST</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="VALIDATION_ERROR_CHECK" id="c73f4918-1efd-4824-9051-1187308d0aa7"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","true")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
		testRunner.testCase.setPropertyValue("VALIDATION_ERROR_CHECK_FLAG","false")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="GET_TXID" id="2d59de83-eed3-4455-a172-08625accd465"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>39b09e8a-ec71-4464-9a04-9be0db3e7efb</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>TXID</con:name><con:value/></con:property></con:properties><con:returnProperties><con:entry>TXID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="TRANSFER_TXID" id="97a81f67-db74-4411-a99c-29e5c1a16bf9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>TXID</con:name><con:sourceType>TXID</con:sourceType><con:sourceStep>GET_TXID</con:sourceStep><con:targetType>TXID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="SUBMIT_RESPONSE" id="30a372c3-2866-4a60-bf88-bcf6132a2440"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c03f4e9d-d4cb-456e-978d-92dcc807b254</con:targetTestCase><con:properties><con:property><con:name>SINGLERESPONSEFILE</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>${#TestCase#CCNA}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>${#TestCase#RESPONSEHEADER}</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>${#TestCase#CURR_DT}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSE</con:name><con:value>${#TestCase#RESPONSE}</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>${#TestCase#DUE_DT}</con:value></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>${#TestCase#ICSC}</con:value></con:property><con:property><con:name>MECHANISM</con:name><con:value>${#TestCase#RESPONSEMECHANISM}</con:value></con:property><con:property><con:name>ASOG_VER</con:name><con:value/></con:property><con:property><con:name>TXID</con:name><con:value>${#TestCase#TXID}</con:value></con:property><con:property><con:name>SUBREQUESTRESPONSE</con:name><con:value>${#TestCase#SUBREQUESTRESPONSE}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="VALIDATE_RECEIVE_ASR_PREORDER_MESSAGE" id="f2f4e23a-90b0-425d-8e0c-17956684e094"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>9afcbacd-ff32-4d56-b2bb-f995268a66bb</con:targetTestCase><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#PON}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>VER</con:name><con:value>${#TestCase#VER}</con:value></con:property><con:property><con:name>ACTION</con:name></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property></con:properties><con:returnProperties><con:entry>ASR_QA_VALIDATION_FLAG</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="REPORT_GENERATION_HTML" id="7aef6d87-38d9-4842-8039-53cee0bbe4f6"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;


def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
def results = testRunner.results
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
def validation_flag_value=testRunner.testCase.getPropertyValue("VALIDATION_ERROR_CHECK_FLAG")
def asr_status=testRunner.testCase.getPropertyValue("ASR_QA_VALIDATION_FLAG")
String teststatus="All Status Value="
log.info( "Number of Test step execute during one Test Case flow " + results.size())
def c = 0
for(int i=results.size()-10;i&lt;results.size();i++)
{
	if(c==10){
		break;
	}
	else{
		log.info( "TestStep = [" + results[i].testStep.name + "] : Test Status of Test Step = [" +results[i].status.toString()+"]" )
          if( results[i].status.toString() == "OK" ) {      
          	teststatus=teststatus+":"+"Pass"
             }
          else{
  	           teststatus=teststatus+":"+"Fail"
           }
	}
  c=c+1
}
log.info ("All TestCaseStatus is:= " + teststatus)
if( teststatus.contains("Fail"))
{
   testrun.setPropertyValue( "TEST_STATUS", "Fail")
}
else
{
	if(validation_flag_value.equals("true")){
		testrun.setPropertyValue( "TEST_STATUS", "Fail")			
	}
	else{
		
		
		    if(asr_status.equals("Fail")){
			     testrun.setPropertyValue( "TEST_STATUS", "Fail")
		    }
		    else{
			    testrun.setPropertyValue( "TEST_STATUS", "Pass")			
		    }		
   }      
}


TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#EXECUTION_START_TIME}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#PON}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"

File filepath = new File(filexmlname)


def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)
</script></con:config></con:testStep><con:testStep type="delay" name="END" id="9cd3abee-6a95-4c41-8f90-c9d0a488023e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("VER","00")</con:setupScript><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["REPORTING"].testSteps["CSV_FILE"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
log.info("proj path is "+xmlFileLocation);
def logFile = new File(xmlFileLocation + "/SoapUILogs/asr receive preorder http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>AsrReceivePreOrder</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>NOFLOW</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>FALSE</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>5</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>11/09/2016 05:03:57 PM</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>HAWAIITEL_CFAInquiry_REQ</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>RESPONSEHEADER</con:name><con:value>RES_HEADER</con:value></con:property><con:property><con:name>BODY</con:name><con:value>HAWAIITEL_CFAInquiry_REQ_BODY</con:value></con:property><con:property><con:name>BODYASRC</con:name><con:value>REQ_ASRC</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>asr_preorder</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>asr_preorder</con:value></con:property><con:property><con:name>SUBREQUESTRESPONSE</con:name><con:value>CFAResults</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value>asr_receive_preorder</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>HAWAIITEL</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>ASOG</con:value></con:property><con:property><con:name>PON</con:name><con:value>11092016050357PM</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">11-09-2016-0503PM</con:value></con:property><con:property><con:name>DUE_DT</con:name><con:value>11-09-2016-0503PM</con:value></con:property><con:property><con:name>DDD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">11-09-2016</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>CFAInquirySend:CFAInquiryReceive</con:value></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value>CFAresponse</con:value></con:property><con:property><con:name>RESPONSEMECHANISM</con:name><con:value>API</con:value></con:property><con:property><con:name>CCNA</con:name><con:value>HTW</con:value></con:property><con:property><con:name>ICSC</con:name><con:value>HW10</con:value></con:property><con:property><con:name>SVCTYP</con:name><con:value>asr_preorder</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">NOUSE</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">NOUSE</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>HT_TWC</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TXID</con:name><con:value/></con:property><con:property><con:name>VALIDATION_ERROR_CHECK_FLAG</con:name><con:value>false</con:value></con:property><con:property><con:name>ASR_QA_VALIDATION_FLAG</con:name><con:value>Fail</con:value></con:property><con:property><con:name>VER</con:name><con:value>00</con:value></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Fail</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>100</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>AsrReceivePreorder</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>ASR_RECEIVE_PREORDER</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>51a9d764-3691-4bd8-b7bb-50cebef7bc52</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>998ce924-a3cd-4641-8ad2-427e2e3fdbf2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="LIDB" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1df4bd19-d07e-481e-a405-ecfadb0acdee"><con:description>LIDB test case submits the LIDB Request to CH</con:description><con:settings/><con:testStep type="groovy" name="DriverScript" id="cf463f9f-9b87-4be1-8c4c-6c38a9816154"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
def run=testRunner
int loop=0
def flowvalue,testcasename
def project=testRunner.testCase.testSuite.project
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def xmlFileTest=testRunner.testCase.getPropertyValue("TESTSUITE_NAME")
def xmlFile=xmlFileLocation+"/InputData/"+xmlFileTest+".xml"
DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
Document doc = dBuilder.parse(xmlFile)	
doc.getDocumentElement().normalize()
NodeList nList = doc.getElementsByTagName("TEST_CASE")
length = nList.getLength()
for (int temp = 0; temp &lt; length; temp++) {
	Node nNode = nList.item(temp);
	if (nNode.getNodeType() == Node.ELEMENT_NODE) {
	       Element eElement = (Element) nNode;            
	       testcasename=eElement.getAttribute("name")
	       def execution = eElement.getElementsByTagName("EXECUTION").item(0).getTextContent()
		  testRunner.testCase.setPropertyValue( "EXECUTIONFLAG" , execution )
	       if (eElement.getElementsByTagName("EXECUTION").item(0).getTextContent().equalsIgnoreCase("TRUE")) {
	       	       testRunner.testCase.setPropertyValue( "VER" , "00" )	       	       
                      testRunner.testCase.setPropertyValue( "TC_NAME" , testcasename )		            
		            def header = eElement.getElementsByTagName("HEADER").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "HEADER" , header )
		            def body = eElement.getElementsByTagName("BODY").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "BODY" , body )
		            def request = eElement.getElementsByTagName("REQUEST").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "REQUEST" , request )
		            def subrequest = eElement.getElementsByTagName("SUBREQUEST").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "SUBREQUEST" , subrequest )
	                 def ilec = eElement.getElementsByTagName("ILEC").item(0).getTextContent()
	                 testRunner.testCase.setPropertyValue( "ILEC" , ilec )	                 
		            def headerver = eElement.getElementsByTagName("HEADERVER").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "HEADERVER" , headerver )
		            def flow = eElement.getElementsByTagName("FLOW").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "FLOW" , flow )
		            def resraw = eElement.getElementsByTagName("RESRAWINRESQUE").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "RESRAWINRESQUE" , resraw )
		            def chhannelname = eElement.getElementsByTagName("CHANNELNAME").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "CHANNELNAME" , chhannelname )
		            def responsefilename = eElement.getElementsByTagName("RESPONSEFILE").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "RESPONSEFILE" , responsefilename )
		            def remarks = eElement.getElementsByTagName("REMARKS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "REMARKS" , remarks )
		            def status = eElement.getElementsByTagName("STATUS").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "STATUS" , status )
		            def responsemech = eElement.getElementsByTagName("RESPONSEMECHANISM").item(0).getTextContent()
		            testRunner.testCase.setPropertyValue( "RESPONSEMECHANISM" , responsemech )		            
		            def msgtyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "MESSAGETYPE" , msgtyp )		            
		            def svctyp = eElement.getElementsByTagName("SVCTYP").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "SVCTYP" , svctyp )
		            def customerid = eElement.getElementsByTagName("CUSTOMERID").item(0).getTextContent()		
		            testRunner.testCase.setPropertyValue( "CUSTOMER" , customerid )
		            String testcasenumber=Integer.toString(temp)
		            testRunner.testCase.setPropertyValue( "TESTCASENUMBER" , testcasenumber )
		}
	     else{
		            log.info("Execution Flag for Test Case :="+testcasename+" set to FALSE")
	     }
    }
    def flag=testRunner.testCase.getPropertyValue("EXECUTIONFLAG")
    log.info("Execution Flag Value for Test Case :"+testcasename+" is "+ flag)
    if(flag.equals("TRUE")){
    	        run.runTestStepByName("Get OrderNumber_Telephone")
             run.runTestStepByName("Transfer ordernumer")
             run.runTestStepByName("Validate Request")
             run.runTestStepByName("Save Request")
             run.runTestStepByName("Submit Request")
             run.runTestStepByName("Reponse Transformation")
             run.runTestStepByName("ValidationErrorCheck")
             mechanism=testRunner.testCase.getPropertyValue("RESPONSEMECHANISM")
             if(mechanism.contains("FilePoller")){
             	log.info ("FilePoller Response is Configured")
            	//run.runTestStepByName("Submit Response")
            }
            else{
            	log.info ("TPE Response is Configured")
            	//run.runTestStepByName("Submit Response")
            }
             //run.runTestStepByName("Verify E911_NENA_MESSAGE")             
             flowvalue=testRunner.testCase.getPropertyValue("FLOW")
            if(flowvalue.equals("NOFLOW") || flowvalue.equals("")){
            	log.info("NOFLOW for further Execution Found")
            }
            else{
            	  String delimeter="[|]"
                 String[] flowExe = flowvalue.split(delimeter)
                 for(int j=0;j&lt;flowExe.size();j++){                 	                 	
                 	if(flowExe[j].contains("SUPP")){                  		                 	                         
		               log.info flowExe[j]		                                		                 		               
                 		String fisrtvalue=Integer.toString(j)
                 		testRunner.testCase.setPropertyValue( "FIRSTFLOW" , fisrtvalue )
                 		run.runTestStepByName("Submit Sup Request")
                 		run.runTestStepByName("Ver Transformation")
                 		addvalue=testRunner.testCase.getPropertyValue("TC_NAME")
                 		addvalue=addvalue+"_"+flowExe[j]
                 		testRunner.testCase.setPropertyValue("TC_NAME", addvalue)
                 	}
                 	else{
                 		log.info flowExe[j]
                 		String fisrtvalue=Integer.toString(j)
                 		testRunner.testCase.setPropertyValue( "FIRSTFLOW" , fisrtvalue )
                 		run.runTestStepByName("Submit ASRC Request")
                 		addvalue=testRunner.testCase.getPropertyValue("TC_NAME")
                 		addvalue=addvalue+"_"+flowExe[j]
                 		testRunner.testCase.setPropertyValue("TC_NAME", addvalue)
                 	}
                 }                            	
            }
           log.info testRunner.testCase.getPropertyValue("TC_NAME")
           //run.runTestStepByName("Delay")
          //run.runTestStepByName("Validate Response_Message_Queue")
          run.runTestStepByName("ReportGenerationHTML")          
    }
    else{
    	       log.info("TestCase are Remaing for Execution")
    }			
}
log.info("Execution has completed for E911")
run.gotoStepByName("End")		</script></con:config></con:testStep><con:testStep type="groovy" name="If Driver Script Fail" id="5f950840-286a-44b2-8de0-b7ce77bc1e34"><con:settings/><con:config><script>testRunner.gotoStepByName("End")
</script></con:config></con:testStep><con:testStep type="calltestcase" name="Get OrderNumber_Telephone" id="27526c75-96dc-41c9-b72b-c7244eae31d5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>5a4bfb4e-fad3-4ddd-affa-6f627b55bde4</con:targetTestCase><con:properties><con:property><con:name>DDD</con:name><con:value>05-19-2017</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>050317003</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>234-503-1903</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>05/19/2017 10:17:03 PM</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>05-19-2017-1017PM</con:value></con:property><con:property><con:name>OTCNUMBER</con:name><con:value>031903</con:value></con:property><con:property><con:name>RESPONSEPHONE</con:name></con:property></con:properties><con:returnProperties><con:entry>DDD</con:entry><con:entry>ORDERNUMBER</con:entry><con:entry>USERNAME</con:entry><con:entry>PASSWORD</con:entry><con:entry>PHONE</con:entry><con:entry>EXECUTION_START_TIME</con:entry><con:entry>CURR_DT</con:entry><con:entry>OTCNUMBER</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Transfer ordernumer" id="d3ae8dff-ecd6-4345-86b0-63e3d3f58dea"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>DDD</con:name><con:sourceType>DDD</con:sourceType><con:sourceStep>Get OrderNumber_Telephone</con:sourceStep><con:targetType>DDD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>EXECUTION_START_TIME</con:name><con:sourceType>EXECUTION_START_TIME</con:sourceType><con:sourceStep>Get OrderNumber_Telephone</con:sourceStep><con:targetType>EXECUTION_START_TIME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>USERNAME</con:name><con:sourceType>USERNAME</con:sourceType><con:sourceStep>Get OrderNumber_Telephone</con:sourceStep><con:targetType>USERNAME</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" entitize="false"><con:name>PASSWORD</con:name><con:sourceType>PASSWORD</con:sourceType><con:sourceStep>Get OrderNumber_Telephone</con:sourceStep><con:targetType>PASSWORD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" entitize="false" transferToAll="false" transferChildNodes="false" disabled="false"><con:name>ORDERNUMBER</con:name><con:sourceType>OTCNUMBER</con:sourceType><con:sourceStep>Get OrderNumber_Telephone</con:sourceStep><con:targetType>OTCNUMBER</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false" entitize="false" disabled="false" transferToAll="false"><con:name>PHONE</con:name><con:sourceType>PHONE</con:sourceType><con:sourceStep>Get OrderNumber_Telephone</con:sourceStep><con:targetType>PHONE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CURR_DT</con:name><con:sourceType>CURR_DT</con:sourceType><con:sourceStep>Get OrderNumber_Telephone</con:sourceStep><con:targetType>CURR_DT</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="Validate Request" id="aa2d35d6-4585-4953-a8d0-afb5d70dd9c9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>validate</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>OTCNUMBER</con:name><con:value>${#TestCase#OTCNUMBER}</con:value></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Save Request" id="04551019-f9aa-4754-8e86-06a8068f3570"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>save</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>OTCNUMBER</con:name><con:value>${#TestCase#OTCNUMBER}</con:value></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Submit Request" id="d57802b6-9921-4112-b70c-8121470b7850"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0e21632d-9705-444e-ab33-db178dfe794a</con:targetTestCase><con:properties><con:property><con:name>ACTION_TYPE</con:name><con:value>submit</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value/></con:property><con:property><con:name>DUE_DT</con:name><con:value/></con:property><con:property><con:name>PON</con:name><con:value/></con:property><con:property><con:name>DDD</con:name><con:value>${#TestCase#DDD}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>HEADER</con:name><con:value>${#TestCase#HEADER}</con:value></con:property><con:property><con:name>BODY</con:name><con:value>${#TestCase#BODY}</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>${#TestCase#REQUEST}</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>${#TestCase#SUBREQUEST}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>VER</con:name><con:value/></con:property><con:property><con:name>SUPP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>${#TestCase#USERNAME}</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>${#TestCase#PASSWORD}</con:value></con:property><con:property><con:name>RESPONSE</con:name><con:value/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>RESPONSESYNC</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value/></con:property><con:property><con:name>OTCNUMBER</con:name><con:value>${#TestCase#OTCNUMBER}</con:value></con:property><con:property><con:name>CCNA</con:name></con:property><con:property><con:name>ICSC</con:name></con:property><con:property><con:name>TXID</con:name></con:property><con:property><con:name>LOCATIONID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RESPONSEVALUE</con:name></con:property></con:properties><con:returnProperties><con:entry>RESPONSE</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Reponse Transformation" id="5dc23e09-948d-4b8b-908d-cf5f75b7f0a2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false" ignoreEmpty="false"><con:name>submitresponse</con:name><con:sourceType>RESPONSE</con:sourceType><con:sourceStep>Submit Request</con:sourceStep><con:targetType>RECEIVERESPONSE</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="ValidationErrorCheck" id="d523fee7-f9c8-401e-bbf5-42de8d0a7cd2"><con:settings/><con:config><script>import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.ParserConfigurationException
import org.w3c.dom.Document
import org.w3c.dom.NodeList
import org.w3c.dom.Node
import org.w3c.dom.Element
import org.xml.sax.SAXException
testCaseName = testRunner.testCase.name
def response = context.expand( '${#TestCase#RECEIVERESPONSE}' )
//def response=testRunner.testCase.getPropertyValue("RECEIVERESPONSE")
def testCaseNumber=testRunner.testCase.getPropertyValue("TESTCASENUMBER")
log.info ("Receive response from webservice :" + response)
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
if(response.equals("")){
	log.info("No Async response is received from WebServices")
}
else{
if(response.contains("ruleerror")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Validation.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Validation.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)		
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def rule_error = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def rule_error1 = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following Rule Error = [" + rule_error + "]")
		log.info ("Reason for,Request is not getting submitted because of following Rule Error = [" + rule_error1 + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error:-------------------------------------------------------------"+ rule_error)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nRule Error String:-------------------------------------------------------------------"+ rule_error1)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          //testRunner.gotoStepByName("DriverScript")
}
else{
	if(response.contains("faultcode")){
		def xmlFile=xmlFileLocation+"/SoapUILogs/Error.xml"
		def xmlFileLog=xmlFileLocation+"/SoapUILogs/Error.log"
		File file = new File(xmlFile)
		File fileLog = new File(xmlFileLog)
		if (!file.exists() || !fileLog.exists()) {
			file.createNewFile()
			fileLog.createNewFile()
			}	
		FileWriter fileWriter = new FileWriter(file.getAbsoluteFile())
		BufferedWriter writefile = new BufferedWriter(fileWriter)
		writefile.append(response)
		writefile.close()
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance()
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()
		Document doc = dBuilder.parse(xmlFile)
		doc.getDocumentElement().normalize()	
		def faultcode = doc.getElementsByTagName("faultcode").item(0).getTextContent()
		def faultstring = doc.getElementsByTagName("faultstring").item(0).getTextContent()
		log.info ("Request is not getting submitted because of following faultCode = [" + faultcode + "]")
		log.info ("Reason for,Request is not getting submitted because of following faultString = [" + faultstring + "]")		
		fileLog.append("----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nTest Case Name : " + testCaseName)
          fileLog.append("\nTest Case Number :" + testCaseNumber)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code:-------------------------------------------------------------"+ faultcode)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
          fileLog.append("\nFault Code String:-------------------------------------------------------------------"+ faultstring)
          fileLog.append("\n----------------------------------------------------------------------------------------------------------")
		//testRunner.gotoStepByName("DriverScript")
	}
	else
	{
		log.info ("NO Business Rule Validation and Process Exception in Submitted Request")
	}
}
}</script></con:config></con:testStep><con:testStep type="calltestcase" name="Submit Response" id="7d60c8a4-3643-4699-b6c8-596bcefe164c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>98684897-f46b-41f6-ac33-024761e665c1</con:targetTestCase><con:properties><con:property><con:name>TEST_NAME</con:name><con:value>${#TestCase#TEST_NAME}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>MESSAGETYPE</con:name><con:value>${#TestCase#MESSAGETYPE}</con:value></con:property><con:property><con:name>MultiResponseFileName</con:name><con:value>${#TestCase#RESPONSEFILE}</con:value></con:property><con:property><con:name>GATEWAY</con:name></con:property><con:property><con:name>BOXIP</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Request</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RequestFolder</con:name></con:property><con:property><con:name>SingleResponseFileName</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Verify E911_NENA_MESSAGE" id="f717506b-53fc-4ff1-bb96-fca0840b5900" disabled="true"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>31b415f4-109c-46e4-857e-134c45c94f54</con:targetTestCase><con:properties><con:property><con:name>OID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>TC_TYPE</con:name><con:value>${#TestCase#TC_TYPE}</con:value></con:property><con:property><con:name>ORDERNUMBER</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>${#TestCase#HEADERVER}</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>${#TestCase#ILEC}</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value>${#TestCase#REMARKS}</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>${#TestCase#PHONE}</con:value></con:property><con:property><con:name>STATUS</con:name></con:property><con:property><con:name>E911_DB_VALIDATION_FLAG</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e161c169-3a4d-421f-bb21-7df084776de8"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="calltestcase" name="Validate Response_Message_Queue" id="a4b4626f-ea48-4b5e-8079-fcef868e0bd9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4a0d11eb-4413-43be-b0fa-15a5863627d3</con:targetTestCase><con:properties><con:property><con:name>CUSTOMER</con:name><con:value>${#TestCase#CUSTOMER}</con:value></con:property><con:property><con:name>PON</con:name><con:value>${#TestCase#ORDERNUMBER}</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value>${#TestCase#CHANNELNAME}</con:value></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value>${#TestCase#RESRAWINRESQUE}</con:value></con:property><con:property><con:name>OID</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="ReportGenerationHTML" id="4cb6e08b-dabc-49eb-8b05-a2f54e494f2c"><con:settings/><con:config><script>import biz.neustar.test.datautils.*;
import biz.neustar.test.xmlutils.*;
def tcproject = testRunner.testCase.testSuite.project
def testrun=testRunner.testCase
def run=testRunner
String testcasenumber=testrun.getPropertyValue("TESTCASENUMBER")
log.info testcasenumber
String teststatus
def lastResult = testRunner.getResults().last()
def lastResultName = lastResult.getTestStep().getLabel().toString()
def lastResultStatus = lastResult.getStatus().toString()

log.info 'Test Step [' + lastResultName + '] status: ' + lastResultStatus

if( lastResultStatus == 'OK' )
{
   teststatus="Pass"
   testrun.setPropertyValue( "TEST_STATUS", teststatus)
}
else
{
   teststatus="Fail"
   testrun.setPropertyValue( "TEST_STATUS", teststatus)
}
TimeZone.'default'= TimeZone.getTimeZone('IST')
def todat = new Date()
def number
def currenDate = todat
def currenDate1 = todat.format('dd-MMM-yyyy hh:mm:ss a')
def currenDate2 = todat.format('dd-MM-yyyy')
def tc_NAME = context.expand( '${#TestCase#TC_NAME}' )
def tESTCASE_NAME = context.expand( '${#TestCase#TEST_NAME}' )
def rESULTS_FILE_PATH = context.expand( '${#Project#DATA_REPOSITORY}' )
def tESTSUITE_NAME = context.expand( '${#TestCase#TESTSUITE_NAME}' )
def remarks = context.expand( '${#TestCase#REMARKS}' )
def eXECUTION_START_TIME = context.expand( '${#TestCase#EXECUTION_START_TIME}' )
def tEST_STATUS = context.expand( '${#TestCase#TEST_STATUS}' )
def PON = context.expand( '${#TestCase#PHONE}' )
def CUSTOMER = context.expand( '${#TestCase#CUSTOMER}' )
def filedirname = rESULTS_FILE_PATH + "/Results"+"/"+currenDate2
File filedirpath = new File(filedirname)
if(!filedirpath.exists()){
	filedirpath.mkdirs()
}
def filename = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".html"
def filexmlname = rESULTS_FILE_PATH + "/Results/"+currenDate2+"/" + tESTSUITE_NAME + currenDate2 +".xml"
def xslfilename = rESULTS_FILE_PATH + "/Results/catelog.xsl"


File filepath = new File(filexmlname)
def update = new XMLReportGenerator()

update.generateXMLReport(filepath, testcasenumber,tc_NAME , tESTCASE_NAME, tEST_STATUS,
				eXECUTION_START_TIME, currenDate1, remarks, PON,CUSTOMER)
				

def generate=new HTMLReportGenerator();
generate.generateReport(xslfilename,filexmlname,filename)
</script></con:config></con:testStep><con:testStep type="delay" name="End" id="202fefc4-a31b-40fe-9e5b-f60d1e66c736"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("VER","00")</con:setupScript><con:tearDownScript>testRunner.testCase.testSuite.project.testSuites["Report"].testCases["Reporting"].testSteps["CSVFile"].run(testRunner, context);
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "http log" );
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def xmlFileLocation = context.expand( '${#Project#DATA_REPOSITORY}' )
def logFile = new File(xmlFileLocation + "/SoapUILogs/http log.txt")
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
              logFile.append(model.getElementAt( c ).toString() + "\r\n")
        
   }</con:tearDownScript><con:properties><con:property><con:name>TC_TYPE</con:name><con:value>LIDB</con:value></con:property><con:property><con:name>FLOW</con:name><con:value>NOFLOW</con:value></con:property><con:property><con:name>EXECUTIONFLAG</con:name><con:value>FALSE</con:value></con:property><con:property><con:name>TESTCASENUMBER</con:name><con:value>6</con:value></con:property><con:property><con:name>EXECUTION_START_TIME</con:name><con:value>05/19/2017 10:17:03 PM</con:value></con:property><con:property><con:name>TC_NAME</con:name><con:value>LIDB_Targus_Ack_Accept</con:value></con:property><con:property><con:name>HEADER</con:name><con:value>REQ_HEADER</con:value></con:property><con:property><con:name>BODY</con:name><con:value>LIDB_Targus_Ack_Accept</con:value></con:property><con:property><con:name>REQUEST</con:name><con:value>Subscriber_Record_Request</con:value></con:property><con:property><con:name>SUBREQUEST</con:name><con:value>LIDBRequest</con:value></con:property><con:property><con:name>ILEC</con:name><con:value>TARGUS</con:value></con:property><con:property><con:name>HEADERVER</con:name><con:value>1_0</con:value></con:property><con:property><con:name>OTCNUMBER</con:name><con:value>031903</con:value></con:property><con:property><con:name>PHONE</con:name><con:value>234-503-1903</con:value></con:property><con:property><con:name>DDD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">05-19-2017</con:value></con:property><con:property><con:name>CURR_DT</con:name><con:value>05-19-2017-1017PM</con:value></con:property><con:property><con:name>REMARKS</con:name><con:value/></con:property><con:property><con:name>STATUS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SVCTYP</con:name><con:value/></con:property><con:property><con:name>RESRAWINRESQUE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>CHANNELNAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">TARGUS</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>PAT_TPE</con:value></con:property><con:property><con:name>USERNAME</con:name><con:value>example</con:value></con:property><con:property><con:name>PASSWORD</con:name><con:value>example</con:value></con:property><con:property><con:name>FIRSTFLOW</con:name><con:value>1</con:value></con:property><con:property><con:name>RECEIVERESPONSE</con:name><con:value/></con:property><con:property><con:name>MESSAGETYPE</con:name><con:value/></con:property><con:property><con:name>BODYASRC</con:name><con:value/></con:property><con:property><con:name>RESPONSEFILE</con:name><con:value/></con:property><con:property><con:name>RESPONSEMECHANISM</con:name><con:value/></con:property><con:property><con:name>TEST_STATUS</con:name><con:value>Pass</con:value></con:property><con:property><con:name>VER</con:name><con:value>00</con:value></con:property><con:property><con:name>TIMEOUT</con:name><con:value>5000</con:value></con:property><con:property><con:name>TESTSUITE_NAME</con:name><con:value>LIDB</con:value></con:property><con:property><con:name>TEST_NAME</con:name><con:value>LIDB</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:requirements/><con:properties><con:property><con:name>CHRequestURL</con:name><con:value>http://stomvqavchapi3.va.neustar.com:8001/axis/services/SOAPRequestHandler</con:value></con:property><con:property><con:name>CH_DBSTRING</con:name><con:value>jdbc:oracle:thin:basic_qa/basic_qa123@10.61.2.181:2115:nfclqa2</con:value></con:property><con:property><con:name>CHPEP_DBSTRING</con:name><con:value>jdbc:oracle:thin:chpep_pat/chpep_pat123@stomcqa-clu2-scan.va.neustar.com:2115:omspat2</con:value></con:property><con:property><con:name>DB_DRIVER</con:name><con:value>oracle.jdbc.driver.OracleDriver</con:value></con:property><con:property><con:name>CUSTOMER</con:name><con:value>CCST_E2E</con:value></con:property><con:property><con:name>API_password</con:name><con:value>example</con:value></con:property><con:property><con:name>API_username</con:name><con:value>example</con:value></con:property><con:property><con:name>CUSTOMERSYNC</con:name><con:value>PAT_FILE</con:value></con:property><con:property><con:name>APIsync_password</con:name><con:value>mmay</con:value></con:property><con:property><con:name>APIsync_username</con:name><con:value>mmay</con:value></con:property><con:property><con:name>DATA_REPOSITORY</con:name><con:value>${projectDir}/DATA_REPOSITORY</con:value></con:property><con:property><con:name>GMTHoursOffset</con:name><con:value>5</con:value></con:property><con:property><con:name>ProduceReports</con:name><con:value>true</con:value></con:property><con:property><con:name>ATT_ASR_Response_URL</con:name><con:value>http://10.61.4.149:56989/axis/services/IxcOrderSvcPort</con:value></con:property><con:property><con:name>Frontier_ASR_Response_URL</con:name><con:value>http://10.61.4.149:56989/axis/services/FrontierWebService</con:value></con:property><con:property><con:name>Cox_ASR_Response_URL</con:name><con:value>http://192.168.73.10:3292/axis/services/COXCommunicationWebService</con:value></con:property><con:property><con:name>FPC_ASR_Response_URL</con:name><con:value>http://10.61.4.149:56989/axis/services/FairPointWebService</con:value></con:property><con:property><con:name>VZW_ASR_Response_URL</con:name><con:value>http://192.168.73.10:3292/axis/services/AsrResponseReceiverSEI</con:value></con:property><con:property><con:name>PEP_DB_VALIDATION_FLAG</con:name><con:value>ON</con:value></con:property><con:property><con:name>BASIC_DB_VALIDATION_FLAG</con:name><con:value>OFF</con:value></con:property><con:property><con:name>RESPONSE_MESSAGE_QUEUE_FLAG</con:name><con:value>OFF</con:value></con:property><con:property><con:name>WTN_DBSTRING</con:name><con:value>jdbc:oracle:thin:chimgtwy_pat/chimgtwy_pat123@10.61.2.40:2115:nfclpat1</con:value></con:property><con:property><con:name>WTN_TABLE_NAME</con:name><con:value>TWC_PORTOUT_DATA</con:value></con:property></con:properties><con:encryptedContent xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/><con:authRepository/><con:tags/></con:soapui-project>